/// Primary Todo entity managed by end users. Stores owner reference, core
/// textual fields, due date, lifecycle status (open/completed), and temporal
/// fields. Activity and deletion audit data are captured in {@link
/// todo_app_todo_activities} and {@link todo_app_todo_deletion_events}.
/// Ownership is enforced via FK to {@link todo_app_users}.
///
/// @namespace Todos
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_todos {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Owner user's {@link todo_app_users.id}. Establishes ownership and access
  /// isolation.
  todo_app_user_id String
  
  /// Required short text title of the todo. Business rule: 1–120 characters
  /// after trimming; must include at least one non-whitespace character.
  title String
  
  /// Optional longer text description of the todo, up to 1000–2000 characters
  /// by policy. Not used for derived values.
  description String?
  
  /// Optional due date/time interpreted in the owner’s timezone. Used for
  /// overdue/today/future filters; not restricted to future-only unless policy
  /// dictates.
  due_at DateTime?
  
  /// Lifecycle status of the todo. Expected values: 'open' or 'completed'
  /// (business-level).
  status String
  
  /// Timestamp recorded when the todo is marked completed; cleared when
  /// reopened.
  completed_at DateTime?
  
  /// Creation timestamp for the todo (system-managed).
  created_at DateTime
  
  /// Last modification timestamp for the todo (system-managed).
  updated_at DateTime
  
  /// Soft deletion timestamp. When set, the todo is excluded from normal
  /// listings. Enables recovery windows per policy.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  owner todo_app_users @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  todo_app_todo_activities todo_app_todo_activities[]
  todo_app_todo_deletion_events todo_app_todo_deletion_events[]
  todo_app_business_events todo_app_business_events[]
  todo_app_event_counters_daily todo_app_event_counters_daily[]
  
  @@index([todo_app_user_id, created_at])
  @@index([todo_app_user_id, status, due_at])
  @@index([status, due_at])
  @@index([created_at])
}

/// Historical activity records (audit trail) for todos. Captures
/// append-mostly events such as create, update, complete, reopen, and delete
/// requests with actor and occurred_at time. References {@link
/// todo_app_todos} and {@link todo_app_users}. To preserve audit history
/// beyond parent deletion, the foreign keys are nullable and configured for
/// onDelete: SetNull.
///
/// @namespace Todos
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_todo_activities {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Target todo’s {@link todo_app_todos.id}. Nullable to preserve audit
  /// records if the todo is purged; onDelete: SetNull.
  todo_app_todo_id String?
  
  /// Actor user’s {@link todo_app_users.id}. Nullable to preserve audit
  /// records if the user account is purged; onDelete: SetNull.
  todo_app_user_id String?
  
  /// Type of activity event. Expected values include: 'create', 'update',
  /// 'complete', 'reopen', 'delete'.
  activity_type String
  
  /// Optional human-readable details for the activity (no sensitive secrets).
  details String?
  
  /// Optional list of changed field names for update events (comma-separated
  /// or structured text).
  changed_fields String?
  
  /// Optional prior status value when applicable (e.g., 'open' or 'completed').
  previous_status String?
  
  /// Optional next status value when applicable (e.g., 'open' or 'completed').
  next_status String?
  
  /// Business-event timestamp when the activity occurred.
  occurred_at DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record update timestamp (rarely used; audit records are typically
  /// append-only).
  updated_at DateTime
  
  /// Soft deletion timestamp for erroneous or redacted records under
  /// exceptional policies.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  todo todo_app_todos? @relation(fields: [todo_app_todo_id], references: [id], onDelete: Cascade)
  actor todo_app_users? @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  @@index([todo_app_todo_id, occurred_at])
  @@index([todo_app_user_id, occurred_at])
  @@index([activity_type, occurred_at])
  @@index([occurred_at])
}

/// Point-in-time deletion audit entries for todos. Records who deleted the
/// todo and when, with optional human-readable reason. Complements
/// soft-delete policy and supports privacy/audit requirements. References
/// {@link todo_app_todos} and {@link todo_app_users}. To preserve audit
/// history beyond parent deletion, the foreign keys are nullable and
/// configured for onDelete: SetNull.
///
/// @namespace Todos
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_todo_deletion_events {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Deleted todo’s {@link todo_app_todos.id}. Nullable to preserve audit
  /// records if the todo is purged; onDelete: SetNull.
  todo_app_todo_id String?
  
  /// Deleting actor’s {@link todo_app_users.id}. Nullable to preserve audit
  /// records if the user account is purged; onDelete: SetNull.
  todo_app_user_id String?
  
  /// Optional human-readable reason or context for deletion (no secrets).
  reason String?
  
  /// Business-event timestamp when deletion occurred.
  occurred_at DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record update timestamp (normally static after insert).
  updated_at DateTime
  
  /// Soft deletion timestamp used only for administrative redaction under
  /// policy.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  todo todo_app_todos? @relation(fields: [todo_app_todo_id], references: [id], onDelete: Cascade)
  deleter todo_app_users? @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  @@index([todo_app_todo_id, occurred_at])
  @@index([todo_app_user_id, occurred_at])
  @@index([occurred_at])
}