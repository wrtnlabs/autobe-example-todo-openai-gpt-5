/// Authentication session records for signed-in users. Each session belongs
/// to a single user ({@link todo_app_users}) and tracks issuance,
/// expiration, client metadata, and optional revocation details. Used to
/// authorize access tokens and to support session revocation workflows.
/// Sessions are security-sensitive and typically short-lived.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_sessions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Owning user's {@link todo_app_users.id}.
  todo_app_user_id String
  
  /// Opaque, randomly generated session token used to authenticate requests
  /// for this session. Must be unique and non-guessable.
  session_token String
  
  /// Client IP address (IPv4/IPv6) observed when the session was established
  /// or last used.
  ip String?
  
  /// Client user agent string captured at session creation for security
  /// analytics and device recognition.
  user_agent String?
  
  /// Timestamp when the session was issued.
  issued_at DateTime
  
  /// Timestamp when the session expires and is no longer valid.
  expires_at DateTime
  
  /// Timestamp when the session was revoked, if applicable.
  revoked_at DateTime?
  
  /// Human-readable reason for revocation, if known (e.g., user logout,
  /// password change, admin action).
  revoked_reason String?
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user todo_app_users @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  todo_app_refresh_tokens todo_app_refresh_tokens[]
  todo_app_session_revocations todo_app_session_revocations?
  todo_app_business_events todo_app_business_events[]
  
  @@unique([session_token])
  @@index([todo_app_user_id, created_at])
  @@index([expires_at])
  @@index([todo_app_user_id, expires_at])
}

/// Refresh token chain for sessions. Each token belongs to one session
/// ({@link todo_app_sessions}) and can optionally reference its parent token
/// for rotation chains. Supports rotation, revocation, and expiry management
/// for long-lived authentication. For security, store only a one-way hash of
/// the raw token in token_hash and avoid persisting plaintext tokens.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_refresh_tokens {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Associated session's {@link todo_app_sessions.id}.
  todo_app_session_id String
  
  /// Previous refresh token in the rotation chain. Self-reference {@link
  /// todo_app_refresh_tokens.id}.
  parent_id String?
  
  /// Opaque refresh token value. Deprecated for security; prefer storing only
  /// token_hash.
  token String
  
  /// One-way hash (e.g., SHA-256) of the refresh token. Used for lookup and
  /// uniqueness to avoid storing plaintext tokens.
  token_hash String
  
  /// Timestamp when this refresh token was issued.
  issued_at DateTime
  
  /// Timestamp when this refresh token expires.
  expires_at DateTime
  
  /// Timestamp when this token was rotated (replaced) by a child token, if
  /// applicable.
  rotated_at DateTime?
  
  /// Timestamp when this token was revoked, if applicable.
  revoked_at DateTime?
  
  /// Reason for token revocation, if known (e.g., password change, security
  /// event).
  revoked_reason String?
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  session todo_app_sessions @relation(fields: [todo_app_session_id], references: [id], onDelete: Cascade)
  parent todo_app_refresh_tokens? @relation("recursive", fields: [parent_id], references: [id], onDelete: Cascade)
  
  recursive todo_app_refresh_tokens[] @relation("recursive")
  
  @@unique([token])
  @@unique([token_hash])
  @@index([parent_id])
  @@index([todo_app_session_id, created_at])
  @@index([expires_at])
}

/// Email verification tokens for account activation or email change flows.
/// Each record targets a specific user ({@link todo_app_users}) and email
/// address and tracks delivery, expiry, and consumption for auditability.
/// For security, store a one-way token_hash instead of plaintext.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_email_verifications {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Target user's {@link todo_app_users.id}.
  todo_app_user_id String
  
  /// Opaque email verification token. Deprecated for security; prefer storing
  /// only token_hash.
  token String
  
  /// One-way hash (e.g., SHA-256) of the verification token for lookup and
  /// uniqueness.
  token_hash String
  
  /// Email address being verified (may be the current or new email for the
  /// account).
  target_email String
  
  /// Timestamp when the verification message was sent.
  sent_at DateTime
  
  /// Timestamp when the verification token expires.
  expires_at DateTime
  
  /// Timestamp when the token was successfully consumed, if applicable.
  consumed_at DateTime?
  
  /// Number of failed verification attempts associated with this token for
  /// rate-limiting and auditing.
  failure_count Int
  
  /// Client IP address from which the token was consumed, if available.
  consumed_by_ip String?
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user todo_app_users @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  @@unique([token])
  @@unique([token_hash])
  @@index([todo_app_user_id, created_at])
  @@index([target_email, created_at])
  @@index([expires_at])
}

/// Password reset requests and tokens. May reference the user ({@link
/// todo_app_users}) when identifiable, while still allowing
/// privacy-preserving requests by email only. Tracks expiry and consumption
/// for security and audit. For security, store a one-way token_hash instead
/// of plaintext.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_password_resets {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Related user's {@link todo_app_users.id} when the email maps to an
  /// existing account. Nullable for privacy-preserving requests.
  todo_app_user_id String?
  
  /// Email address provided for the reset request. Stored for processing and
  /// messaging even if no user exists.
  email String
  
  /// Opaque password reset token. Deprecated for security; prefer storing only
  /// token_hash.
  token String
  
  /// One-way hash (e.g., SHA-256) of the reset token for lookup and uniqueness.
  token_hash String
  
  /// Timestamp when the reset was requested.
  requested_at DateTime
  
  /// Timestamp when the reset token expires.
  expires_at DateTime
  
  /// Timestamp when the reset token was used, if applicable.
  consumed_at DateTime?
  
  /// Client IP address that initiated the reset request, if available.
  requested_by_ip String?
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user todo_app_users? @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  @@unique([token])
  @@unique([token_hash])
  @@index([todo_app_user_id])
  @@index([email, requested_at])
  @@index([expires_at])
}

/// Per-attempt authentication outcomes for brute-force protection, abuse
/// detection, and security analytics. Attempts may or may not map to an
/// existing user; both are recorded for rate-limiting and forensics.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_login_attempts {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Resolved user's {@link todo_app_users.id} when the attempted email maps
  /// to an account; null otherwise.
  todo_app_user_id String?
  
  /// Email address used for the login attempt (as entered).
  email String
  
  /// Whether the login attempt succeeded (true) or failed (false).
  success Boolean
  
  /// Client IP address for the attempt.
  ip String
  
  /// User agent string of the client, if available.
  user_agent String?
  
  /// Optional reason for failure (e.g., invalid_credentials, suspended).
  failure_reason String?
  
  /// Timestamp when the attempt occurred.
  occurred_at DateTime
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user todo_app_users? @relation(fields: [todo_app_user_id], references: [id], onDelete: Cascade)
  
  @@index([email, occurred_at])
  @@index([ip, occurred_at])
  @@index([todo_app_user_id, occurred_at])
}

/// Explicit revocation records for sessions. Enforces one revocation record
/// per session to capture who revoked the session and why. Used to audit
/// logout, security actions, or administrative revocations.
///
/// @namespace Auth
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model todo_app_session_revocations {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Target session's {@link todo_app_sessions.id}.
  todo_app_session_id String
  
  /// Timestamp when the session was revoked.
  revoked_at DateTime
  
  /// Actor category performing the revocation (e.g., user, system, admin).
  revoked_by String
  
  /// Human-readable reason for revocation, if available.
  reason String?
  
  /// Record creation time.
  created_at DateTime
  
  /// Record last update time.
  updated_at DateTime
  
  /// Soft deletion time if the record is logically removed.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  session todo_app_sessions @relation(fields: [todo_app_session_id], references: [id], onDelete: Cascade)
  
  @@unique([todo_app_session_id])
  
  @@index([revoked_at])
  @@index([todo_app_session_id, revoked_at])
}