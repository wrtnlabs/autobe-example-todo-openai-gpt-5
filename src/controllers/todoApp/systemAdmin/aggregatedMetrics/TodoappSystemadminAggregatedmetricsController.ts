import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchtodoAppSystemAdminAggregatedMetrics } from "../../../../providers/patchtodoAppSystemAdminAggregatedMetrics";
import { SystemadminAuth } from "../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../decorators/payload/SystemadminPayload";
import { gettodoAppSystemAdminAggregatedMetricsAggregatedMetricId } from "../../../../providers/gettodoAppSystemAdminAggregatedMetricsAggregatedMetricId";

import { IPageITodoAppAggregatedMetric } from "../../../../api/structures/IPageITodoAppAggregatedMetric";
import { ITodoAppAggregatedMetric } from "../../../../api/structures/ITodoAppAggregatedMetric";

@Controller("/todoApp/systemAdmin/aggregatedMetrics")
export class TodoappSystemadminAggregatedmetricsController {
  /**
   * Search and paginate aggregated metrics (todo_app_aggregated_metrics).
   *
   * This operation returns a paginated list of historical aggregated metric
   * snapshots stored in the todo_app_aggregated_metrics table. As documented in
   * the Prisma schema, each row represents a metric value (value with unit)
   * over a defined time window (period_start to period_end) and includes a
   * metric_key and granularity (e.g., hour/day/week/month). Optional foreign
   * keys todo_app_user_id and todo_app_event_type_id allow scoping the snapshot
   * to a particular user or event type. This endpoint is intended for
   * observability and KPI dashboards and is strictly read-only.
   *
   * Access is restricted to authorized administrators because aggregated
   * performance and usage metrics can reveal sensitive operational patterns.
   * The endpoint does not expose private todo content; it only returns numeric
   * values and identifying references per the schema. Authorization is
   * expressed at the endpoint level via the systemAdmin role, with additional
   * checks performed in business logic as needed.
   *
   * The response includes pagination, and clients can filter by metric_key,
   * granularity, and time window using the request body
   * (ITodoAppAggregatedMetric.IRequest). Consumers can also filter by optional
   * dimensions (todo_app_user_id, todo_app_event_type_id). For efficient
   * querying and search, the model defines indexes on period_start/period_end,
   * metric_key, user/event dimensions, and trigram search on metric_key.
   * Records where deleted_at is set should be treated as archived and excluded
   * by default. Related tables include todo_app_event_types and todo_app_users,
   * referenced by optional foreign keys to provide dimensional context.
   *
   * This operation is typically used together with GET
   * /todoApp/systemAdmin/aggregatedMetrics/{aggregatedMetricId} for detail
   * retrieval. Clients should first narrow the list through this search
   * endpoint and then use the detail endpoint to fetch a specific snapshot by
   * its identifier.
   *
   * @param connection
   * @param body Search, filtering, and pagination parameters for aggregated
   *   metrics.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedBody()
    body: ITodoAppAggregatedMetric.IRequest,
  ): Promise<IPageITodoAppAggregatedMetric.ISummary> {
    try {
      return await patchtodoAppSystemAdminAggregatedMetrics({
        systemAdmin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Get details of a single aggregated metric (todo_app_aggregated_metrics) by
   * ID.
   *
   * This operation fetches a single record from todo_app_aggregated_metrics
   * using its primary key id (UUID). Each row represents an aggregated metric
   * with fields including metric_key, granularity, period_start, period_end,
   * value, unit, and optional dimensions todo_app_user_id and
   * todo_app_event_type_id, as described in the Prisma schema comments. The
   * record also contains created_at and updated_at timestamps for lineage and
   * an optional deleted_at that indicates archival.
   *
   * Security considerations: access is restricted to administrative users with
   * the systemAdmin role because operational metrics can reveal sensitive
   * service characteristics. The endpoint does not return private todo text or
   * user credentialsâ€”only the numeric metric snapshot and dimension
   * identifiers. If the requested id does not exist or corresponds to a record
   * considered archived (deleted_at not null), the implementation should return
   * a not found response as appropriate.
   *
   * Use this endpoint after discovering candidate records via PATCH
   * /todoApp/systemAdmin/aggregatedMetrics. It is optimized for detail
   * inspection of a single metric snapshot, helping administrators trace or
   * validate KPI computations at a precise time window.
   *
   * @param connection
   * @param aggregatedMetricId Identifier of the aggregated metric snapshot
   *   (UUID).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":aggregatedMetricId")
  public async at(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("aggregatedMetricId")
    aggregatedMetricId: string & tags.Format<"uuid">,
  ): Promise<ITodoAppAggregatedMetric> {
    try {
      return await gettodoAppSystemAdminAggregatedMetricsAggregatedMetricId({
        systemAdmin,
        aggregatedMetricId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
