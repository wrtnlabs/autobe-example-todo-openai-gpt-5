import { tags } from "typia";

/**
 * A page container.
 *
 * This generic pagination wrapper provides page metadata and an array of
 * records. It is used by administrative and user-facing list endpoints
 * throughout the service.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPage = {
  /**
   * Page information.
   *
   * Contains numeric indicators for the current page, record limit per page,
   * total records, and total pages. This standard structure is used across
   * list endpoints and does not include business data.
   */
  pagination: IPage.IPagination;

  /**
   * Array of records for the current page.
   *
   * IMPORTANT: concrete IPage specializations must specify the precise item
   * schema (e.g., IPageITodoAppGuestVisitor.ISummary). This base schema
   * remains generic in the draft layer.
   */
  data: {}[];
};
export namespace IPage {
  /** Page information. */
  export type IPagination = {
    /** Current page number. */
    current: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** Limitation of records per a page. */
    limit: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** Total records in the database. */
    records: number & tags.Type<"int32"> & tags.Minimum<0>;

    /**
     * Total pages.
     *
     * Equal to {@link records} / {@link limit} with ceiling.
     */
    pages: number & tags.Type<"int32"> & tags.Minimum<0>;
  };

  /**
   * Standard pagination request parameters used by list/search operations.
   *
   * Both fields are optional and may be null to accept service defaults,
   * ensuring consistent pagination input across endpoints.
   */
  export type IRequest = {
    /**
     * Desired page number (1-based). When null or omitted, defaults to the
     * service policy (commonly 1).
     *
     * Applied uniformly across list/search endpoints as the standard page
     * selector.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Requested page size. Typical allowed range is 1â€“100 with a
     * conventional default of 20.
     *
     * When null or omitted, the service applies its default page size.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };
}
