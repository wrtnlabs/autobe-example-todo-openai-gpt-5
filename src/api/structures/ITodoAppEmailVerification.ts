import { tags } from "typia";

/**
 * Email verification record for account activation or email change.
 *
 * SECURITY: Sensitive token/token_hash fields from Prisma are intentionally
 * excluded from response types. This schema exposes only metadata fields
 * necessary for clients to evaluate verification status and timing.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppEmailVerification = {
  /**
   * Primary key of the email verification record.
   *
   * Prisma: todo_app_email_verifications.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner user's identifier.
   *
   * Prisma: todo_app_email_verifications.todo_app_user_id (FK to
   * todo_app_users.id).
   */
  todo_app_user_id: string & tags.Format<"uuid">;

  /**
   * Email address subject to verification.
   *
   * Prisma: todo_app_email_verifications.target_email.
   */
  target_email: string & tags.Format<"email">;

  /**
   * Timestamp when the verification message was sent.
   *
   * Prisma: todo_app_email_verifications.sent_at (timestamptz).
   */
  sent_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the verification token expires.
   *
   * Prisma: todo_app_email_verifications.expires_at (timestamptz).
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the token was consumed.
   *
   * Prisma: todo_app_email_verifications.consumed_at (nullable timestamptz).
   */
  consumed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Number of failed verification attempts associated with this token.
   *
   * Prisma: todo_app_email_verifications.failure_count (int).
   */
  failure_count: number & tags.Type<"int32">;

  /**
   * Client IP (text) from which the token was consumed, if available.
   *
   * Prisma: todo_app_email_verifications.consumed_by_ip (nullable).
   */
  consumed_by_ip?: string | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Prisma: todo_app_email_verifications.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma: todo_app_email_verifications.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppEmailVerification {
  /**
   * Request payload to confirm an email verification.
   *
   * This DTO corresponds to the consumption of a verification token tracked
   * in `todo_app_email_verifications`. It accepts only the opaque token and
   * never exposes or accepts sensitive system fields (like `token_hash`) or
   * actor IDs.
   */
  export type IConfirm = {
    /**
     * Opaque email verification token delivered to the user.
     *
     * The server validates this by hashing and comparing with
     * `todo_app_email_verifications.token_hash`. The plaintext token must
     * never be stored in the database or logged.
     */
    token: string;
  };

  /**
   * Summary view of an email verification suitable for list pages.
   *
   * Omits secrets and focuses on lifecycle status and timing.
   */
  export type ISummary = {
    /** Verification record identifier. */
    id: string & tags.Format<"uuid">;

    /** Email address being verified. */
    target_email: string & tags.Format<"email">;

    /** When the verification message was sent. */
    sent_at: string & tags.Format<"date-time">;

    /** When the token expires. */
    expires_at: string & tags.Format<"date-time">;

    /** When the token was consumed, if applicable. */
    consumed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Failed verification attempts count for this token. */
    failure_count: number & tags.Type<"int32">;
  };

  /**
   * Email verification resend request body.
   *
   * This request type is used by public verification workflows to create a
   * new verification entry in the Auth domain backed by Prisma model
   * `todo_app_email_verifications`. Providers generate a token, persist only
   * a one-way hash, and deliver the message out-of-band.
   *
   * Security note: this request must not reveal whether the email exists. The
   * server validates the address format and proceeds with a
   * privacy‑preserving acknowledgment.
   */
  export type IResendRequest = {
    /**
     * Target email address to (re)send a verification message to.
     *
     * Business rule: must be a syntactically valid email address. The
     * underlying verification record will be created in
     * `todo_app_email_verifications` with fields like `token_hash`,
     * `target_email`, `sent_at`, and `expires_at`. The raw token is never
     * persisted.
     */
    email: string & tags.Format<"email">;
  };

  /**
   * Search, filter, sort, and paginate email verification records.
   *
   * Maps to Prisma table todo_app_email_verifications. All fields here are
   * request-only filters and do not correspond to persisted columns except
   * where explicitly noted (e.g., sent_at, expires_at, failure_count).
   */
  export type IRequest = {
    /**
     * Page number for pagination (uint32 in business terms). When null,
     * service default is applied.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Maximum records per page (1–100 typical). When null, service default
     * is applied.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Filter lower bound (inclusive) for sent_at.
     *
     * Prisma: todo_app_email_verifications.sent_at.
     */
    sent_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter upper bound (inclusive) for sent_at.
     *
     * Prisma: todo_app_email_verifications.sent_at.
     */
    sent_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter lower bound (inclusive) for expires_at.
     *
     * Prisma: todo_app_email_verifications.expires_at.
     */
    expires_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter upper bound (inclusive) for expires_at.
     *
     * Prisma: todo_app_email_verifications.expires_at.
     */
    expires_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Consumption state filter derived from consumed_at.
     *
     * True ⇒ consumed_at IS NOT NULL; false ⇒ consumed_at IS NULL; null ⇒
     * no filter.
     */
    consumed?: boolean | null | undefined;

    /**
     * Minimum failure_count (inclusive) filter.
     *
     * Prisma: todo_app_email_verifications.failure_count.
     */
    failure_count_min?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Maximum failure_count (inclusive) filter.
     *
     * Prisma: todo_app_email_verifications.failure_count.
     */
    failure_count_max?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Optional target email filter.
     *
     * Prisma: todo_app_email_verifications.target_email.
     */
    target_email?: (string & tags.Format<"email">) | null | undefined;

    /**
     * Sort key for results. Defaults are implementation-defined; common
     * default is sent_at desc.
     */
    order_by?:
      | "sent_at"
      | "expires_at"
      | "created_at"
      | "failure_count"
      | null
      | undefined;

    /**
     * Sort direction for order_by.
     *
     * Allowed values: asc | desc.
     */
    order_dir?: "asc" | "desc" | null | undefined;
  };
}
