import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";
import { EGuestVisitorOrderBy } from "./EGuestVisitorOrderBy";
import { ESortDirection } from "./ESortDirection";

/**
 * Guest visitor role assignment history record.
 *
 * Represents one grant/revoke period for the guestVisitor role as recorded in
 * Prisma model Actors.todo_app_guestvisitors. Multiple rows may exist for a
 * user over time to preserve audit history.
 *
 * This type is read-only from client perspective; creation and updates are
 * governed by system workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppGuestVisitor = {
  /**
   * Primary key.
   *
   * Maps to Actors.todo_app_guestvisitors.id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner user's UUID (FK to Actors.todo_app_users.id). Represents which
   * account held the guestVisitor role.
   */
  todo_app_user_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the guestVisitor role was granted.
   *
   * Maps to Actors.todo_app_guestvisitors.granted_at (timestamptz).
   */
  granted_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the role was revoked; null if currently active.
   *
   * Maps to Actors.todo_app_guestvisitors.revoked_at.
   */
  revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Maps to Actors.todo_app_guestvisitors.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Maps to Actors.todo_app_guestvisitors.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for retention. When non-null, the record is
   * excluded from normal listings
   * (Actors.todo_app_guestvisitors.deleted_at).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppGuestVisitor {
  /**
   * Guest join payload used to create a temporary account and initiate
   * authentication.
   *
   * References Prisma models:
   *
   * - Todo_app_users: email (optional), password_hash (server-managed),
   *   status/email_verified/verified_at timestamps.
   * - Todo_app_sessions: a session will be created after join.
   * - Todo_app_refresh_tokens: an initial refresh token entry will be created.
   */
  export type IJoin = {
    /**
     * Optional email to associate with the guest account. If provided, it
     * populates todo_app_users.email.
     *
     * No password or actor/system fields are accepted; password hashing and
     * lifecycle fields (status, email_verified, verified_at) are
     * server-managed according to the Actors schema.
     */
    email?: (string & tags.Format<"email">) | null | undefined;
  };

  /**
   * Refresh token rotation request for guestVisitor.
   *
   * References Prisma models:
   *
   * - Todo_app_refresh_tokens: token_hash lookup, issued_at/expires_at,
   *   rotated_at/revoked_at.
   * - Todo_app_sessions: session validity (expires_at) and potential revocation
   *   (revoked_at).
   */
  export type IRefreshRequest = {
    /**
     * Opaque refresh token string to rotate.
     *
     * Server validates against todo_app_refresh_tokens by token_hash,
     * honors expires_at, and enforces single-use via rotated_at.
     */
    refresh_token: string;
  };

  /**
   * Authorization response for guestVisitor after join/refresh.
   *
   * Contains subject id and authorization token information. No password or
   * secret fields are exposed.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated subject (guest account id). */
    id: string & tags.Format<"uuid">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Search and pagination request for guestVisitor role assignments.
   *
   * This request body is used by administrative endpoints that list role
   * assignment history for a specific user (scoped by path). It never accepts
   * identity fields (e.g., user IDs); the path/user context provides
   * scoping.
   *
   * References Prisma model Actors.todo_app_guestvisitors.
   */
  export type IRequest = {
    /** Page number (uint32). See IPage.IRequest for defaults. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Records per page (uint32). Defaults and bounds follow IPage.IRequest. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /**
     * When true, returns only currently-active assignments (revoked_at IS
     * NULL).
     */
    active_only?: boolean | undefined;

    /**
     * Filter lower bound for granted_at (inclusive). RFC 3339 date-time
     * string.
     */
    granted_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter upper bound for granted_at (inclusive). RFC 3339 date-time
     * string.
     */
    granted_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter lower bound for revoked_at (inclusive). */
    revoked_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter upper bound for revoked_at (inclusive). */
    revoked_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Sort key for the result set. Corresponds to sortable columns on
     * todo_app_guestvisitors.
     */
    order_by?: EGuestVisitorOrderBy | undefined;

    /** Sort direction to apply together with order_by. */
    order_dir?: ESortDirection | undefined;
  };

  /**
   * Summary of a guestVisitor role assignment based on Prisma model
   * todo_app_guestvisitors.
   *
   * Captures grant and optional revoke timestamps without exposing private
   * content. This type is used in administrative list views to audit role
   * membership history.
   */
  export type ISummary = {
    /**
     * Primary key of the role assignment history record from Prisma model
     * todo_app_guestvisitors.id.
     *
     * Each record captures a grant/revoke event for the guestVisitor role.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Owner user's UUID referencing Prisma todo_app_users.id via
     * todo_app_guestvisitors.todo_app_user_id.
     *
     * Enforces which account this role history pertains to.
     */
    todo_app_user_id: string & tags.Format<"uuid">;

    /**
     * Timestamp from Prisma todo_app_guestvisitors.granted_at when the
     * guestVisitor role was granted.
     *
     * Used for ordering and audit timelines.
     */
    granted_at: string & tags.Format<"date-time">;

    /**
     * Nullable timestamp from Prisma todo_app_guestvisitors.revoked_at when
     * the role grant ended.
     *
     * Null indicates the grant is currently active.
     */
    revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Record creation timestamp from Prisma
     * todo_app_guestvisitors.created_at.
     *
     * Typically equals or follows granted_at.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp from Prisma
     * todo_app_guestvisitors.updated_at.
     *
     * Role assignment records are appendâ€‘mostly; updates are uncommon but
     * tracked for governance.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
