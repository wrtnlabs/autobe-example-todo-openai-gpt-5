import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * TodoUser role assignment history entry.
 *
 * This type represents a single record from the Prisma model todo_app_todousers
 * (Actors namespace). It captures when a user was granted the todoUser role
 * and, if applicable, when it was revoked. The model preserves multiple
 * grant/revoke cycles for auditability and is not user-editable per schema
 * comments.
 *
 * Security note: This is an administrative/audit-facing entity; avoid exposing
 * internal soft-delete columns (deleted_at) in public responses unless
 * explicitly required by governance tooling.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppTodoUser = {
  /**
   * Primary key of the role assignment history record.
   *
   * Maps to Prisma column todo_app_todousers.id. Value is a UUID string.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner account identifier.
   *
   * Maps to Prisma FK todo_app_todousers.todo_app_user_id →
   * todo_app_users.id. Identifies the user who held the todoUser role.
   */
  todo_app_user_id: string & tags.Format<"uuid">;

  /**
   * Grant timestamp for the todoUser role.
   *
   * Maps to Prisma column todo_app_todousers.granted_at (timestamptz).
   */
  granted_at: string & tags.Format<"date-time">;

  /**
   * Revocation timestamp when the role ended, or null when the assignment is
   * currently active.
   *
   * Maps to Prisma column todo_app_todousers.revoked_at (nullable
   * timestamptz).
   */
  revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Maps to Prisma column todo_app_todousers.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Maps to Prisma column todo_app_todousers.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppTodoUser {
  /**
   * Todo user registration (member) create request.
   *
   * This input maps to creating a new account in Prisma model
   * `todo_app_users` (Actors namespace). The server persists `email` and
   * derives `password_hash` from the provided plaintext `password`. Fields
   * such as `status`, `email_verified`, `verified_at`, and temporal columns
   * are managed server‑side.
   *
   * Security: request must not accept actor IDs or system‑managed timestamps.
   * The plaintext `password` appears only in transit and is never stored;
   * only a secure hash is saved in `todo_app_users.password_hash`.
   */
  export type ICreate = {
    /**
     * Unique email address used for sign‑in. Maps to `todo_app_users.email`
     * (unique).
     *
     * Business rule: must be a valid email address.
     */
    email: string & tags.Format<"email">;

    /**
     * Plaintext password to be hashed server‑side into
     * `todo_app_users.password_hash`.
     *
     * Business rule: length 8–64 characters as per MVP policy. Providers
     * may enforce additional complexity controls.
     */
    password: string & tags.MinLength<8> & tags.MaxLength<64>;
  };

  /**
   * Authorization response for todoUser (login/join/refresh).
   *
   * Provides subject id and JWT token information. Response excludes
   * password_hash and any secret material.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated todoUser. */
    id: string & tags.Format<"uuid">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request parameters for listing todoUser role assignment history
   * (todo_app_todousers).
   *
   * This request type supports pagination, sorting, and time-range filters
   * over granted_at/revoked_at and creation/update timestamps. It
   * intentionally excludes owner identifiers (todo_app_user_id) to comply
   * with security guidance—path parameters provide scoping in administrative
   * endpoints.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based typical). Optional; when null or
     * absent, service defaults apply.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Page size limit. Business rule range 1–100; default commonly 20. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Sort key among supported columns of todo_app_todousers. */
    sort?:
      | "granted_at"
      | "revoked_at"
      | "created_at"
      | "updated_at"
      | undefined;

    /** Sort direction corresponding to the chosen sort key. */
    direction?: "asc" | "desc" | undefined;

    /**
     * When true, returns only currently-active assignments (revoked_at IS
     * NULL).
     */
    activeOnly?: boolean | undefined;

    /**
     * Lower bound (inclusive) on granted_at for filtering. ISO 8601,
     * timestamptz.
     */
    granted_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Upper bound (inclusive) on granted_at for filtering. ISO 8601,
     * timestamptz.
     */
    granted_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Lower bound (inclusive) on revoked_at for filtering assignments that
     * have been revoked.
     */
    revoked_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Upper bound (inclusive) on revoked_at for filtering assignments that
     * have been revoked.
     */
    revoked_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Lower bound (inclusive) on created_at for audit/timeline filters. */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound (inclusive) on created_at for audit/timeline filters. */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Lower bound (inclusive) on updated_at for audit/timeline filters. */
    updated_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound (inclusive) on updated_at for audit/timeline filters. */
    updated_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of a todoUser role assignment record.
   *
   * This schema is optimized for list views, containing essential fields
   * only. It corresponds to the Prisma model todo_app_todousers and
   * intentionally omits internal lifecycle fields like deleted_at in
   * responses.
   */
  export type ISummary = {
    /**
     * Primary key of the role assignment history record.
     *
     * Maps to Prisma column todo_app_todousers.id (UUID).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Owner account identifier.
     *
     * Maps to Prisma FK todo_app_todousers.todo_app_user_id →
     * todo_app_users.id.
     */
    todo_app_user_id: string & tags.Format<"uuid">;

    /**
     * Grant timestamp for the todoUser role.
     *
     * Maps to Prisma column todo_app_todousers.granted_at (timestamptz).
     */
    granted_at: string & tags.Format<"date-time">;

    /**
     * Revocation timestamp when the role ended, or null when the assignment
     * is currently active.
     *
     * Maps to Prisma column todo_app_todousers.revoked_at (nullable
     * timestamptz).
     */
    revoked_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
