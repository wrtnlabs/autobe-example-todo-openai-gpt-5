import { tags } from "typia";

import { IESessionState } from "./IESessionState";
import { IESessionSortBy } from "./IESessionSortBy";
import { IEOrderDirection } from "./IEOrderDirection";

/**
 * Session entity describing an authenticated state as stored in
 * Auth.todo_mvp_sessions.
 *
 * Security note: Sensitive materials like session_token_hash (hashed bearer
 * token for lookup) are intentionally omitted from this response DTO, aligning
 * with the schema comment that plaintext tokens are never stored and with
 * security guidance to avoid exposing secrets.
 *
 * Relationship context: A session optionally links to either a user
 * (todo_mvp_user_id) or an admin (todo_mvp_admin_id). These are nullable to
 * support distinct actor types and guest flows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoMvpSession = {
  /**
   * Primary key of the session record.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key referencing Actors.todo_mvp_users.id for user-owned sessions.
   * Nullable because a session can belong to an admin or (for guest flows)
   * neither.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.todo_mvp_user_id (UUID,
   * nullable).
   */
  todo_mvp_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Foreign key referencing Actors.todo_mvp_admins.id for admin-owned
   * sessions. Nullable because a session can belong to a user or (for guest
   * flows) neither.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.todo_mvp_admin_id (UUID,
   * nullable).
   */
  todo_mvp_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Timestamp when the session was created (sign-in success time).
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.created_at (Timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the session record itself was last updated (e.g.,
   * rotation).
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.updated_at (Timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Most recent time the session was actively used, supporting inactivity
   * timeout policies.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.last_accessed_at
   * (Timestamptz).
   */
  last_accessed_at: string & tags.Format<"date-time">;

  /**
   * Absolute expiration time after which the session is no longer valid.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.expires_at (Timestamptz).
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking explicit revocation (e.g., logout). Null means not
   * revoked.
   *
   * Reference: Prisma column Auth.todo_mvp_sessions.revoked_at (Timestamptz,
   * nullable).
   */
  revoked_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoMvpSession {
  /**
   * Search, filter, sort, and pagination parameters for listing session
   * records from Auth.todo_mvp_sessions.
   *
   * This request DTO aligns with the Prisma model todo_mvp_sessions, which
   * records session lifecycle using created_at, updated_at, last_accessed_at,
   * expires_at, and revoked_at. Parameters intentionally avoid accepting any
   * user or admin IDs directly, honoring security guidance that actor
   * identity comes from authentication context rather than client input.
   *
   * All properties are optional. Providers may impose sensible defaults (for
   * example, sort_by = "last_accessed_at" and order = "desc").
   */
  export type IRequest = {
    /**
     * Page number for pagination.
     *
     * Business guidance: Defaults to the first page when omitted.
     * Pagination is recommended to keep responses predictable for typical
     * list sizes.
     *
     * This parameter does not map to a Prisma column; it is an API
     * convenience aligned with the pagination guidance in requirements.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records to return per page.
     *
     * Business guidance: Reasonable defaults and upper bounds are
     * recommended (e.g., 100) to meet responsiveness targets.
     *
     * This parameter does not map to a Prisma column; it is an API
     * convenience aligned with the pagination guidance in requirements.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<200>)
      | undefined;

    /**
     * Filter by session lifecycle state derived from columns in
     * Auth.todo_mvp_sessions.
     *
     * Mappings to Prisma columns:
     *
     * - "active": revoked_at is null AND expires_at is in the future.
     * - "revoked": revoked_at is not null.
     * - "expired": expires_at is in the past.
     * - "all": no additional lifecycle filtering.
     */
    state?: IESessionState | undefined;

    /**
     * Sort key constrained to lifecycle columns of Auth.todo_mvp_sessions
     * (e.g., created_at, last_accessed_at, expires_at, updated_at).
     */
    sort_by?: IESessionSortBy | undefined;

    /**
     * Order direction for the chosen sort key.
     *
     * Security: Input is constrained to a known set of values to avoid raw
     * SQL-like patterns.
     */
    order?: IEOrderDirection | undefined;

    /**
     * Lower bound (inclusive) for filtering by
     * Auth.todo_mvp_sessions.created_at.
     *
     * Reference: Prisma column todo_mvp_sessions.created_at (Timestamptz).
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound (inclusive) for filtering by
     * Auth.todo_mvp_sessions.created_at.
     *
     * Reference: Prisma column todo_mvp_sessions.created_at (Timestamptz).
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Lower bound (inclusive) for filtering by
     * Auth.todo_mvp_sessions.last_accessed_at.
     *
     * Reference: Prisma column todo_mvp_sessions.last_accessed_at
     * (Timestamptz).
     */
    last_accessed_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound (inclusive) for filtering by
     * Auth.todo_mvp_sessions.last_accessed_at.
     *
     * Reference: Prisma column todo_mvp_sessions.last_accessed_at
     * (Timestamptz).
     */
    last_accessed_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Lower bound (exclusive or inclusive per provider policy) for
     * filtering by Auth.todo_mvp_sessions.expires_at.
     *
     * Reference: Prisma column todo_mvp_sessions.expires_at (Timestamptz).
     */
    expires_after?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Upper bound (exclusive or inclusive per provider policy) for
     * filtering by Auth.todo_mvp_sessions.expires_at.
     *
     * Reference: Prisma column todo_mvp_sessions.expires_at (Timestamptz).
     */
    expires_before?: (string & tags.Format<"date-time">) | undefined;
  };
}
