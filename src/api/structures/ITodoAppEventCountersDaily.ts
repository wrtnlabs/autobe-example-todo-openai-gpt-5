import { tags } from "typia";

/**
 * Daily business event counters per dimensions.
 *
 * This schema represents the Prisma model todo_app_event_counters_daily, which
 * stores per‑day counts of business events keyed by event type and optional
 * user/todo dimensions. It preserves time‑series history for analytics and
 * governance.
 *
 * Columns include bucket_date (day start), count (integer), and optional
 * dimension references. History is append‑only and read‑oriented for KPI
 * queries.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppEventCountersDaily = {
  /**
   * Primary key of the daily counter row.
   *
   * Prisma column: todo_app_event_counters_daily.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Classified event type identifier referenced by this counter snapshot.
   *
   * Prisma column: todo_app_event_counters_daily.todo_app_event_type_id →
   * todo_app_event_types.id (FK).
   */
  todo_app_event_type_id: string & tags.Format<"uuid">;

  /**
   * Optional actor user dimension for the daily count.
   *
   * Prisma column: todo_app_event_counters_daily.todo_app_user_id →
   * todo_app_users.id (nullable).
   */
  todo_app_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional target Todo dimension for the daily count.
   *
   * Prisma column: todo_app_event_counters_daily.todo_app_todo_id →
   * todo_app_todos.id (nullable).
   */
  todo_app_todo_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Start of the calendar day (00:00:00) in the chosen reference timezone
   * representing the counting bucket.
   *
   * Prisma column: todo_app_event_counters_daily.bucket_date (timestamptz).
   */
  bucket_date: string & tags.Format<"date-time">;

  /**
   * Total number of events observed for the specified dimensions within the
   * bucket day.
   *
   * Prisma column: todo_app_event_counters_daily.count (integer).
   */
  count: number & tags.Type<"int32"> & tags.Minimum<0>;

  /**
   * Record creation timestamp.
   *
   * Prisma column: todo_app_event_counters_daily.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma column: todo_app_event_counters_daily.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppEventCountersDaily {
  /**
   * Request payload for searching and paginating daily event counters.
   *
   * This DTO targets the Prisma model todo_app_event_counters_daily and
   * supports administrative analytics: pagination, optional dimension filters
   * (event type, user, todo), date range constraints, and sorting.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based). Defaults are service-defined.
     *
     * Derived from standard pagination patterns (1..n).
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Page size limit (1–100). Typical default is 20.
     *
     * Business rule derived from listing conventions.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Filter by classified event type (FK to todo_app_event_types.id). */
    event_type_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional filter by actor user dimension (FK to todo_app_users.id).
     *
     * Administrative analytics only.
     */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional filter by target Todo dimension (FK to todo_app_todos.id).
     *
     * Administrative analytics only.
     */
    todo_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Inclusive lower bound for bucket_date (start-of-day). ISO 8601
     * date-time.
     */
    bucket_date_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Inclusive upper bound for bucket_date (start-of-day). ISO 8601
     * date-time.
     */
    bucket_date_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Sort key for results. Supported fields: bucket_date, count,
     * created_at, updated_at.
     */
    sort_by?:
      | "bucket_date"
      | "count"
      | "created_at"
      | "updated_at"
      | null
      | undefined;

    /** Sort direction for ordering results. */
    sort_dir?: "asc" | "desc" | null | undefined;
  };
}
