import { tags } from "typia";

import { IEAccountStatus } from "./IEAccountStatus";
import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Member user account representation aligned with Actors.todo_mvp_users.
 *
 * Sensitive fields such as password_hash are intentionally excluded from
 * responses. The model's optional deleted_at is also omitted from public
 * responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoMvpUser = {
  /**
   * Primary key of the user account.
   *
   * Maps to Actors.todo_mvp_users.id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique email for the user account.
   *
   * Maps to Actors.todo_mvp_users.email (unique by @@unique).
   */
  email: string & tags.Format<"email">;

  /**
   * Lifecycle status of the user account.
   *
   * Maps to Actors.todo_mvp_users.status and follows allowed values from
   * schema comments.
   */
  status: IEAccountStatus;

  /**
   * Timestamp when the user account was created.
   *
   * Maps to Actors.todo_mvp_users.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the user account was last updated.
   *
   * Maps to Actors.todo_mvp_users.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoMvpUser {
  /**
   * Registration request body for creating a new member user.
   *
   * On success, the service creates Actors.todo_mvp_users (email unique,
   * password stored as password_hash, status set per policy) and establishes
   * an Auth.todo_mvp_sessions row. Sensitive fields such as password_hash are
   * never exposed to clients.
   */
  export type ICreate = {
    /**
     * Memberâ€™s unique email address used for authentication and
     * communication in MVP.
     *
     * Maps to Actors.todo_mvp_users.email and must be unique per the
     * @@unique constraint.
     */
    email: string & tags.Format<"email">;

    /**
     * Plaintext password submitted for registration. The server hashes this
     * secret and persists it as password_hash.
     *
     * NEVER store or return plaintext credentials. Maps indirectly to
     * Actors.todo_mvp_users.password_hash after hashing.
     */
    password: string & tags.MinLength<8>;
  };

  /**
   * Authorization response for the User role following join/login/refresh
   * operations.
   *
   * Conforms to the required structure: contains the subject id (UUID) and a
   * token bundle of type IAuthorizationToken. Optionally includes the
   * sanitized user profile for convenience. Sensitive data like password_hash
   * is intentionally excluded.
   *
   * Security notes reference Prisma models Actors.todo_mvp_users and
   * Auth.todo_mvp_sessions, which store identity and session lifecycle
   * metadata respectively (e.g., session_token_hash, last_accessed_at,
   * expires_at, revoked_at).
   */
  export type IAuthorized = {
    /**
     * Identifier of the authenticated user.
     *
     * This echoes Prisma todo_mvp_users.id (UUID) for the subject
     * associated with the issued authorization.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Business-unique email address for the member user.
     *
     * Mapped from Prisma model Actors.todo_mvp_users.email with @@unique
     * constraint. Used for authentication and basic communications in the
     * MVP.
     */
    email: string & tags.Format<"email">;

    /**
     * Lifecycle status of the user account.
     *
     * Mapped from Prisma model Actors.todo_mvp_users.status (String). While
     * the database column is a free-form string, business rules constrain
     * allowed values to "active" or "deactivated" for predictable
     * authorization behavior.
     */
    status: "active" | "deactivated";

    /**
     * Creation timestamp of the user account record.
     *
     * Mapped from Prisma model Actors.todo_mvp_users.created_at
     * (Timestamptz). Supports temporal ordering and audit-friendly
     * visibility.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last updated timestamp of the user account record.
     *
     * Mapped from Prisma model Actors.todo_mvp_users.updated_at
     * (Timestamptz). Updated when mutable properties of the user are
     * changed (e.g., password updates) by server-side logic.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for account lifecycle workflows.
     *
     * Mapped from Prisma model Actors.todo_mvp_users.deleted_at (nullable
     * Timestamptz). When set, the record is considered inactive for normal
     * reads depending on provider policy. Nullable by design.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /**
     * Authenticated user profile without sensitive fields.
     *
     * Derived from Actors.todo_mvp_users while omitting password_hash and
     * other internal values. Included to provide client-side context for
     * the current subject.
     */
    user?: ITodoMvpUser | undefined;
  };
}
