import { tags } from "typia";

import { EOrderDirection } from "./EOrderDirection";

/**
 * Feature Flag entity mapped to Prisma model todo_app_feature_flags.
 *
 * Contains administrative and lifecycle fields including rollout controls and
 * optional evaluation windows. Nullable foreign keys are expressed with oneOf
 * null patterns to preserve JSON Schema compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppFeatureFlag = {
  /**
   * Primary key (UUID).
   *
   * Prisma: todo_app_feature_flags.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional governing policy reference (FK → todo_app_service_policies.id).
   *
   * Prisma: todo_app_feature_flags.todo_app_service_policy_id
   */
  todo_app_service_policy_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * Administrative owner/creator user reference (FK → todo_app_users.id).
   *
   * Prisma: todo_app_feature_flags.todo_app_user_id
   */
  todo_app_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Logical grouping for the feature flag (e.g., "ui", "payments", "sync").
   *
   * Prisma: todo_app_feature_flags.namespace
   */
  namespace: string;

  /**
   * Deployment environment for the flag (e.g., "prod", "staging", "dev").
   * Null indicates environment-agnostic.
   *
   * Prisma: todo_app_feature_flags.environment
   */
  environment?: string | null | undefined;

  /**
   * Unique flag code within (namespace, environment). Used for evaluation.
   *
   * Prisma: todo_app_feature_flags.code (unique in combination with namespace
   * and environment).
   */
  code: string;

  /**
   * Human-readable name of the feature flag.
   *
   * Prisma: todo_app_feature_flags.name
   */
  name: string;

  /**
   * Business description, rollout plan, and guardrail notes.
   *
   * Prisma: todo_app_feature_flags.description
   */
  description?: string | null | undefined;

  /**
   * Whether the flag is enabled for evaluation.
   *
   * Prisma: todo_app_feature_flags.active
   */
  active: boolean;

  /**
   * Percentage-based rollout for progressive exposure (0–100).
   *
   * Prisma: todo_app_feature_flags.rollout_percentage
   */
  rollout_percentage: number &
    tags.Type<"int32"> &
    tags.Minimum<0> &
    tags.Maximum<100>;

  /**
   * Optional description of intended audience/segmentation in business terms.
   *
   * Prisma: todo_app_feature_flags.target_audience
   */
  target_audience?: string | null | undefined;

  /**
   * Optional start time when the flag begins evaluation (RFC 3339 date-time).
   *
   * Prisma: todo_app_feature_flags.start_at
   */
  start_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional end time after which the flag is no longer evaluated (RFC 3339
   * date-time).
   *
   * Prisma: todo_app_feature_flags.end_at
   */
  end_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Creation timestamp for this feature flag record.
   *
   * Prisma: todo_app_feature_flags.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for this feature flag record.
   *
   * Prisma: todo_app_feature_flags.updated_at
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp. When non-null, the flag is considered removed
   * from normal flows.
   *
   * Prisma: todo_app_feature_flags.deleted_at
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppFeatureFlag {
  /**
   * List/search request for Feature Flags.
   *
   * Provides pagination, sorting, and rich filters aligned with Prisma
   * columns on todo_app_feature_flags. No actor IDs are accepted; server
   * derives authentication context.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based). When null or omitted, service
     * default applies.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Page size limit (1–100). When null or omitted, service default
     * applies.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /**
     * Case-insensitive substring search applied to code, name, and
     * description where supported by indexes.
     */
    search?: string | null | undefined;

    /** Filter by namespace. */
    namespace?: string | null | undefined;

    /** Filter by environment (e.g., "prod", "staging"). */
    environment?: string | null | undefined;

    /** Filter by exact code or use with search for substring matching. */
    code?: string | null | undefined;

    /** Filter by exact name or use with search for substring matching. */
    name?: string | null | undefined;

    /** Filter by active state. */
    active?: boolean | null | undefined;

    /** Minimum rollout percentage (0–100) inclusive. */
    rollout_min?:
      | (number & tags.Type<"int32"> & tags.Minimum<0> & tags.Maximum<100>)
      | null
      | undefined;

    /** Maximum rollout percentage (0–100) inclusive. */
    rollout_max?:
      | (number & tags.Type<"int32"> & tags.Minimum<0> & tags.Maximum<100>)
      | null
      | undefined;

    /**
     * When true, restrict to flags considered effective now (active=true
     * and within start/end window when provided).
     */
    effective_now_only?: boolean | null | undefined;

    /** Lower bound for start_at (RFC 3339). */
    start_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound for start_at (RFC 3339). */
    start_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Lower bound for end_at (RFC 3339). */
    end_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound for end_at (RFC 3339). */
    end_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Lower bound for created_at (RFC 3339). */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound for created_at (RFC 3339). */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Lower bound for updated_at (RFC 3339). */
    updated_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Upper bound for updated_at (RFC 3339). */
    updated_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Field to order by. Defaults to created_at when omitted. */
    order_by?:
      | "created_at"
      | "updated_at"
      | "code"
      | "name"
      | "rollout_percentage"
      | "start_at"
      | "end_at"
      | null
      | undefined;

    /** Sort direction for order_by. Defaults to "desc" when omitted. */
    order_dir?: EOrderDirection | null | undefined;
  };

  /**
   * Creation payload for a feature flag.
   *
   * This DTO maps to Prisma model todo_app_feature_flags (Systematic
   * namespace). Server controls system fields (id, created_at, updated_at,
   * deleted_at) and actor bindings (todo_app_user_id). Security: do not
   * include actor IDs in requests. Policy linkage may be provided here for
   * general creation endpoints, but policy-scoped endpoints will override it
   * from the path.
   */
  export type ICreate = {
    /**
     * Logical grouping for the feature flag, e.g., "ui", "payments", or
     * "sync".
     *
     * Prisma column: todo_app_feature_flags.namespace — groups flags by
     * domain.
     */
    namespace: string;

    /**
     * Optional deployment environment for the flag such as "prod",
     * "staging", or "dev". When null or omitted, the flag is
     * environment-agnostic.
     *
     * Prisma column: todo_app_feature_flags.environment (nullable).
     */
    environment?: string | null | undefined;

    /**
     * Unique feature flag code within (namespace, environment). Used by
     * services to evaluate features.
     *
     * Prisma column: todo_app_feature_flags.code with @@unique([namespace,
     * code, environment]).
     */
    code: string;

    /**
     * Human-readable name for the feature flag.
     *
     * Prisma column: todo_app_feature_flags.name.
     */
    name: string;

    /**
     * Optional business description, rollout plan, or guardrail notes for
     * this flag.
     *
     * Prisma column: todo_app_feature_flags.description (nullable).
     */
    description?: string | null | undefined;

    /**
     * Whether the flag is enabled for evaluation.
     *
     * Prisma column: todo_app_feature_flags.active.
     */
    active: boolean;

    /**
     * Percentage-based rollout (0–100) for progressive exposure when
     * active.
     *
     * Prisma column: todo_app_feature_flags.rollout_percentage (integer).
     */
    rollout_percentage: number &
      tags.Type<"int32"> &
      tags.Minimum<0> &
      tags.Maximum<100>;

    /**
     * Optional audience description or segmentation notes in business
     * terms.
     *
     * Prisma column: todo_app_feature_flags.target_audience (nullable).
     */
    target_audience?: string | null | undefined;

    /**
     * Optional start timestamp (ISO 8601 date-time) when flag begins
     * evaluation.
     *
     * Prisma column: todo_app_feature_flags.start_at (timestamptz,
     * nullable).
     */
    start_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional end timestamp (ISO 8601 date-time) after which flag is no
     * longer evaluated.
     *
     * Prisma column: todo_app_feature_flags.end_at (timestamptz, nullable).
     */
    end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional governing policy reference (UUID). When using a
     * policy-scoped endpoint, the server binds the policy from the path and
     * may ignore this value.
     *
     * Prisma column: todo_app_feature_flags.todo_app_service_policy_id
     * (nullable FK to todo_app_service_policies.id).
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Update payload for a feature flag.
   *
   * All fields are optional. System-managed fields (id, created_at,
   * updated_at, deleted_at, todo_app_user_id) are not accepted. Under
   * policy-scoped endpoints, changing policy linkage is not permitted.
   */
  export type IUpdate = {
    /**
     * Logical grouping for the feature flag, e.g., "ui", "payments", or
     * "sync".
     *
     * Prisma column: todo_app_feature_flags.namespace.
     */
    namespace?: string | undefined;

    /**
     * Optional deployment environment for the flag such as "prod",
     * "staging", or "dev".
     *
     * Prisma column: todo_app_feature_flags.environment (nullable).
     */
    environment?: string | null | undefined;

    /**
     * Feature flag code within (namespace, environment). Must remain unique
     * per Prisma constraint.
     *
     * Prisma column: todo_app_feature_flags.code.
     */
    code?: string | undefined;

    /**
     * Human-readable name for the feature flag.
     *
     * Prisma column: todo_app_feature_flags.name.
     */
    name?: string | undefined;

    /**
     * Optional business description, rollout plan, or guardrail notes for
     * this flag.
     *
     * Prisma column: todo_app_feature_flags.description (nullable).
     */
    description?: string | null | undefined;

    /**
     * Whether the flag is enabled for evaluation.
     *
     * Prisma column: todo_app_feature_flags.active.
     */
    active?: boolean | undefined;

    /**
     * Percentage-based rollout (0–100) for progressive exposure when
     * active.
     *
     * Prisma column: todo_app_feature_flags.rollout_percentage (integer).
     */
    rollout_percentage?:
      | (number & tags.Type<"int32"> & tags.Minimum<0> & tags.Maximum<100>)
      | undefined;

    /**
     * Optional audience description or segmentation notes in business
     * terms.
     *
     * Prisma column: todo_app_feature_flags.target_audience (nullable).
     */
    target_audience?: string | null | undefined;

    /**
     * Optional start timestamp (ISO 8601 date-time) when the flag begins
     * evaluation.
     *
     * Prisma column: todo_app_feature_flags.start_at (timestamptz,
     * nullable).
     */
    start_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional end timestamp (ISO 8601 date-time) after which the flag is
     * no longer evaluated.
     *
     * Prisma column: todo_app_feature_flags.end_at (timestamptz, nullable).
     */
    end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional governing policy reference (UUID). Under policy-scoped
     * endpoints, servers may ignore this field and keep association to the
     * path policy.
     *
     * Prisma column: todo_app_feature_flags.todo_app_service_policy_id
     * (nullable FK).
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Administrative summary of a feature flag derived from Prisma model
   * todo_app_feature_flags. Includes rollout percentage and evaluation window
   * fields for staged rollouts; omits verbose internal notes to keep list
   * views compact.
   *
   * Feature flags support namespace/environment scoping and may optionally
   * link to a governing service policy and an administrative owner.
   */
  export type ISummary = {
    /**
     * Primary key of the feature flag.
     *
     * Prisma: id @id @db.Uuid
     */
    id: string & tags.Format<"uuid">;

    /**
     * Optional governing policy id if the flag is associated with one.
     *
     * Prisma: todo_app_service_policy_id String? @db.Uuid
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Logical grouping (e.g., "ui", "payments", "sync").
     *
     * Prisma: namespace String
     */
    namespace: string;

    /**
     * Optional environment scope (e.g., "prod", "staging", "dev").
     *
     * Prisma: environment String?
     */
    environment?: string | null | undefined;

    /**
     * Unique flag code within (namespace, environment).
     *
     * Prisma: code String (unique with namespace/environment)
     */
    code: string;

    /**
     * Human-readable name of the feature flag.
     *
     * Prisma: name String
     */
    name: string;

    /**
     * Whether the flag is enabled for evaluation.
     *
     * Prisma: active Boolean
     */
    active: boolean;

    /**
     * Percentage-based rollout for progressive exposure (0–100).
     *
     * Prisma: rollout_percentage Int @db.Integer
     */
    rollout_percentage: number &
      tags.Type<"int32"> &
      tags.Minimum<0> &
      tags.Maximum<100>;

    /**
     * Optional description of intended audience or segmentation.
     *
     * Prisma: target_audience String?
     */
    target_audience?: string | null | undefined;

    /**
     * Optional start time when flag begins evaluation.
     *
     * Prisma: start_at DateTime? @db.Timestamptz
     */
    start_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional end time after which flag is no longer evaluated.
     *
     * Prisma: end_at DateTime? @db.Timestamptz
     */
    end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp for the flag record.
     *
     * Prisma: created_at DateTime @db.Timestamptz
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update timestamp for the flag record.
     *
     * Prisma: updated_at DateTime @db.Timestamptz
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
