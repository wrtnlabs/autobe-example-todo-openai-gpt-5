import { tags } from "typia";

import { EConfigValueType } from "./EConfigValueType";
import { EServiceConfigurationOrderBy } from "./EServiceConfigurationOrderBy";
import { ESortOrder } from "./ESortOrder";

/**
 * Service Configuration entity (todo_app_service_configurations).
 *
 * This response type corresponds to the Prisma model and includes core
 * attributes and lifecycle timestamps. Sensitive values are flagged by
 * is_secret; providers may choose to redact value in list summaries for
 * secrets, but full details are available to authorized administrators.
 *
 * Security guidance: This type does not include raw credentials or tokens.
 * Actor and policy FK fields are nullable and are read-only in API responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppServiceConfiguration = {
  /**
   * Primary key.
   *
   * Maps to todo_app_service_configurations.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the administrative user responsible for this
   * record.
   */
  todo_app_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional linkage to a governing Service Policy that contextualizes
   * evaluation.
   */
  todo_app_service_policy_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * Logical grouping for configuration keys (e.g., "core", "auth",
   * "billing").
   *
   * Maps to .namespace.
   */
  namespace: string;

  /**
   * Environment scope limiting when/where this configuration applies; null
   * means global.
   */
  environment?: string | null | undefined;

  /**
   * Business key unique within (namespace, environment).
   *
   * Maps to .key with unique constraint @@unique([namespace, key,
   * environment]).
   */
  key: string;

  /**
   * Stored configuration value in raw string form. Consumers interpret
   * according to value_type.
   *
   * Maps to .value.
   */
  value: string;

  /**
   * Type hint for interpreting the stored value (e.g., "string", "int",
   * "double", "boolean", "datetime", "uri").
   */
  value_type: EConfigValueType;

  /**
   * Whether this value is sensitive and should be redacted in logs and
   * listings.
   *
   * Maps to .is_secret.
   */
  is_secret: boolean;

  /** Optional description for administrators; avoid including secrets here. */
  description?: string | null | undefined;

  /**
   * Whether this configuration is currently enabled for evaluation.
   *
   * Maps to .active.
   */
  active: boolean;

  /** Optional start of effectivity window for this configuration (inclusive). */
  effective_from?: (string & tags.Format<"date-time">) | null | undefined;

  /** Optional end of effectivity window for this configuration (inclusive). */
  effective_to?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Creation timestamp for this configuration record.
   *
   * Maps to .created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for this configuration record.
   *
   * Maps to .updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /** Logical deletion timestamp used to exclude records from normal flows. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppServiceConfiguration {
  /**
   * Search/filter request for Service Configurations
   * (todo_app_service_configurations).
   *
   * Includes pagination (page, limit), keyword search (q) leveraging trigram
   * indexes, domain filters (namespace, environment, active, value_type), an
   * effectivity instant (effective_at), and sorting controls (orderBy/order).
   * All fields are optional; null explicitly indicates omission.
   *
   * Security: Read-only filter structure. Do not include actor IDs
   * (todo_app_user_id) or system fields (id/created_at/updated_at/deleted_at)
   * in client requests; policy scoping is enforced by the route or server
   * authorization.
   */
  export type IRequest = {
    /** Page number (1-based index). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Page size limit (records per page). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Free-text search over key/description. */
    q?: (string & tags.MinLength<1>) | null | undefined;

    /** Filter by .namespace (e.g., "core", "auth", "billing"). */
    namespace?: string | null | undefined;

    /** Filter by .environment (e.g., "prod", "staging", "dev"). */
    environment?: string | null | undefined;

    /** Filter by .active state. */
    active?: boolean | null | undefined;

    /** Filter by .value_type. Uses EConfigValueType. */
    value_type?: EConfigValueType | null | undefined;

    /**
     * Instant to test effectivity window intersection against
     * .effective_from/.effective_to.
     */
    effective_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Order by column for todo_app_service_configurations (see enum). */
    orderBy?: EServiceConfigurationOrderBy | null | undefined;

    /** Sort direction to apply with orderBy. */
    order?: ESortOrder | null | undefined;
  };

  /**
   * Creation payload for Systematic configuration records
   * (todo_app_service_configurations).
   *
   * This request excludes system-managed fields like id, created_at,
   * updated_at, and deleted_at, and does not accept actor identifiers
   * (todo_app_user_id). It may optionally link a governing policy via
   * todo_app_service_policy_id depending on the endpoint design.
   *
   * References: Prisma model todo_app_service_configurations and its column
   * descriptions in the provided schema.
   */
  export type ICreate = {
    /**
     * Optional governing policy reference (FK →
     * todo_app_service_policies.id).
     *
     * From Prisma model
     * todo_app_service_configurations.todo_app_service_policy_id. When the
     * API path already scopes by policy, omit or pass null.
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Logical grouping for the configuration keys (e.g., "core", "auth",
     * "billing").
     *
     * Prisma column: todo_app_service_configurations.namespace.
     */
    namespace: string;

    /**
     * Optional environment discriminator (e.g., "prod", "staging", "dev").
     * Null indicates environment-agnostic.
     *
     * Prisma column: todo_app_service_configurations.environment.
     */
    environment?: string | null | undefined;

    /**
     * Business key name unique within (namespace, environment).
     *
     * Prisma column: todo_app_service_configurations.key. Uniqueness is
     * enforced with @@unique([namespace, key, environment]).
     */
    key: string;

    /**
     * Raw string value. Interpreted according to value_type.
     *
     * Prisma column: todo_app_service_configurations.value.
     */
    value: string;

    /**
     * Type hint for interpreting the stored value (e.g., "string", "int",
     * "double", "boolean", "datetime", "uri").
     *
     * Prisma column: todo_app_service_configurations.value_type.
     */
    value_type: string;

    /**
     * Whether the value is sensitive and should be redacted in logs and
     * list views.
     *
     * Prisma column: todo_app_service_configurations.is_secret.
     */
    is_secret: boolean;

    /**
     * Human-readable description and operational notes for this
     * configuration key.
     *
     * Prisma column: todo_app_service_configurations.description.
     */
    description?: string | null | undefined;

    /**
     * Whether this configuration is currently enabled for evaluation.
     *
     * Prisma column: todo_app_service_configurations.active.
     */
    active: boolean;

    /**
     * Optional activation start time in business terms (RFC 3339
     * date-time).
     *
     * Prisma column: todo_app_service_configurations.effective_from.
     */
    effective_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional deactivation time after which the configuration is not
     * applied (RFC 3339 date-time).
     *
     * Prisma column: todo_app_service_configurations.effective_to.
     */
    effective_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Update payload for Systematic configuration records
   * (todo_app_service_configurations).
   *
   * All properties are optional to support partial updates. System-managed
   * fields (id, created_at, updated_at, deleted_at) and actor identifiers
   * (todo_app_user_id) are intentionally excluded from client input.
   *
   * References: Prisma model todo_app_service_configurations.
   */
  export type IUpdate = {
    /**
     * Optional governing policy reference (FK →
     * todo_app_service_policies.id). May be changed by administrators as
     * permitted by policy.
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Logical grouping name. Changing this may affect the uniqueness tuple
     * (namespace, key, environment).
     */
    namespace?: string | undefined;

    /**
     * Optional environment discriminator. Null indicates
     * environment-agnostic.
     */
    environment?: string | null | undefined;

    /**
     * Business key name. Changing this must respect uniqueness with
     * (namespace, environment).
     */
    key?: string | undefined;

    /** Raw string value. Interpreted by value_type. */
    value?: string | undefined;

    /**
     * Type hint for interpreting the stored value (e.g., "string", "int",
     * "double", "boolean", "datetime", "uri").
     */
    value_type?: string | undefined;

    /** If true, the value should be redacted in logs and list views. */
    is_secret?: boolean | undefined;

    /** Human-readable notes or description. */
    description?: string | null | undefined;

    /** Whether this configuration is currently enabled for evaluation. */
    active?: boolean | undefined;

    /** Activation start time in RFC 3339 date-time. */
    effective_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Deactivation time in RFC 3339 date-time. */
    effective_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Administrative summary of a service configuration from Prisma model
   * todo_app_service_configurations. Designed for list views with sensitive
   * value redaction: the raw value column is intentionally omitted here to
   * avoid exposing secrets.
   *
   * Configurations are namespaced key/value pairs with optional environment
   * scoping and effectivity windows, optionally linked to a governing service
   * policy.
   */
  export type ISummary = {
    /**
     * Primary key of the configuration.
     *
     * Prisma: id @id @db.Uuid
     */
    id: string & tags.Format<"uuid">;

    /**
     * Optional governing policy id if linked.
     *
     * Prisma: todo_app_service_policy_id String? @db.Uuid
     */
    todo_app_service_policy_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Domain grouping for the configuration (e.g., "core", "auth").
     *
     * Prisma: namespace String
     */
    namespace: string;

    /**
     * Optional environment discriminator such as "prod", "staging", or
     * "dev".
     *
     * Prisma: environment String?
     */
    environment?: string | null | undefined;

    /**
     * Business key name unique within (namespace, environment).
     *
     * Prisma: key String (unique with namespace/environment)
     */
    key: string;

    /**
     * Type hint for interpreting the stored value (e.g., string, int,
     * double, boolean, datetime, uri).
     *
     * Prisma: value_type String
     */
    value_type: string;

    /**
     * Marks whether the value is sensitive and should be redacted in
     * logs/listings.
     *
     * Prisma: is_secret Boolean
     */
    is_secret: boolean;

    /**
     * Whether this configuration is enabled for evaluation.
     *
     * Prisma: active Boolean
     */
    active: boolean;

    /**
     * Optional activation start time.
     *
     * Prisma: effective_from DateTime? @db.Timestamptz
     */
    effective_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional deactivation time.
     *
     * Prisma: effective_to DateTime? @db.Timestamptz
     */
    effective_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Creation timestamp of this configuration record.
     *
     * Prisma: created_at DateTime @db.Timestamptz
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Last update timestamp of this configuration record.
     *
     * Prisma: updated_at DateTime @db.Timestamptz
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
