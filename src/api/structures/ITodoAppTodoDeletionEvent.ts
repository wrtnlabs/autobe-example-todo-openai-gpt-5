import { tags } from "typia";

/**
 * Deletion audit entry for a Todo (todo_app_todo_deletion_events).
 *
 * Captures who deleted the Todo and when, with optional reason. Foreign keys
 * are nullable to preserve audit history.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppTodoDeletionEvent = {
  /**
   * Primary key.
   *
   * Maps to todo_app_todo_deletion_events.id.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Deleted todo’s id (nullable to preserve audit history).
   *
   * Maps to todo_app_todo_deletion_events.todo_app_todo_id.
   */
  todo_app_todo_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Deleting actor’s user id (nullable for history).
   *
   * Maps to todo_app_todo_deletion_events.todo_app_user_id.
   */
  todo_app_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional human-readable reason; no secrets.
   *
   * Maps to todo_app_todo_deletion_events.reason.
   */
  reason?: string | null | undefined;

  /**
   * Business-event timestamp when deletion occurred.
   *
   * Maps to todo_app_todo_deletion_events.occurred_at.
   */
  occurred_at: string & tags.Format<"date-time">;

  /**
   * Record creation timestamp.
   *
   * Maps to todo_app_todo_deletion_events.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record update timestamp.
   *
   * Maps to todo_app_todo_deletion_events.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp used only for administrative redaction.
   *
   * Maps to todo_app_todo_deletion_events.deleted_at.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppTodoDeletionEvent {
  /**
   * List/search request for Todo deletion events.
   *
   * Security: Does not accept actor IDs; ownership enforced via authenticated
   * context.
   */
  export type IRequest = {
    /** Page number (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Items per page (1–100). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Inclusive lower bound for occurred_at. */
    occurred_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Inclusive upper bound for occurred_at. */
    occurred_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Case-insensitive substring search over reason (provider dependent). */
    search?: string | null | undefined;

    /** Primary sort field (default occurred_at). */
    sort?: "occurred_at" | "created_at" | null | undefined;

    /** Sort direction (default desc). */
    direction?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary view of a Todo deletion audit entry for list displays.
   *
   * Provides essential deletion context without heavy fields.
   */
  export type ISummary = {
    /** Deletion event id (UUID). */
    id: string & tags.Format<"uuid">;

    /** When deletion occurred. */
    occurred_at: string & tags.Format<"date-time">;

    /** Optional reason (no secrets). */
    reason?: string | null | undefined;
  };
}
