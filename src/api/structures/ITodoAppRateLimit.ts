import { tags } from "typia";

import { ERateLimitScope } from "./ERateLimitScope";
import { ERateLimitCategory } from "./ERateLimitCategory";

/**
 * Administrative rate limit policy mapped to Prisma model todo_app_rate_limits.
 *
 * Represents throttling configuration used by enforcement counters and
 * governance tooling. Sensitive system internals (e.g., deleted_at) are
 * intentionally omitted from the response type.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppRateLimit = {
  /**
   * Primary key.
   *
   * Prisma: todo_app_rate_limits.id
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business code for this policy.
   *
   * Prisma: todo_app_rate_limits.code (unique)
   */
  code: string;

  /**
   * Human-readable name.
   *
   * Prisma: todo_app_rate_limits.name
   */
  name: string;

  /**
   * Optional administrative description/notes.
   *
   * Prisma: todo_app_rate_limits.description (nullable)
   */
  description?: string | null | undefined;

  /**
   * Subject dimension (user, ip, global).
   *
   * Prisma: todo_app_rate_limits.scope
   */
  scope: ERateLimitScope;

  /**
   * Action category (read, write, auth).
   *
   * Prisma: todo_app_rate_limits.category
   */
  category: ERateLimitCategory;

  /**
   * Fixed window duration in seconds.
   *
   * Prisma: todo_app_rate_limits.window_seconds
   */
  window_seconds: number & tags.Type<"int32">;

  /**
   * Maximum allowed requests within the window.
   *
   * Prisma: todo_app_rate_limits.max_requests
   */
  max_requests: number & tags.Type<"int32">;

  /**
   * Optional token bucket burst size.
   *
   * Prisma: todo_app_rate_limits.burst_size (nullable)
   */
  burst_size?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * True for sliding window approximation; false for fixed window.
   *
   * Prisma: todo_app_rate_limits.sliding_window
   */
  sliding_window: boolean;

  /**
   * Administrative toggle to enable/disable enforcement.
   *
   * Prisma: todo_app_rate_limits.enabled
   */
  enabled: boolean;

  /**
   * Record creation timestamp.
   *
   * Prisma: todo_app_rate_limits.created_at
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma: todo_app_rate_limits.updated_at
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppRateLimit {
  /**
   * Search/filter parameters for listing todo_app_rate_limits policies with
   * pagination. Only non-persistent query parameters are included.
   */
  export type IRequest = {
    /**
     * Page number (1-based). When null or omitted, defaults per system
     * policy.
     *
     * Standard pagination request.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Items per page (allowed 1â€“100). When null or omitted, defaults per
     * policy.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Free-text search across code/name/description. */
    search?: string | null | undefined;

    /** Filter by scope (user, ip, global). */
    scope?: ERateLimitScope | null | undefined;

    /** Filter by category (read, write, auth). */
    category?: ERateLimitCategory | null | undefined;

    /** Filter by enforcement state. */
    enabled?: boolean | null | undefined;

    /** Filter by window algorithm type. */
    sliding_window?: boolean | null | undefined;

    /** Minimum window_seconds filter. */
    window_seconds_min?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum window_seconds filter. */
    window_seconds_max?: (number & tags.Type<"int32">) | null | undefined;

    /** Minimum max_requests filter. */
    max_requests_min?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum max_requests filter. */
    max_requests_max?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Create request body for a rate limit policy (todo_app_rate_limits).
   *
   * Security: Does not accept system-generated fields (id, created_at,
   * updated_at, deleted_at) or actor identifiers.
   */
  export type ICreate = {
    /**
     * Unique business code for the new policy (e.g., "write_per_minute").
     * Must be unique across all policies.
     */
    code: string;

    /** Human-readable name for consoles and documentation. */
    name: string;

    /** Optional administrative description and notes. */
    description?: string | null | undefined;

    /** Subject dimension for enforcement (user, ip, or global). */
    scope: ERateLimitScope;

    /**
     * Functional category of actions affected by this policy (read, write,
     * auth).
     */
    category: ERateLimitCategory;

    /** Window duration in seconds. Must be >= 1. */
    window_seconds: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Maximum allowed requests within the window. Must be >= 1. */
    max_requests: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Optional burst size allowing temporary spikes; null to disable burst. */
    burst_size?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | null
      | undefined;

    /** True for sliding window approximation; false for fixed window. */
    sliding_window: boolean;

    /** Whether this policy is enforced upon creation. */
    enabled: boolean;
  };

  /**
   * Update request for todo_app_rate_limits.
   *
   * All fields are optional. Only columns that are nullable support explicit
   * null; others must be omitted when unchanged.
   */
  export type IUpdate = {
    /**
     * Updated unique code. Must remain unique.
     *
     * Prisma: non-nullable; omit property to leave unchanged.
     */
    code?: string | undefined;

    /**
     * Updated display name.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    name?: string | undefined;

    /** Updated description; null removes value (column is nullable). */
    description?: string | null | undefined;

    /**
     * Updated scope.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    scope?: ERateLimitScope | undefined;

    /**
     * Updated category.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    category?: ERateLimitCategory | undefined;

    /**
     * Updated window duration in seconds.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    window_seconds?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | undefined;

    /**
     * Updated max requests per window.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    max_requests?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Updated burst size; null removes burst (column is nullable). */
    burst_size?:
      | (number & tags.Type<"int32"> & tags.Minimum<1>)
      | null
      | undefined;

    /**
     * Updated sliding-window flag.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    sliding_window?: boolean | undefined;

    /**
     * Updated enabled flag.
     *
     * Prisma: non-nullable; omit to leave unchanged.
     */
    enabled?: boolean | undefined;
  };

  /** Summary projection of a rate limit policy for list views. */
  export type ISummary = {
    /**
     * Primary key.
     *
     * Prisma: todo_app_rate_limits.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique business code.
     *
     * Prisma: todo_app_rate_limits.code
     */
    code: string;

    /**
     * Display name.
     *
     * Prisma: todo_app_rate_limits.name
     */
    name: string;

    /**
     * Scope dimension.
     *
     * Prisma: todo_app_rate_limits.scope
     */
    scope: ERateLimitScope;

    /**
     * Action category.
     *
     * Prisma: todo_app_rate_limits.category
     */
    category: ERateLimitCategory;

    /**
     * Window duration in seconds.
     *
     * Prisma: todo_app_rate_limits.window_seconds
     */
    window_seconds: number & tags.Type<"int32">;

    /**
     * Max requests per window.
     *
     * Prisma: todo_app_rate_limits.max_requests
     */
    max_requests: number & tags.Type<"int32">;

    /**
     * Policy enabled flag.
     *
     * Prisma: todo_app_rate_limits.enabled
     */
    enabled: boolean;

    /**
     * Creation timestamp.
     *
     * Prisma: todo_app_rate_limits.created_at
     */
    created_at: string & tags.Format<"date-time">;
  };
}
