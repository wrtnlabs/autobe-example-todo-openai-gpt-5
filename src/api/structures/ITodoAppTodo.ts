import { tags } from "typia";

/**
 * Primary Todo entity managed by end users.
 *
 * Represents rows from Prisma model todo_app_todos with ownership, core fields,
 * due date, status, completion timestamp, and lifecycle timestamps.
 *
 * Security: Ownership is enforced by the provider using todo_app_user_id;
 * client requests must not set or change ownership through create/update
 * operations.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppTodo = {
  /**
   * Primary key.
   *
   * Maps to todo_app_todos.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Owner user's id.
   *
   * Maps to todo_app_todos.todo_app_user_id referencing todo_app_users.id.
   * Read-only; used to enforce ownership and isolation.
   */
  todo_app_user_id: string & tags.Format<"uuid">;

  /**
   * Required short text title of the todo.
   *
   * Maps to todo_app_todos.title. Business rule: 1–120 characters after
   * trimming; must include at least one non-whitespace character.
   */
  title: string;

  /**
   * Optional longer description of the todo.
   *
   * Maps to todo_app_todos.description. Typical policy limit 0–1000 (or up to
   * 2000) characters.
   */
  description?: string | null | undefined;

  /**
   * Optional due date/time interpreted in the owner’s timezone.
   *
   * Maps to todo_app_todos.due_at (timestamptz). Used for
   * overdue/today/future filters.
   */
  due_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Lifecycle status of the todo, expected values 'open' or 'completed' per
   * business model.
   *
   * Maps to todo_app_todos.status.
   */
  status: string;

  /**
   * Timestamp recorded when the todo is marked completed; cleared when
   * reopened.
   *
   * Maps to todo_app_todos.completed_at.
   */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Creation timestamp (system-managed).
   *
   * Maps to todo_app_todos.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last modification timestamp (system-managed).
   *
   * Maps to todo_app_todos.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp; non-null indicates exclusion from normal
   * listings.
   *
   * Maps to todo_app_todos.deleted_at.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppTodo {
  /**
   * Filter for list views to select which todo statuses to include.
   *
   * - Open: only open todos
   * - Completed: only completed todos
   * - All: open and completed (deleted items excluded)
   */
  export type TStatusFilter = "open" | "completed" | "all";

  /**
   * Due-window filter applied to list views.
   *
   * - Overdue: due_at before now and not completed
   * - Today: due_at matches the user's current local calendar date and not
   *   completed
   * - Future: due_at after today (user's timezone) and not completed
   */
  export type TDueFilter = "overdue" | "today" | "future";

  /**
   * Sortable fields for list views.
   *
   * - Created_at (default): newest first
   * - Due_at: ascending by due date (items without due_at appear last)
   */
  export type TSortField = "created_at" | "due_at";

  /**
   * Sort direction for list views.
   *
   * Default is desc for created_at sorting.
   */
  export type TSortDirection = "asc" | "desc";

  /**
   * Search/filter/pagination request for listing the caller’s Todos.
   *
   * Maps to business rules: default sort by created_at desc; supports status
   * and due-window filters and keyword search.
   */
  export type IRequest = {
    /** Page number (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Page size (1–100). Default 20. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Status filter: open, completed, or all (excluding deleted). */
    status?: "open" | "completed" | "all" | null | undefined;

    /**
     * Due window filter relative to user’s timezone: overdue, today,
     * future.
     */
    due_filter?: "overdue" | "today" | "future" | null | undefined;

    /** Sort key. Default created_at. */
    sort?: "created_at" | "due_at" | null | undefined;

    /** Sort direction. Default desc. */
    direction?: "asc" | "desc" | null | undefined;

    /**
     * Case-insensitive substring match across title and description.
     * Empty/whitespace ignored.
     */
    search?: (string & tags.MaxLength<100>) | null | undefined;
  };

  /**
   * Create payload for a Todo (todo_app_todos).
   *
   * Prohibitions: Do not accept actor IDs (todo_app_user_id), system fields
   * (id/created_at/updated_at/completed_at/deleted_at), or status (server
   * initializes to 'open').
   */
  export type ICreate = {
    /**
     * Title of the todo (required). Trimming and validation applied
     * server-side.
     *
     * Security: Client cannot set ownership; server assigns owner from auth
     * context.
     */
    title: string & tags.MinLength<1> & tags.MaxLength<120>;

    /** Optional longer description (0–1000/2000 chars by policy). */
    description?: (string & tags.MaxLength<2000>) | null | undefined;

    /** Optional due date/time (ISO 8601). Interpreted in user’s timezone. */
    due_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Update payload for a Todo (todo_app_todos).
   *
   * All fields optional (Partial<T>) and validated. Security: Do not accept
   * ownership changes or system timestamps.
   */
  export type IUpdate = {
    /** Optional updated title; trimmed server-side and validated (1–120). */
    title?:
      | (string & tags.MinLength<1> & tags.MaxLength<120>)
      | null
      | undefined;

    /** Optional updated description. */
    description?: (string & tags.MaxLength<2000>) | null | undefined;

    /** Optional updated due date/time (ISO 8601). */
    due_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional status transition. 'completed' sets completed_at; 'open'
     * clears completed_at.
     */
    status?: "open" | "completed" | null | undefined;
  };

  /**
   * Summary view of a Todo for list displays.
   *
   * Contains essential, safe properties only; excludes large text and
   * internal fields.
   */
  export type ISummary = {
    /** Todo id (UUID). */
    id: string & tags.Format<"uuid">;

    /** Display title (1–120 chars). */
    title: string;

    /** Status 'open' or 'completed'. */
    status: string;

    /** Optional due date/time for list display. */
    due_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Creation timestamp to support default sort (newest first). */
    created_at: string & tags.Format<"date-time">;
  };
}
