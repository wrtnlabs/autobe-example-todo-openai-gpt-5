import { tags } from "typia";

import { EOrderDirection } from "./EOrderDirection";

/**
 * User entity for administrative views without sensitive secrets.
 *
 * Based on Prisma model todo_app_users (Actors namespace). SECURITY: Do not
 * expose password_hash, session/refresh tokens, or other sensitive credentials.
 * Deleted users are excluded from normal reads and not represented here.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppUser = {
  /**
   * Unique identifier of the user.
   *
   * Prisma column: todo_app_users.id (UUID PK).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique email address used for authentication and notifications.
   *
   * Prisma column: todo_app_users.email with @@unique([email]).
   */
  email: string & tags.Format<"email">;

  /**
   * Account lifecycle status (e.g., pending_verification, active, suspended,
   * deactivated).
   *
   * Prisma column: todo_app_users.status.
   */
  status: string;

  /**
   * Indicates whether the user's email has been verified.
   *
   * Prisma column: todo_app_users.email_verified.
   */
  email_verified: boolean;

  /**
   * Timestamp when email verification succeeded; null until verified.
   *
   * Prisma column: todo_app_users.verified_at (timestamptz, nullable).
   */
  verified_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp of the last successful login; null when none.
   *
   * Prisma column: todo_app_users.last_login_at (timestamptz, nullable).
   */
  last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Creation timestamp for the user record.
   *
   * Prisma column: todo_app_users.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for the user record.
   *
   * Prisma column: todo_app_users.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITodoAppUser {
  /**
   * Summary view of a user for list endpoints.
   *
   * Based on Prisma model Actors.todo_app_users. Shows essential,
   * non-sensitive fields suitable for administrative listings. Excludes
   * credentials (e.g., password_hash) and internal soft-deletion markers.
   */
  export type ISummary = {
    /**
     * User identifier.
     *
     * Prisma: todo_app_users.id (UUID Primary Key).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique email address used for authentication and notifications.
     *
     * Prisma: todo_app_users.email with @@unique([email]).
     */
    email: string & tags.Format<"email">;

    /**
     * Account lifecycle status (e.g., pending_verification, active,
     * suspended, deactivated).
     *
     * Prisma: todo_app_users.status.
     */
    status: string;

    /**
     * Email verification flag.
     *
     * Prisma: todo_app_users.email_verified.
     */
    email_verified: boolean;

    /**
     * Creation timestamp of the user record (RFC 3339).
     *
     * Prisma: todo_app_users.created_at (timestamptz).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of last successful login, or null when none.
     *
     * Prisma: todo_app_users.last_login_at (timestamptz, nullable).
     */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Admin search/list request for user accounts based on Prisma model
   * todo_app_users.
   *
   * SECURITY: For admin-only use. This request contains only filters and
   * paging/sorting parameters; it never accepts actor identifiers for
   * impersonation or any secret material.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based). Defaults per service policy
     * when omitted.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Page size limit (1â€“100). Defaults to 20 when omitted. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Case-insensitive substring search over email. Whitespace-only values
     * are ignored.
     */
    search?: string | undefined;

    /**
     * Filter by one or more lifecycle statuses, e.g.,
     * ["pending_verification","active","suspended","deactivated"].
     */
    status?: string[] | undefined;

    /** Filter by email verification flag (true/false). */
    email_verified?: boolean | undefined;

    /** Lower bound (inclusive) of created_at time window (ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Upper bound (inclusive) of created_at time window (ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Lower bound (inclusive) of last_login_at time window (ISO 8601). */
    last_login_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Upper bound (inclusive) of last_login_at time window (ISO 8601). */
    last_login_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Sort field for listing users. Allowed values reflect Prisma columns
     * used in administration queries.
     */
    order_by?:
      | "created_at"
      | "updated_at"
      | "email"
      | "last_login_at"
      | "status"
      | undefined;

    /** Sort direction for ordering results (asc or desc). */
    order_direction?: EOrderDirection | undefined;

    /** Optional filter by specific user IDs (UUID array). */
    ids?: (string & tags.Format<"uuid">)[] | undefined;
  };
}
