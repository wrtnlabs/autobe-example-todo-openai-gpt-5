import { tags } from "typia";

import { ERefreshTokenSortBy } from "./ERefreshTokenSortBy";
import { ESortDirection } from "./ESortDirection";

/**
 * Refresh token metadata for a session with rotation and revocation lifecycle
 * fields.
 *
 * Derived from Prisma model todo_app_refresh_tokens (schema-03-auth.prisma).
 * SECURITY: This response intentionally omits sensitive columns `token` and
 * `token_hash` and never exposes raw token material. Only non-secret metadata
 * required for account security views is included.
 *
 * Use cases include GET-by-id details and list views where filters on
 * rotation/revocation state are applied.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppRefreshToken = {
  /**
   * Primary key of the refresh token record.
   *
   * Prisma: todo_app_refresh_tokens.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the parent session to which this refresh token belongs.
   *
   * Prisma: todo_app_refresh_tokens.todo_app_session_id referencing
   * todo_app_sessions.id.
   */
  todo_app_session_id: string & tags.Format<"uuid">;

  /**
   * Parent refresh token in the rotation chain. Null for the first token in a
   * chain.
   *
   * Prisma: todo_app_refresh_tokens.parent_id (nullable self-reference).
   */
  parent_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Timestamp when this refresh token was issued.
   *
   * Prisma: todo_app_refresh_tokens.issued_at (timestamptz).
   */
  issued_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this refresh token expires.
   *
   * Prisma: todo_app_refresh_tokens.expires_at (timestamptz).
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when this token was rotated (superseded) by a child token.
   *
   * Prisma: todo_app_refresh_tokens.rotated_at (nullable).
   */
  rotated_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp when this token was revoked, if applicable.
   *
   * Prisma: todo_app_refresh_tokens.revoked_at (nullable).
   */
  revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Human-readable reason for revocation when applicable (e.g., password
   * change).
   *
   * Prisma: todo_app_refresh_tokens.revoked_reason (nullable).
   */
  revoked_reason?: string | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Prisma: todo_app_refresh_tokens.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma: todo_app_refresh_tokens.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Logical deletion timestamp used for archival without hard delete.
   *
   * Prisma: todo_app_refresh_tokens.deleted_at (nullable).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppRefreshToken {
  /**
   * Search, filtering, and pagination parameters for listing refresh tokens
   * of a session.
   *
   * This request type maps to the read-only list endpoint for Prisma model
   * todo_app_refresh_tokens and supports filters over issued_at/expires_at
   * windows and rotation/revocation state. Pagination controls (page, limit)
   * follow service-wide conventions. Sorting uses stable column names defined
   * by ERefreshTokenSortBy.
   *
   * SECURITY: This request never contains raw tokens, token hashes, or actor
   * identifiers. The owning session identifier is taken from the path
   * parameter, not the body.
   */
  export type IRequest = {
    /**
     * Page number for pagination (1-based). When null or omitted, service
     * default applies.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Items per page (1â€“100). When null or omitted, service default applies
     * (commonly 20).
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | null
      | undefined;

    /** Filter: include tokens with issued_at >= this timestamp. */
    issued_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter: include tokens with issued_at <= this timestamp. */
    issued_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter: include tokens with expires_at >= this timestamp. */
    expires_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter: include tokens with expires_at <= this timestamp. */
    expires_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter by rotation status. true = rotated_at IS NOT NULL; false =
     * rotated_at IS NULL.
     */
    rotated?: boolean | null | undefined;

    /**
     * Filter by revocation status. true = revoked_at IS NOT NULL; false =
     * revoked_at IS NULL.
     */
    revoked?: boolean | null | undefined;

    /** Sort key for results. Default: issued_at. */
    sort_by?: ERefreshTokenSortBy | undefined;

    /** Sort direction for results. Default: desc. */
    sort_dir?: ESortDirection | undefined;
  };

  /**
   * Summary DTO of a refresh token used in authentication flows.
   *
   * This type intentionally excludes sensitive token secrets. It maps to the
   * Auth schema model todo_app_refresh_tokens, which stores rotation and
   * revocation lifecycle for refresh tokens. Use this summary for list and
   * audit views without exposing `token` or `token_hash`.
   *
   * Security: Do NOT include raw token or token_hash in any response. Only
   * lifecycle metadata (issued_at, expires_at, rotated_at, revoked_at,
   * revoked_reason) is exposed.
   */
  export type ISummary = {
    /**
     * Unique identifier of the refresh token record.
     *
     * Prisma reference: todo_app_refresh_tokens.id (UUID primary key).
     */
    id: string & tags.Format<"uuid">;

    /**
     * Timestamp when this refresh token was issued.
     *
     * Prisma reference: todo_app_refresh_tokens.issued_at (timestamptz).
     */
    issued_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when this refresh token expires and becomes invalid.
     *
     * Prisma reference: todo_app_refresh_tokens.expires_at (timestamptz).
     */
    expires_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when this token was rotated (replaced) by a child token, if
     * applicable.
     *
     * Prisma reference: todo_app_refresh_tokens.rotated_at (timestamptz,
     * nullable).
     */
    rotated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Timestamp when this token was revoked, if applicable.
     *
     * Prisma reference: todo_app_refresh_tokens.revoked_at (timestamptz,
     * nullable).
     */
    revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Human-readable reason for revocation when available (e.g., password
     * change, security event).
     *
     * Prisma reference: todo_app_refresh_tokens.revoked_reason (text,
     * nullable).
     */
    revoked_reason?: string | null | undefined;
  };
}
