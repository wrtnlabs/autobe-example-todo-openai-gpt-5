import { tags } from "typia";

/**
 * Session revocation record captured for audit and traceability.
 *
 * Based on Prisma model todo_app_session_revocations in schema-03-auth.prisma.
 * Each record enforces a one-to-one association with a session via
 * todo_app_session_id and stores who revoked the session (revoked_by), when it
 * happened (revoked_at), and optional reason. Lifecycle timestamps
 * created_at/updated_at are system-managed. Records may be soft-deleted via
 * deleted_at for retention without hard removal.
 *
 * Security note: This type contains no secrets and can be safely returned to
 * the authenticated session owner or administrators depending on endpoint
 * context.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITodoAppSessionRevocation = {
  /**
   * Primary key of the revocation record.
   *
   * Prisma: todo_app_session_revocations.id (UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Target session identifier that was revoked.
   *
   * Prisma: todo_app_session_revocations.todo_app_session_id referencing
   * todo_app_sessions.id.
   */
  todo_app_session_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the session was revoked.
   *
   * Prisma: todo_app_session_revocations.revoked_at (timestamptz).
   */
  revoked_at: string & tags.Format<"date-time">;

  /**
   * Actor category performing the revocation (e.g., "user", "system",
   * "admin").
   *
   * Prisma: todo_app_session_revocations.revoked_by.
   */
  revoked_by: string;

  /**
   * Optional human-readable reason for revocation.
   *
   * Prisma: todo_app_session_revocations.reason (nullable).
   */
  reason?: string | null | undefined;

  /**
   * Record creation timestamp (ingest time).
   *
   * Prisma: todo_app_session_revocations.created_at (timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Prisma: todo_app_session_revocations.updated_at (timestamptz).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Logical deletion timestamp for retention workflows.
   *
   * Prisma: todo_app_session_revocations.deleted_at (nullable).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITodoAppSessionRevocation {
  /**
   * Session revocation (logout) create request.
   *
   * This request maps to recording a revocation in Prisma model
   * `todo_app_session_revocations` and updating the corresponding
   * `todo_app_sessions` row. Client input must never include actor or session
   * identifiers; ownership and session context are derived from
   * authentication.
   *
   * Security: request bodies must not accept `todo_app_user_id` or
   * `todo_app_session_id`. Only an optional human‑readable reason may be
   * supplied.
   */
  export type ICreate = {
    /**
     * Optional human‑readable reason for revocation (e.g., "user_logout",
     * "password_change").
     *
     * Stored in `todo_app_session_revocations.reason` when provided.
     * Providers may normalize or constrain values per policy.
     */
    reason?: string | undefined;
  };

  /**
   * Summary of a recorded session revocation.
   *
   * This response reflects the persisted record in Prisma model
   * `todo_app_session_revocations` and is suitable for acknowledgement after
   * logout. It intentionally contains no token secrets.
   *
   * Fields align to the Auth schema: `id` (revocation id),
   * `todo_app_session_id` (the revoked session), `revoked_at` timestamp,
   * actor category in `revoked_by`, optional `reason`, and standard
   * timestamps for auditability.
   */
  export type ISummary = {
    /**
     * Unique identifier (UUID) of the revocation record from
     * `todo_app_session_revocations.id`.
     *
     * Used for traceability in audit workflows.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier (UUID) of the revoked session from `todo_app_sessions.id`.
     *
     * Note: raw `session_token` is never exposed.
     */
    todo_app_session_id: string & tags.Format<"uuid">;

    /**
     * Timestamp when the session was revoked (ISO 8601). Maps to
     * `todo_app_session_revocations.revoked_at`.
     */
    revoked_at: string & tags.Format<"date-time">;

    /**
     * Actor category performing the revocation (e.g., "user", "system", or
     * "admin").
     *
     * Sourced from `todo_app_session_revocations.revoked_by`.
     */
    revoked_by: string;

    /**
     * Optional human‑readable reason captured at revocation time. Mirrors
     * `todo_app_session_revocations.reason`.
     */
    reason?: string | null | undefined;

    /**
     * Record creation timestamp (ISO 8601). Mirrors
     * `todo_app_session_revocations.created_at`.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp (ISO 8601). Mirrors
     * `todo_app_session_revocations.updated_at`.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
