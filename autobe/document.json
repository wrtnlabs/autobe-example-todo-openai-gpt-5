{"operations":[{"specification":"Create registration operation for guestVisitor role. This endpoint provisions a minimal guest account and issues initial JWT credentials. Primary DB tables involved: todo_app_users (core identity), todo_app_sessions (access session), and todo_app_refresh_tokens (refresh chain). The service records essential lifecycle fields on todo_app_users (email, password_hash, status, email_verified, verified_at, last_login_at, created_at, updated_at) and creates a session with todo_app_sessions (session_token, issued_at, expires_at, ip, user_agent). It also creates a first refresh token in todo_app_refresh_tokens (token_hash, issued_at, expires_at, parent_id null) and may optionally enqueue an email verification by inserting into todo_app_email_verifications when an email is provided. No prior authentication required.","authorizationType":"join","description":"This operation registers a temporary \"guestVisitor\" account and immediately issues authentication credentials based on the schema under Actors and Auth. The core identity is persisted in todo_app_users using fields such as email (optional in this flow), password_hash (server-generated, never plaintext), status (e.g., an application-defined state string), email_verified (false when verification is outstanding), verified_at (null until verified), last_login_at (set upon first successful authentication), and system timestamps created_at and updated_at.\n\nOnce the user is created, a new access session is inserted into todo_app_sessions, capturing session_token (opaque, unique), issued_at, expires_at, and available client context such as ip and user_agent. The session forms the anchor for refresh rotation and subsequent audit logging. The system then inserts the initial refresh token into todo_app_refresh_tokens with token_hash (one‑way hash of the raw token), issued_at, expires_at, parent_id set to null for the first issuance, and optional rotation/revocation fields remaining null at creation.\n\nFor services requiring email verification, a record can be prepared in todo_app_email_verifications with token_hash, target_email, sent_at, expires_at, and future consumption fields (consumed_at, failure_count). Until verification succeeds, the todo_app_users.email_verified remains false and verified_at remains null, consistent with the schema.\n\nSecurity considerations include never storing raw credentials (only password_hash on todo_app_users) and generating non‑guessable session_token and refresh token values. Client metadata such as ip and user_agent should be captured in todo_app_sessions for security analytics and downstream business events, aligning with fields present in the Auth schema.\n\nRelated operations in this authentication workflow are the refresh endpoint for token renewal, the email verification confirmation endpoint for verifying target_email, and the logout endpoint that records revocation via todo_app_session_revocations and sets revoked_at on todo_app_sessions. Error handling should report validation failures (e.g., invalid email format) without exposing sensitive internals or raw token values.","summary":"Register a guestVisitor in todo_app_users and issue session and refresh tokens via todo_app_sessions and todo_app_refresh_tokens.","parameters":[],"requestBody":{"description":"Guest join payload (optional email and client context).","typeName":"ITodoAppGuestVisitor.IJoin"},"responseBody":{"description":"Authorized tokens and subject details for guestVisitor after join.","typeName":"ITodoAppGuestVisitor.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/guestVisitor/join","method":"post"},{"specification":"Refresh access tokens for a guestVisitor using the refresh token chain. Primary DB tables: todo_app_refresh_tokens (token_hash, parent_id, rotated_at, revoked_at, issued_at, expires_at) and todo_app_sessions (id, issued_at, expires_at, revoked_at, revoked_reason). The associated todo_app_users record provides account status and flags for gating. The endpoint validates an existing refresh token (by token_hash), rotates it by inserting a child row, and issues a new access token tied to the same todo_app_sessions record or a new session per policy.","authorizationType":"refresh","description":"This operation accepts a refresh token and returns fresh authentication credentials for the current guestVisitor subject. According to the Auth schema, the refresh token information is stored in todo_app_refresh_tokens, which includes token_hash for lookup, parent_id for rotation chaining, issued_at and expires_at for validity, and rotated_at or revoked_at for lifecycle control. On valid use, the system creates a new child record (rotation) and marks the prior token's rotated_at while preserving revocation fields when applicable.\n\nThe access session context is represented by todo_app_sessions with issued_at and expires_at used to determine session validity windows. Depending on policy, the same session may be extended or a new session may be created, using the fields ip and user_agent as available context. Any revocation action is recorded via revoked_at and revoked_reason on the session and may also be captured in todo_app_session_revocations for explicit provenance.\n\nThe subject account is stored in todo_app_users, where fields like status, email_verified, and verified_at can be consulted to ensure the account is eligible for continued authentication. If business policies deny refresh for certain status values, the endpoint must respond accordingly while avoiding disclosure of sensitive internals.\n\nSecurity considerations include strict validation of token_hash correspondence, rotation semantics that render the prior token unusable after successful refresh, and consistent handling of expiry based on expires_at values in both todo_app_refresh_tokens and todo_app_sessions. Client context (ip, user_agent) may be used for anomaly detection consistent with the schema.\n\nThis endpoint is used together with the guest join operation and complements verification and logout flows. Errors differentiate between invalid/expired tokens and policy gating while maintaining consistent, privacy‑preserving messages.","summary":"Rotate todo_app_refresh_tokens and return new credentials for guestVisitor; extend or reissue todo_app_sessions as needed.","parameters":[],"requestBody":{"description":"Refresh token request payload (token and client context).","typeName":"ITodoAppGuestVisitor.IRefreshRequest"},"responseBody":{"description":"Authorized tokens and subject details for guestVisitor after refresh.","typeName":"ITodoAppGuestVisitor.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/guestVisitor/refresh","method":"post"},{"specification":"Initiate a password reset flow for any account email using privacy-preserving records. Primary DB table: todo_app_password_resets with fields email, token_hash, requested_at, expires_at, consumed_at, requested_by_ip. Optional link to todo_app_users via todo_app_user_id when resolvable. This public operation does not disclose whether the email exists and only acknowledges the request.","authorizationType":null,"description":"This operation creates a password reset request represented by todo_app_password_resets. The record stores the provided email, a generated token_hash (derived from an opaque token that is never persisted in plaintext), requested_at for audit trail, expires_at to bound validity, and optional context such as requested_by_ip. When the email maps to an existing account, todo_app_user_id may be set per schema; otherwise it remains null for privacy.\n\nNo authentication is required for this initiation, and the endpoint must not reveal whether a user account exists for the submitted email, consistent with the privacy-preserving intent of the schema. Subsequent verification steps will use the stored token_hash and expiry constraints. The operation does not modify todo_app_users; it only records a reset intent and triggers delivery of instructions out-of-band.\n\nSecurity considerations include enforcing reasonable rate limits at the business layer and ensuring the token values are generated with sufficient entropy and stored only as token_hash. The endpoint records only metadata specified by the schema and avoids sensitive content in status messages.\n\nThis request should be followed by the password reset confirmation endpoint that consumes the token and updates the credential on todo_app_users. It can be used regardless of whether the account is currently a guestVisitor or another role, as it targets the email address and not a session.\n\nErrors are limited to input validation and process acceptance; responses should be uniform to avoid disclosing account existence, aligning to the fields and purpose of todo_app_password_resets.","summary":"Create a todo_app_password_resets record to begin reset without revealing account existence.","parameters":[],"requestBody":{"description":"Password reset initiation payload (email and optional client metadata).","typeName":"ITodoAppPasswordReset.IRequest"},"responseBody":{"description":"Summary of the queued password reset request.","typeName":"ITodoAppPasswordReset.ISummary"},"authorizationRole":null,"name":"requestPasswordReset","path":"/auth/guestVisitor/password/reset/request","method":"post"},{"specification":"Confirm a password reset by consuming a valid reset token and setting a new credential. Primary DB tables: todo_app_password_resets (token_hash, expires_at, consumed_at) for validation and todo_app_users (password_hash, updated_at, last_login_at policy-dependent) for applying the new credential. Public operation completing the reset; it may optionally create a new session in todo_app_sessions per policy.","authorizationType":null,"description":"This operation completes the password reset workflow by validating a reset token against todo_app_password_resets (matching token_hash, within expires_at) and marking it consumed via consumed_at. Upon successful validation, the user's credential is updated by setting a new password_hash on todo_app_users and updating updated_at. Implementations may also update last_login_at if automatic sign-in is performed, but this is policy-dependent and not required by the schema.\n\nThe operation is unauthenticated and must avoid leaking information about whether a token corresponds to a specific account beyond the success/failure of the reset itself. The schema provides email and optional todo_app_user_id to associate the request, but messages remain privacy-preserving.\n\nSecurity constraints include enforcing token single-use semantics via consumed_at, honoring expires_at, and ensuring that only password_hash is persisted (no plaintext). If the process also establishes a session, todo_app_sessions may be inserted with issued_at, expires_at, ip, and user_agent; otherwise, the user will authenticate later using standard flows.\n\nThis endpoint follows the reset initiation operation and is related to verification and refresh operations for subsequent sign-in continuity. Errors include invalid or expired tokens and input validation for the new credential.\n\nOn success, the response returns a summary reflecting completion details without exposing raw tokens or secrets, aligning to fields available in todo_app_password_resets and the updated todo_app_users record.","summary":"Consume todo_app_password_resets and apply new todo_app_users.password_hash.","parameters":[],"requestBody":{"description":"Password reset confirmation payload (token and new credential).","typeName":"ITodoAppPasswordReset.IConfirm"},"responseBody":{"description":"Summary after successful password reset completion.","typeName":"ITodoAppPasswordReset.ISummary"},"authorizationRole":null,"name":"confirmPasswordReset","path":"/auth/guestVisitor/password/reset/confirm","method":"post"},{"specification":"Confirm an email verification token for account activation or email change. Primary DB tables: todo_app_email_verifications (token_hash, target_email, expires_at, consumed_at, failure_count) for the token lifecycle and todo_app_users (email_verified, verified_at, email) for user flags. Public operation that finalizes verification without requiring a session.","authorizationType":null,"description":"This operation validates a verification token stored in todo_app_email_verifications by matching token_hash within its expires_at window and marking consumption using consumed_at while optionally increasing failure_count for invalid attempts. When valid, the subject user’s todo_app_users record is updated to set email_verified to true and verified_at to the current time. If the flow is part of an email change, target_email can guide which address is being confirmed per schema.\n\nNo authentication is required, and the endpoint must avoid revealing whether a given token corresponds to an existing account except through success or failure of the verification. The process updates only the specific fields defined in the schema and does not expose the raw token at any point.\n\nSecurity considerations include honoring the expiry semantics, ensuring idempotent handling for already consumed tokens via consumed_at, and maintaining minimal, consistent error messages. The operation may emit business events externally using the available context such as ip and user_agent if captured.\n\nThis endpoint is commonly preceded by the guest join operation (when target_email is provided) or a change‑email request. It complements the resend operation which creates a fresh entry in todo_app_email_verifications and re-triggers delivery.\n\nErrors include invalid or expired tokens and policy gating when the account status does not allow verification at this time.","summary":"Consume todo_app_email_verifications to set todo_app_users.email_verified and verified_at.","parameters":[],"requestBody":{"description":"Email verification confirmation payload (token).","typeName":"ITodoAppEmailVerification.IConfirm"},"responseBody":{"description":"Verification result summary.","typeName":"ITodoAppEmailVerification.ISummary"},"authorizationRole":null,"name":"verifyEmail","path":"/auth/guestVisitor/email/verify","method":"post"},{"specification":"Resend an email verification by creating a new token record. Primary DB table: todo_app_email_verifications capturing token_hash, target_email, sent_at, expires_at and failure_count for tracking. Public operation that acknowledges the request without disclosing account existence.","authorizationType":null,"description":"This operation generates a new verification entry in todo_app_email_verifications for the provided email address or user context. The record sets target_email, token_hash (derived from an opaque token), sent_at, and expires_at based on policy. For repeated failures, failure_count can support rate-limiting and diagnostics as indicated by the schema fields.\n\nNo session is required to use this endpoint, and responses remain generic so as not to reveal whether a matching account exists. The underlying todo_app_users record will be updated later by the verification confirmation endpoint to set email_verified and verified_at.\n\nSecurity considerations include applying rate limits and ensuring that token values are generated with sufficient entropy and persisted only as token_hash. The endpoint does not modify todo_app_users directly and avoids exposing sensitive internal details.\n\nThis operation is typically used after the guest join flow when a verification email failed to arrive or expired, and it pairs with the verification confirmation endpoint. It is independent of session state.\n\nErrors include invalid input and policy-based throttling for excessive requests.","summary":"Insert new todo_app_email_verifications row and trigger delivery for verification.","parameters":[],"requestBody":{"description":"Resend verification request payload (email or user hint per policy).","typeName":"ITodoAppEmailVerification.IResendRequest"},"responseBody":{"description":"Verification resend acknowledgment summary.","typeName":"ITodoAppEmailVerification.ISummary"},"authorizationRole":null,"name":"resendVerification","path":"/auth/guestVisitor/email/verify/resend","method":"post"},{"specification":"Logout the current guestVisitor by revoking the active session. Primary DB tables: todo_app_sessions (revoked_at, revoked_reason) and todo_app_session_revocations (one record per session capturing revoked_at, revoked_by, reason). Requires an authenticated request using the current access token issued during join/refresh.","authorizationType":null,"description":"This operation terminates the caller’s active session by updating the corresponding todo_app_sessions record with revoked_at and an optional revoked_reason. To ensure auditability, a single record is inserted into todo_app_session_revocations for that session, covering the fields revoked_at, revoked_by (e.g., \"user\"), and a free‑form reason consistent with the schema.\n\nThe endpoint requires the caller to be authenticated as a guestVisitor. It does not alter the underlying todo_app_users identity record; it only affects session validity and related refresh tokens per policy. The implementation should also consider invalidating outstanding refresh tokens associated with the session via todo_app_refresh_tokens by setting revoked_at and revoked_reason when applicable.\n\nSecurity considerations include idempotent handling (revoking an already revoked session returns success without additional state changes) and avoiding disclosure of token internals. Client context (ip, user_agent) captured in todo_app_sessions remains available for subsequent audits.\n\nThis operation is typically used after join or refresh and complements the refresh flow and email verification steps. Errors include missing authentication and policy-based denials.\n\nOn success, the response returns a concise summary derived from todo_app_session_revocations for traceability.","summary":"Revoke current session in todo_app_sessions and create todo_app_session_revocations for guestVisitor logout.","parameters":[],"requestBody":{"description":"Logout request payload (optional reason or scope).","typeName":"ITodoAppSessionRevocation.ICreate"},"responseBody":{"description":"Summary of the recorded session revocation.","typeName":"ITodoAppSessionRevocation.ISummary"},"authorizationRole":"guestVisitor","name":"logout","path":"/auth/guestVisitor/logout","method":"post"},{"specification":"Implement registration for member role \"todoUser\". This operation creates a new account in todo_app_users, assigns the member role by inserting into todo_app_todousers (with granted_at and null revoked_at), and establishes an authenticated session by creating a row in todo_app_sessions plus an initial refresh token chain in todo_app_refresh_tokens. It must also record a login success entry in todo_app_login_attempts and set initial lifecycle fields on todo_app_users (status, email_verified, verified_at). The endpoint returns JWTs and session context via a DTO. Prisma tables involved: todo_app_users (core user record), todo_app_todousers (role assignment), todo_app_sessions (access/session token metadata), todo_app_refresh_tokens (refresh token rotation chain), todo_app_login_attempts (outcome logging).","authorizationType":"join","description":"Purpose and functionality: Registers a new member user and issues authentication tokens based on the Actors and Auth schema. Uses todo_app_users.email as the unique login identifier, stores credentials in todo_app_users.password_hash, initializes account lifecycle via todo_app_users.status and todo_app_users.email_verified, and stamps timestamps like todo_app_users.created_at and updated_at according to policy. A role assignment entry is inserted into todo_app_todousers with granted_at set and revoked_at null, marking the account as a current todoUser.\n\nImplementation details: After persisting the user (todo_app_users), this operation creates a session in todo_app_sessions with session_token, issued_at, expires_at, ip, and user_agent as available, and then inserts a first refresh token in todo_app_refresh_tokens with token_hash, issued_at, expires_at, and parent_id null. A success record in todo_app_login_attempts is appended with success=true and failure_reason null. The response encapsulates the authorized context (access/refresh semantics derived from session/refresh records) in an application DTO; no plaintext secrets are persisted beyond token/refresh hashes as per schema comments.\n\nRole-specific integration: This is for the \"todoUser\" role and therefore populates todo_app_todousers for the created user. It does not create admin/system role records (todo_app_systemadmins) and does not assign guest history (todo_app_guestvisitors) unless governance workflows do so separately.\n\nSecurity considerations: Passwords are never stored in plaintext; only todo_app_users.password_hash is persisted. Session validity and rotation lifetimes are controlled by todo_app_sessions.expires_at and todo_app_refresh_tokens.expires_at. Account admission can honor policies via todo_app_users.status (e.g., \"pending_verification\" vs. \"active\") and email verification state via todo_app_users.email_verified and verified_at. All tokens should be conveyed to the client via the response object and audited via todo_app_audit_logs if required by policy.\n\nRelated operations: Clients typically proceed to protected APIs using the returned credentials. For email verification, see the email verification consumption endpoint that manipulates todo_app_email_verifications. For token renewal, use the refresh endpoint that appends a new child in todo_app_refresh_tokens and updates rotation fields. Errors include duplicate email (todo_app_users.email uniqueness), invalid password policy, or policy blocks implied by todo_app_users.status values.","summary":"Register a new member in todo_app_users and assign todo_app_todousers; create session/refresh in Auth tables.","parameters":[],"requestBody":{"description":"Registration payload for creating a todoUser account and initial session.","typeName":"ITodoAppTodoUser.ICreate"},"responseBody":{"description":"Authorized context for the newly registered todoUser including token/session metadata.","typeName":"ITodoAppTodoUser.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/todoUser/join","method":"post"},{"specification":"Authenticate existing member \"todoUser\" by verifying credentials from todo_app_users and issuing a new session in todo_app_sessions with a refresh token chain entry in todo_app_refresh_tokens. Record the attempt in todo_app_login_attempts (success or failure). Update todo_app_users.last_login_at on success. Prisma tables: todo_app_users, todo_app_sessions, todo_app_refresh_tokens, todo_app_login_attempts, and role presence validated via todo_app_todousers (active grant).","authorizationType":"login","description":"Purpose and functionality: Authenticates a user identified by todo_app_users.email using a submitted credential compared against todo_app_users.password_hash. On success, sets todo_app_users.last_login_at and returns an authorized DTO while preserving role membership via todo_app_todousers (granted_at not revoked_at).\n\nImplementation details: Creates a todo_app_sessions row with session_token, issued_at, expires_at, and optional ip/user_agent, then inserts a todo_app_refresh_tokens row with token_hash, issued_at, and expires_at. Appends a todo_app_login_attempts record with success=true on successful login or success=false with failure_reason (e.g., \"invalid_credentials\" or account state) for failures. Enforces lifecycle gates using todo_app_users.status (e.g., block when \"suspended\") and email gating using todo_app_users.email_verified and verified_at according to policy.\n\nRole-specific integration: Confirms that the authenticating account currently holds the member role by checking an active row in todo_app_todousers (revoked_at IS NULL). This endpoint is specific to todoUser and does not authenticate systemAdmin.\n\nSecurity considerations: Never expose whether the email exists; failures should be logged in todo_app_login_attempts with generic failure_reason. Sessions must honor todo_app_sessions.expires_at and revocation flows using revoked_at and optional todo_app_session_revocations. Refresh tokens must be stored as token_hash within todo_app_refresh_tokens and rotated on subsequent refresh.\n\nRelated operations: Use the refresh endpoint for renewing tokens bound to an existing session (todo_app_sessions and todo_app_refresh_tokens). For password resets, see password reset request and confirmation endpoints using todo_app_password_resets.","summary":"Login for todoUser using todo_app_users; creates todo_app_sessions and todo_app_refresh_tokens and logs attempts.","parameters":[],"requestBody":{"description":"Login payload with email and password for todoUser authentication.","typeName":"ITodoAppTodoUserLogin.IRequest"},"responseBody":{"description":"Authorized context for the authenticated todoUser including token/session metadata.","typeName":"ITodoAppTodoUser.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/todoUser/login","method":"post"},{"specification":"Refresh JWTs for an existing session by validating a refresh token against todo_app_refresh_tokens (token_hash uniqueness, expiry, rotation) and its parent session in todo_app_sessions (expires_at, revoked_at). On success, issue a new refresh token in todo_app_refresh_tokens (linking parent_id to prior token) and optionally update session metadata. Prisma tables: todo_app_refresh_tokens, todo_app_sessions, todo_app_users (status/email_verified checks), todo_app_todousers (role membership).","authorizationType":"refresh","description":"Purpose and functionality: Accepts a refresh token and renews access credentials for a member account. Validates the token via todo_app_refresh_tokens.token_hash, respects expires_at, and checks rotated_at/revoked_at to enforce single-use rotation. Ensures the parent session in todo_app_sessions is valid (not expired per expires_at and not revoked via revoked_at).\n\nImplementation details: Creates a new child row in todo_app_refresh_tokens with parent_id referencing the previous token, sets issued_at/expires_at, and marks the previous token’s rotated_at. Session metadata (e.g., updated_at or ip/user_agent) may be updated according to policy. The response carries renewed authorization context in the standardized DTO.\n\nRole-specific integration: Confirms that the owning user still has an active todoUser role via an unrevoked row in todo_app_todousers and that the user’s account lifecycle in todo_app_users.status allows continued authentication.\n\nSecurity considerations: Tokens are stored as token_hash only; plaintext values are never persisted. Rotation is strict: an already-rotated token (rotated_at not null) is rejected. Revocation actions are respected using todo_app_refresh_tokens.revoked_at/revoked_reason and todo_app_sessions.revoked_at/revoked_reason.\n\nRelated operations: If the user needs to end the session, use the logout endpoint that records a revocation via todo_app_session_revocations. For credential changes, see change password, which should revoke others' sessions per policy.","summary":"Refresh tokens for todoUser using todo_app_refresh_tokens rotation and todo_app_sessions validity.","parameters":[],"requestBody":{"description":"Refresh payload carrying the refresh token to rotate and renew access.","typeName":"ITodoAppTodoUserRefresh.IRequest"},"responseBody":{"description":"Authorized context with renewed tokens for the todoUser.","typeName":"ITodoAppTodoUser.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/todoUser/refresh","method":"post"},{"specification":"Consume an email verification token for the member account using todo_app_email_verifications. Marks the token as consumed (consumed_at), verifies the user by setting todo_app_users.email_verified=true and todo_app_users.verified_at, and may update todo_app_users.status per policy. Prisma tables: todo_app_email_verifications, todo_app_users, and optional audit in todo_app_audit_logs.","authorizationType":null,"description":"Purpose and functionality: Confirms email ownership by validating a token stored as todo_app_email_verifications.token_hash with expiry enforced by expires_at. On success, updates the user’s todo_app_users.email_verified to true and stamps verified_at. This supports policies that require verification prior to login.\n\nImplementation details: Looks up the record by the provided token (mapped to token_hash), ensures not expired (expires_at) and not already consumed (consumed_at null), then sets consumed_at and optionally consumed_by_ip. Updates the linked user’s lifecycle, potentially transitioning todo_app_users.status from a pending state to an active state as allowed by governance.\n\nRole-specific integration: Applies to the todoUser pathway. No role guard is required for token consumption; identity is proven by the verification token itself.\n\nSecurity considerations: The raw token should not be stored; only token_hash is persisted. Multiple failed attempts may be reflected by failure_count in todo_app_email_verifications. The endpoint should avoid leaking whether a given email exists beyond token possession.\n\nRelated operations: Registration issues or schedules a verification entry in todo_app_email_verifications. Login may enforce that todo_app_users.email_verified is true depending on policy.","summary":"Verify email using todo_app_email_verifications and update todo_app_users verification fields.","parameters":[],"requestBody":{"description":"Verification payload carrying the email verification token.","typeName":"ITodoAppTodoUserEmailVerification.IConsume"},"responseBody":{"description":"Result of email verification with updated verification status.","typeName":"ITodoAppEmailVerification"},"authorizationRole":null,"name":"verifyEmail","path":"/auth/todoUser/email/verify","method":"post"},{"specification":"Initiate a password reset workflow by creating a request in todo_app_password_resets (requested_at, email, optional todo_app_user_id when resolvable). Sends verification outside of API scope and returns an acknowledgment. Prisma tables: todo_app_password_resets and optional correlation to todo_app_users by email.","authorizationType":null,"description":"Purpose and functionality: Starts the password reset process without revealing account existence. Inserts a row into todo_app_password_resets with email, requested_at, expires_at, and token_hash (token is not stored in plaintext). If the email maps to an account, todo_app_user_id is populated; otherwise it remains null, preserving privacy.\n\nImplementation details: Generates a secure token, stores token_hash and expiry in todo_app_password_resets, and may capture requested_by_ip. No immediate change is made to todo_app_users; completion occurs via the confirm endpoint.\n\nRole-specific integration: Publicly accessible to guest or signed-out members; not guarded by role.\n\nSecurity considerations: The response should be an acknowledgment without indicating whether email exists. Rate limiting can be supported using todo_app_ip_rate_counters or todo_app_user_rate_counters as policy dictates.\n\nRelated operations: The confirm endpoint consumes the token and updates the user’s todo_app_users.password_hash. Login attempts may subsequently succeed using the new credential.","summary":"Request password reset by inserting into todo_app_password_resets with privacy-preserving behavior.","parameters":[],"requestBody":{"description":"Password reset request payload carrying the email address.","typeName":"ITodoAppTodoUserPasswordReset.IRequest"},"responseBody":{"description":"Acknowledgment that the reset request was accepted for processing.","typeName":"ITodoAppPasswordReset.IRequested"},"authorizationRole":null,"name":"requestPasswordReset","path":"/auth/todoUser/password/reset/request","method":"post"},{"specification":"Complete a password reset by validating a token in todo_app_password_resets (token_hash, expires_at, consumed_at) and, if valid, updating todo_app_users.password_hash and stamping consumed_at. May also revoke sessions via todo_app_session_revocations and invalidate refresh chains via todo_app_refresh_tokens.revoked_at. Prisma tables: todo_app_password_resets, todo_app_users, todo_app_sessions, todo_app_refresh_tokens.","authorizationType":null,"description":"Purpose and functionality: Confirms a password reset using the one-time token stored in todo_app_password_resets. Validates expiry (expires_at) and ensures the token has not been used (consumed_at is null). On success, updates the associated user’s todo_app_users.password_hash with a new hash and stamps consumed_at.\n\nImplementation details: For security, any active todo_app_sessions for the user should be revoked (setting revoked_at and optionally inserting a todo_app_session_revocations row) and all relevant todo_app_refresh_tokens should be marked revoked_at with revoked_reason reflecting the reset. This forces re-authentication using the new credential.\n\nRole-specific integration: This is a public endpoint; identity is proven by possession of a valid reset token.\n\nSecurity considerations: Do not disclose whether the email exists; operate solely based on the token. Ensure strong password policy validation before updating todo_app_users.password_hash.\n\nRelated operations: After completion, the user may proceed to login. Failed or expired tokens should lead to a new request via the reset request endpoint.","summary":"Confirm password reset using todo_app_password_resets; update todo_app_users.password_hash and revoke sessions.","parameters":[],"requestBody":{"description":"Reset confirmation payload carrying token and new password.","typeName":"ITodoAppTodoUserPasswordReset.IConfirm"},"responseBody":{"description":"Result of the password reset completion.","typeName":"ITodoAppPasswordReset.ICompleted"},"authorizationRole":null,"name":"confirmPasswordReset","path":"/auth/todoUser/password/reset/confirm","method":"post"},{"specification":"Allow an authenticated member to change their password by verifying current credentials and then updating todo_app_users.password_hash. For security, revoke other sessions and refresh chains via todo_app_session_revocations and todo_app_refresh_tokens. Prisma tables: todo_app_users, todo_app_sessions, todo_app_refresh_tokens, todo_app_session_revocations.","authorizationType":null,"description":"Purpose and functionality: Authenticated password change for a todoUser. Verifies the provided current credential against todo_app_users.password_hash before updating to a new hash. Updates todo_app_users.updated_at as appropriate.\n\nImplementation details: On success, creates revocations for other sessions in todo_app_sessions (setting revoked_at/revoked_reason and adding a single todo_app_session_revocations row per session as per unique constraint) and revokes outstanding todo_app_refresh_tokens by setting revoked_at. The current session may remain or also be rotated depending on policy.\n\nRole-specific integration: Requires an authenticated todoUser; access is controlled through the role guard, not public token possession.\n\nSecurity considerations: Enforce strong password policy before updating the hash. Avoid disclosing whether the current password matched beyond a generic failure response. Consider appending an audit record in todo_app_audit_logs with action=\"change_password\".\n\nRelated operations: Users may use logout or revoke other sessions endpoints to proactively manage sessions; login and refresh continue to operate normally with the new credential.","summary":"Change password for authenticated todoUser by updating todo_app_users.password_hash and revoking other sessions.","parameters":[],"requestBody":{"description":"Change password payload including current and new password.","typeName":"ITodoAppTodoUserPassword.IChange"},"responseBody":{"description":"Result of password change.","typeName":"ITodoAppPasswordChange"},"authorizationRole":"todoUser","name":"changePassword","path":"/auth/todoUser/password/change","method":"put"},{"specification":"Logout the current session by revoking the active todo_app_sessions record (set revoked_at and optional revoked_reason) and inserting/ensuring a single todo_app_session_revocations row due to its uniqueness on todo_app_session_id. Optionally revoke the current refresh token in todo_app_refresh_tokens. Prisma tables: todo_app_sessions, todo_app_session_revocations, todo_app_refresh_tokens.","authorizationType":null,"description":"Purpose and functionality: Ends the authenticated session for a todoUser by marking the session as revoked in todo_app_sessions and recording a revocation entry in todo_app_session_revocations. May also mark the currently held refresh token as revoked in todo_app_refresh_tokens.\n\nImplementation details: Identifies the current session via the authenticated context, sets revoked_at and revoked_reason, and creates the associated todo_app_session_revocations row with revoked_by (e.g., \"user\") and optional reason. No user record changes are required.\n\nRole-specific integration: Requires an authenticated todoUser. The operation affects only the caller’s current session.\n\nSecurity considerations: Ensure idempotency—repeated calls should succeed without error if the session is already revoked. Avoid exposing other session details. Consider appending an audit log entry in todo_app_audit_logs with action=\"logout\".\n\nRelated operations: To revoke all other devices, use the revokeOthers endpoint. To renew access later, use login or refresh.","summary":"Logout current session by updating todo_app_sessions and inserting into todo_app_session_revocations; optionally revoke current refresh token.","parameters":[],"requestBody":null,"responseBody":null,"authorizationRole":"todoUser","name":"logout","path":"/auth/todoUser/logout","method":"post"},{"specification":"Revoke all other active sessions for the authenticated member by locating other rows in todo_app_sessions (same user, different session id, not revoked) and setting revoked_at along with an entry in todo_app_session_revocations per session. Revoke corresponding refresh tokens in todo_app_refresh_tokens. Prisma tables: todo_app_sessions, todo_app_session_revocations, todo_app_refresh_tokens.","authorizationType":null,"description":"Purpose and functionality: Security operation for a todoUser to end active sessions on other devices/browsers. Iterates through todo_app_sessions for the user, excluding the current session, and sets revoked_at with a consistent revoked_reason (e.g., \"user_revoke_others\"). Inserts one todo_app_session_revocations record per revoked session.\n\nImplementation details: For each affected session, also mark related todo_app_refresh_tokens as revoked_at with an appropriate revoked_reason. The endpoint returns success after best-effort revocation.\n\nRole-specific integration: Requires an authenticated todoUser; applies only to their own sessions.\n\nSecurity considerations: Ensure the current session remains valid unless policy dictates otherwise. Avoid disclosing details of other sessions to the caller beyond acknowledgment of revocation.\n\nRelated operations: Pair with change password for comprehensive account security, and with logout for ending the current device session.","summary":"Revoke other sessions for the authenticated todoUser by updating todo_app_sessions and related refresh tokens.","parameters":[],"requestBody":{"description":"Optional payload to filter which sessions to revoke; when empty, revokes all others.","typeName":"ITodoAppSession.IRevokeOthers"},"responseBody":null,"authorizationRole":"todoUser","name":"revokeOtherSessions","path":"/auth/todoUser/sessions/revokeOthers","method":"post"},{"specification":"Create a new system administrator account and issue initial JWT credentials. This operation writes to the core user table todo_app_users (fields: email, password_hash, status, email_verified, verified_at, last_login_at, created_at, updated_at, deleted_at) and creates an admin role assignment record in todo_app_systemadmins (fields: todo_app_user_id, granted_at, revoked_at, created_at, updated_at, deleted_at). It may also initialize a session in todo_app_sessions and a refresh token in todo_app_refresh_tokens as part of the sign-up flow.","authorizationType":"join","description":"This endpoint registers a new system administrator by inserting a user row into todo_app_users and establishing an initial role grant in todo_app_systemadmins. The todo_app_users table stores email for login, password_hash for credential verification, status to control lifecycle (e.g., active or pending_verification), and email_verified/verified_at for verification policy. The admin role history is captured in todo_app_systemadmins with granted_at and optional revoked_at to preserve governance history.\n\nOn successful registration, the service can initialize authentication artifacts: a session in todo_app_sessions with issued_at, expires_at, optionally ip and user_agent, and a refresh token in todo_app_refresh_tokens with issued_at/expires_at and token_hash for secure lookup. These artifacts are returned through the authorized response contract.\n\nThe operation integrates with policy and configuration surfaces via read-only logic as needed, but the primary persistence is restricted to todo_app_users and todo_app_systemadmins. It does not touch private todo content tables, preserving separation of concerns.\n\nSecurity considerations match the schema: no plaintext password storage (password_hash only), and the email field must be unique. Account status in todo_app_users determines whether the new admin can immediately log in; email_verified and verified_at reflect verification requirements.\n\nRelated operations include login for existing admins, refresh to renew tokens based on todo_app_refresh_tokens, and email verification flows backed by todo_app_email_verifications. Error handling should reflect uniqueness on email and policy validation for password strength.","summary":"Register a systemAdmin using todo_app_users and grant role in todo_app_systemadmins.","parameters":[],"requestBody":{"description":"Registration payload for creating a systemAdmin account.","typeName":"ITodoAppSystemAdminJoin.ICreate"},"responseBody":{"description":"Authorized session and tokens after successful admin registration.","typeName":"ITodoAppSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/systemAdmin/join","method":"post"},{"specification":"Authenticate a system administrator using credentials from todo_app_users and issue a new session row in todo_app_sessions and a refresh token row in todo_app_refresh_tokens. Successful login updates last_login_at in todo_app_users for activity tracking.","authorizationType":"login","description":"This endpoint validates the admin’s email and password against todo_app_users, using the stored password_hash. The account’s status and email_verified flags determine eligibility to authenticate. On success, it records a new session in todo_app_sessions with issued_at/expires_at and optional ip/user_agent, and creates a refresh token in todo_app_refresh_tokens with issued_at/expires_at and token_hash.\n\nThe todo_app_login_attempts table may be recorded separately by the application for success/failure analytics (success, failure_reason, occurred_at, ip, user_agent), but this endpoint focuses on establishing authenticated state.\n\nReturned data follows the authorized contract, carrying access and refresh tokens derived from todo_app_sessions and todo_app_refresh_tokens. The user’s last_login_at in todo_app_users can be updated to reflect the successful login event.\n\nThis operation should not touch private todo data and is restricted to authentication surfaces. It interoperates with email verification flows tracked by todo_app_email_verifications, where email_verified and verified_at govern access.\n\nRelated endpoints are refresh for token renewal and logout or revoke sessions backed by todo_app_session_revocations. Errors include invalid credentials, suspended status in status, or unverified email as applicable to business policy.","summary":"Login a systemAdmin via todo_app_users and issue session/refresh artifacts.","parameters":[],"requestBody":{"description":"Login credentials for systemAdmin authentication.","typeName":"ITodoAppSystemAdminLogin.ICreate"},"responseBody":{"description":"Authorized credentials and session info for the authenticated admin.","typeName":"ITodoAppSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/systemAdmin/login","method":"post"},{"specification":"Renew tokens for a system administrator by validating and rotating records in todo_app_refresh_tokens and updating the corresponding session in todo_app_sessions when needed. The user identity is derived from the session chain tied to the refresh token.","authorizationType":"refresh","description":"This endpoint processes a refresh token associated with a session in todo_app_sessions. The request includes a refresh token whose token_hash maps to a row in todo_app_refresh_tokens that is not expired and not revoked/rotated. On valid input, the service rotates the token (sets rotated_at on the current record, creates a new child token referencing parent_id) and can update todo_app_sessions metadata such as updated_at.\n\nThe response returns new access credentials following the authorized contract. Rotation and revocation states are enforced strictly using fields like expires_at, rotated_at, revoked_at, and revoked_reason in todo_app_refresh_tokens and revoked_at/revoked_reason in todo_app_sessions if applicable.\n\nSecurity posture follows the schema’s recommendation to avoid plaintext storage of tokens, using token_hash for durable lookups. No private todo content is accessed through this flow, and the user’s core account data remains in todo_app_users.\n\nThis operation is complementary to login for first-time access and to logout/session revocation that may set entries in todo_app_session_revocations. Errors include expired or revoked tokens, or mismatched session associations.\n\nPolicy may cap session lifetimes by comparing issued_at/expires_at across both the session and refresh chain to enforce maximum durations.","summary":"Refresh tokens for systemAdmin using todo_app_refresh_tokens and todo_app_sessions.","parameters":[],"requestBody":{"description":"Refresh request containing the refresh token.","typeName":"ITodoAppSystemAdminRefresh.ICreate"},"responseBody":{"description":"Newly authorized tokens issued after successful refresh.","typeName":"ITodoAppSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/systemAdmin/refresh","method":"post"},{"specification":"Verify a system administrator’s email using a verification token recorded in todo_app_email_verifications and update email verification flags in todo_app_users (email_verified, verified_at).","authorizationType":null,"description":"This endpoint consumes a verification token tracked in todo_app_email_verifications, which includes token_hash, target_email, expires_at, and consumed_at. Upon successful verification within expiry, the service updates the user’s todo_app_users row by setting email_verified to true and verified_at to the verification time.\n\nBecause verification is a pre-auth step for many flows, this endpoint is public and does not require an authenticated session. It strictly operates on email verification artifacts, not on private todo content.\n\nThe token record in todo_app_email_verifications is marked consumed by setting consumed_at, and may also be correlated with client context like consumed_by_ip for auditability per the schema.\n\nThis operation is related to registration (join) and login. If an account’s status or email verification is required by policy before login is allowed, this endpoint completes that prerequisite.\n\nErrors include invalid or expired tokens (validated using expires_at), already consumed tokens (consumed_at), or mismatched target_email. No changes are made to unrelated entities.","summary":"Verify admin email via todo_app_email_verifications and update todo_app_users.","parameters":[],"requestBody":{"description":"Email verification token consumption payload.","typeName":"ITodoAppSystemAdminEmailVerification.ICreate"},"responseBody":{"description":"Result of email verification with updated state.","typeName":"ITodoAppSystemAdminEmailVerificationResult"},"authorizationRole":null,"name":"verifyEmail","path":"/auth/systemAdmin/email/verify","method":"post"},{"specification":"Request resending a verification email for a system administrator by creating a new token in todo_app_email_verifications referencing the user and target_email.","authorizationType":null,"description":"This endpoint initiates an email verification resend by inserting a new row into todo_app_email_verifications for the target user, setting token_hash, target_email, sent_at, and expires_at based on policy. It does not alter existing todo_app_users fields besides potentially leaving status as-is.\n\nResend is typically allowed before email_verified becomes true in todo_app_users. The system ensures previous tokens can remain tracked while a new token is issued, preserving history and rate-limiting risk.\n\nThis endpoint is public from an authentication standpoint but should enforce controls like rate limits (potentially via todo_app_rate_limits and counters) to prevent abuse.\n\nIt is closely related to join and verify email, forming a complete verification workflow. The endpoint does not access private todo content.\n\nErrors include attempts to resend for accounts that are already verified or lack of a corresponding account, which should be handled in a privacy-preserving manner.","summary":"Resend admin verification email using todo_app_email_verifications.","parameters":[],"requestBody":{"description":"Resend verification request payload.","typeName":"ITodoAppSystemAdminEmailVerificationResend.ICreate"},"responseBody":{"description":"Acknowledgment of verification resend request.","typeName":"ITodoAppSystemAdminEmailVerificationResendResult"},"authorizationRole":null,"name":"resendVerificationEmail","path":"/auth/systemAdmin/email/verify/resend","method":"post"},{"specification":"Initiate an admin password reset by recording a request in todo_app_password_resets with email, token_hash, requested_at, expires_at, and request metadata.","authorizationType":null,"description":"This endpoint accepts an email and creates a password reset request in todo_app_password_resets. The schema supports privacy-preserving flows by allowing todo_app_user_id to be null; therefore, responses should not disclose whether the email maps to an existing account.\n\nA reset token row is created with token_hash, requested_at, expires_at, and optional requested_by_ip for auditability. No changes are made to todo_app_users at this stage. The endpoint does not access private todo content.\n\nThis operation pairs with the reset confirmation endpoint that will validate the token and update the user’s password_hash. It is also related to login and account status controls in the todo_app_users table.\n\nErrors include excessive requests that may be mitigated through rate limiting (e.g., via todo_app_rate_limits-related counters) and invalid email formats per business validation.\n\nAll behavior aligns with schema fields; no plaintext tokens or passwords are stored in database records.","summary":"Record password reset request for admin in todo_app_password_resets.","parameters":[],"requestBody":{"description":"Password reset request payload for an admin (email only).","typeName":"ITodoAppSystemAdminPasswordResetRequest.ICreate"},"responseBody":{"description":"Acknowledgment for password reset request creation.","typeName":"ITodoAppSystemAdminPasswordResetRequestResult"},"authorizationRole":null,"name":"requestPasswordReset","path":"/auth/systemAdmin/password/reset/request","method":"post"},{"specification":"Confirm an admin password reset by validating a token in todo_app_password_resets and updating password_hash in todo_app_users. Mark the token as consumed (consumed_at).","authorizationType":null,"description":"This endpoint validates a reset token tracked in todo_app_password_resets using token_hash and expiry constraints (expires_at). On success, the user’s todo_app_users.password_hash is updated, and the reset token record is marked used by setting consumed_at. It does not expose whether the email belonged to an account during the request phase.\n\nFollowing a password change, existing refresh/session artifacts can be invalidated by revoking sessions in todo_app_sessions and their chains in todo_app_refresh_tokens according to policy. The application may also record a revocation event in todo_app_session_revocations for auditability.\n\nThis operation is closely related to login (which should now require the new password) and to session revocation routines. It does not interact with private todo entities.\n\nErrors include expired or already-consumed tokens, or policy violations for new password strength. All activities should be recorded as business/audit events as appropriate but are driven by the fields detailed in the schema.\n\nThe implementation must avoid storing plaintext passwords, strictly updating password_hash in todo_app_users.","summary":"Confirm password reset using todo_app_password_resets and update todo_app_users.password_hash.","parameters":[],"requestBody":{"description":"Password reset confirmation payload with token and new password.","typeName":"ITodoAppSystemAdminPasswordResetConfirm.ICreate"},"responseBody":{"description":"Acknowledgment of successful password reset completion.","typeName":"ITodoAppSystemAdminPasswordResetConfirmResult"},"authorizationRole":null,"name":"confirmPasswordReset","path":"/auth/systemAdmin/password/reset/confirm","method":"post"},{"specification":"Change the current admin’s password using the authenticated context. Verify current password against todo_app_users.password_hash, then update password_hash. Optionally revoke other sessions in todo_app_sessions and related todo_app_refresh_tokens.","authorizationType":null,"description":"This endpoint requires an authenticated systemAdmin and operates on the caller’s own row in todo_app_users. It validates the provided current password against password_hash and, on success, sets a new password_hash. Post-change, policy may require revoking other active sessions (todo_app_sessions) and their refresh chains (todo_app_refresh_tokens) for the same user; a record may be inserted into todo_app_session_revocations to capture the action.\n\nBecause it affects only the caller’s account, the path uses the \"/my/\" prefix convention for self-targeted operations. No private todo content is accessed or changed.\n\nThe endpoint pairs with login and refresh flows and is complementary to password reset when the current password is unknown. Audit trails for such actions can be captured via todo_app_audit_logs.\n\nValidation applies to password policy and mismatch of current password. The operation updates only authentication-related fields in todo_app_users.\n\nErrors include incorrect current password, policy violations for the new password, or conflicts revoking sessions based on session state tracked in todo_app_sessions.","summary":"Change own admin password via todo_app_users; may revoke other sessions.","parameters":[],"requestBody":{"description":"Change-password payload including current and new password fields.","typeName":"ITodoAppSystemAdminPassword.IUpdate"},"responseBody":{"description":"Acknowledgment with metadata about post-change session handling.","typeName":"ITodoAppSystemAdminPasswordChangeResult"},"authorizationRole":"systemAdmin","name":"changePassword","path":"/my/auth/systemAdmin/password","method":"put"},{"specification":"Revoke other active sessions for the current admin by marking affected rows in todo_app_sessions (revoked_at, revoked_reason) and creating a record in todo_app_session_revocations per session. This does not delete records but updates their revocation fields per schema.","authorizationType":null,"description":"This endpoint acts on the authenticated systemAdmin’s sessions in todo_app_sessions. It revokes sessions other than the current one by setting revoked_at and optionally revoked_reason, and it creates related rows in todo_app_session_revocations with revoked_at, revoked_by, and optional reason. Refresh token chains in todo_app_refresh_tokens associated with those sessions should also be revoked (revoked_at/revoked_reason) to prevent further refresh.\n\nUsing the \"/my/\" prefix, the operation clearly targets the caller’s own resources. It is strictly an authentication maintenance function and does not interact with private todo data.\n\nThis operation is related to logout of the current session and complements password change and reset flows which often necessitate session invalidation. It respects the integrity of session history by recording revocations instead of removing records.\n\nErrors include attempting to revoke sessions that are already revoked or expired (based on expires_at), or no matching sessions to revoke. The application may log audit entries via todo_app_audit_logs for governance monitoring.\n\nThe endpoint should accept parameters to select scope (e.g., revoke all except current) within the request body and confirm outcomes in the response.","summary":"Revoke other sessions using todo_app_sessions and todo_app_session_revocations.","parameters":[],"requestBody":{"description":"Session revocation scope and options for the current admin.","typeName":"ITodoAppSystemAdminSessionRevocation.ICreate"},"responseBody":{"description":"Summary of revoked sessions and any tokens affected.","typeName":"ITodoAppSystemAdminSessionRevocationResult"},"authorizationRole":"systemAdmin","name":"revokeOtherSessions","path":"/my/auth/systemAdmin/sessions/revoke","method":"post"},{"specification":"Logout the current admin by revoking the active session row in todo_app_sessions (revoked_at, revoked_reason) and optionally revoking the current refresh token in todo_app_refresh_tokens. Record a revocation entry in todo_app_session_revocations.","authorizationType":null,"description":"This self-scoped endpoint targets the authenticated admin’s current session. It updates the session record in todo_app_sessions by setting revoked_at and optionally revoked_reason, and creates a corresponding todo_app_session_revocations row (revoked_at, revoked_by, reason). If a refresh token exists in todo_app_refresh_tokens for this session, it should be revoked (revoked_at/revoked_reason) to prevent further use.\n\nThe path follows the \"/my/\" convention because it manages the caller’s own session. No private todo content is read or modified by this operation.\n\nThis operation integrates with the broader authentication lifecycle that includes login and refresh. It ensures clean termination of authenticated state and supports governance via audit logging when appropriate.\n\nErrors may include an already revoked or expired session (expires_at) and race conditions addressed by idempotent updates (setting revoked_at if null). The response reports outcome details.\n\nAll updates are limited to authentication-related tables: todo_app_sessions, todo_app_refresh_tokens, and todo_app_session_revocations; todo_app_users remains unchanged aside from optional last_login_at updates handled elsewhere.","summary":"Logout current admin by revoking session and refresh token per schema.","parameters":[],"requestBody":{"description":"Optional context for logout (e.g., reason).","typeName":"ITodoAppSystemAdminLogout.ICreate"},"responseBody":{"description":"Acknowledgment and details of the session revocation.","typeName":"ITodoAppSystemAdminLogoutResult"},"authorizationRole":"systemAdmin","name":"logout","path":"/my/auth/systemAdmin/logout","method":"post"},{"specification":"Search and paginate over Todo items owned by the authenticated user. Operates on the Prisma table todo_app_todos as the primary resource. The endpoint supports advanced list retrieval semantics: pagination (page/index and size), sorting (created_at desc by default with optional due_at asc), status filtering (open, completed, or all), due-window filters (overdue, dueToday, future), and case-insensitive keyword search over title and description. It returns a paginated collection optimized for list views using the ITodoAppTodo.ISummary shape. Request payload follows ITodoAppTodo.IRequest to express complex filters and paging in the body. This operation is designed for user-managed data only; audit and metrics tables are populated by system processes and are not manipulated here.","authorizationRole":"todoUser","authorizationType":null,"description":"Retrieve a filtered and paginated list of the caller’s own Todo items from the todo_app_todos table. According to the Prisma schema, todo_app_todos stores: id (UUID), todo_app_user_id (owner reference to todo_app_users), title (required), description (optional), due_at (optional timestamptz interpreted in the owner’s timezone), status (expected business values 'open' or 'completed'), completed_at (set when completed), created_at, updated_at, and a deleted_at timestamp used by the system to exclude records from normal queries. Title is described as a required short text (business rule 1–120 characters after trimming), while description can be longer (typically up to 1000–2000 chars by policy). The list view MUST scope results to the authenticated user via todo_app_user_id and exclude records where deleted_at is not null.\n\nSecurity and permissions: access is restricted to authenticated end users acting as owners of their own Todos. The operation must enforce owner isolation using the relationship from todo_app_todos.todo_app_user_id to todo_app_users.id. Administrative or system-generated tables (e.g., activity trails, business events, counters) are not exposed or modified by this endpoint. Rate-limiting and throttling may be applied according to governance policies but are out of scope of this API contract.\n\nFiltering, search, and sorting: the request body ITodoAppTodo.IRequest conveys pagination (page number and size within 1–100), status filters (open/completed/all), optional due-window filters (e.g., overdue, dueToday, future), and a keyword query applied case-insensitively to title and description. By default, results sort by created_at descending (newest first). When sorting by due_at ascending, items without due_at should appear after those with a due date; ties may be resolved by created_at descending. The response is a paginated container IPageITodoAppTodo.ISummary encapsulating list data and pagination metadata suitable for UI list rendering.\n\nRelated operations: use GET /todoApp/todoUser/todos to create via POST /todoApp/todoUser/todos, GET /todoApp/todoUser/todos/{todoId} to retrieve a single Todo’s full details, and PUT /todoApp/todoUser/todos/{todoId} to update fields or toggle completion. System-generated records like todo_app_todo_activities or todo_app_business_events are written by service logic as side effects and do not have manual write endpoints in this set.","method":"patch","name":"index","parameters":[],"path":"/todoApp/todoUser/todos","requestBody":{"description":"Search, filtering, and pagination criteria for listing the caller’s Todos","typeName":"ITodoAppTodo.IRequest"},"responseBody":{"description":"Paginated list of Todo summaries matching the provided criteria","typeName":"IPageITodoAppTodo.ISummary"},"summary":"List/search Todos (todo_app_todos) with pagination, filters, and sorting for the authenticated owner"},{"specification":"Fetch a single Todo item by its identifier for the authenticated owner. Operates on the Prisma table todo_app_todos. The endpoint returns the full ITodoAppTodo representation, including core fields (id, todo_app_user_id, title, description, due_at, status, completed_at, created_at, updated_at) as defined by the schema. Ownership is enforced via the todo_app_user_id relation to todo_app_users; only the resource owner can access the record.","authorizationRole":"todoUser","authorizationType":null,"description":"Retrieve a single Todo from todo_app_todos by its id, ensuring it belongs to the requesting user. The Prisma model defines fields including id (UUID), todo_app_user_id (FK to todo_app_users establishing ownership), title (required), description (optional), due_at (optional timestamptz), status (business-level 'open' or 'completed'), completed_at (set when completed, cleared when reopened), created_at, updated_at, and deleted_at (records with deleted_at not null are excluded from normal views). This operation presents the detailed entity ITodoAppTodo for display or editing.\n\nSecurity and access control: Only authenticated users may call this endpoint, and access is limited to records where todo_app_todos.todo_app_user_id equals the caller’s user id. If the target id does not belong to the caller or refers to a record considered deleted in normal flows, the service should deny access without revealing resource existence. Administrative and system tables (activities, events, counters) are out of scope for direct manipulation.\n\nError handling and related operations: If the identifier is malformed (not a UUID) or the record is not accessible to the caller, the service returns an appropriate error. Clients typically use this endpoint together with POST /todoApp/todoUser/todos (creation), PUT /todoApp/todoUser/todos/{todoId} (updates), and PATCH /todoApp/todoUser/todos (lists with filters) to complete the CRUD workflow.","method":"get","name":"at","parameters":[{"name":"todoId","description":"Identifier of the target Todo (UUID)","schema":{"type":"string","format":"uuid"}}],"path":"/todoApp/todoUser/todos/{todoId}","requestBody":null,"responseBody":{"description":"Detailed Todo entity","typeName":"ITodoAppTodo"},"summary":"Get a single Todo (todo_app_todos) by id for the authenticated owner"},{"specification":"Create a new Todo item owned by the authenticated user in the Prisma table todo_app_todos. Accepts ITodoAppTodo.ICreate specifying business-validated fields such as title (required), optional description, and optional due_at. The record is initialized with status 'open', created_at and updated_at timestamps, and completed_at left null. Returns the created ITodoAppTodo.","authorizationRole":"todoUser","authorizationType":null,"description":"Create a Todo in todo_app_todos for the caller as owner. The Prisma schema defines: id (UUID), todo_app_user_id (owner), title (required short text; business rule 1–120 characters after trimming), description (optional longer text, commonly limited by policy to 1000–2000 chars), due_at (optional timestamptz in the owner’s timezone), status (expected 'open' or 'completed'), completed_at (null on creation), created_at, updated_at, and a deleted_at field used by the system to exclude records from normal views. On successful creation, implementation sets status to 'open', records timestamps, and associates ownership via todo_app_user_id.\n\nSecurity and validation: Only authenticated users can create Todos; the service assigns todo_app_user_id from the caller’s identity and validates inputs. The title must be non-empty after trimming and within the allowed length. Description and due_at are optional with policy-based constraints; due_at must be a valid date-time. The result returns the full ITodoAppTodo to support immediate UI rendering. System artifacts like activity logs and business events may be recorded automatically by the service as side effects and are not part of the request.\n\nRelated operations: After creation, clients generally call GET /todoApp/todoUser/todos/{todoId} for detail, PUT /todoApp/todoUser/todos/{todoId} to update fields or toggle completion, and PATCH /todoApp/todoUser/todos for list/search views.","method":"post","name":"create","parameters":[],"path":"/todoApp/todoUser/todos","requestBody":{"description":"Fields required to create a Todo (title required; optional description and due_at)","typeName":"ITodoAppTodo.ICreate"},"responseBody":{"description":"The newly created Todo entity","typeName":"ITodoAppTodo"},"summary":"Create a new Todo (todo_app_todos) owned by the authenticated user"},{"specification":"Update an existing Todo in the Prisma table todo_app_todos by identifier, restricted to the authenticated owner. Accepts ITodoAppTodo.IUpdate for mutable fields such as title, description, due_at, and status transitions between 'open' and 'completed'. The operation updates updated_at and sets/clears completed_at as appropriate, returning the updated ITodoAppTodo.","authorizationRole":"todoUser","authorizationType":null,"description":"Modify a Todo identified by id in todo_app_todos. The Prisma schema includes fields id (UUID), todo_app_user_id (owner), title, description, due_at, status, completed_at, created_at, updated_at, and deleted_at. Valid updates include changing title (respecting business rule 1–120 trimmed characters), description (policy length range), and due_at (valid date-time in the owner’s timezone). Status transitions to 'completed' should set completed_at; transitions back to 'open' should clear completed_at. The service maintains updated_at on successful updates.\n\nSecurity and permissions: Only the owner may update their Todo; ownership is enforced via todo_app_user_id against the caller identity. If the resource is not owned by the caller or is considered deleted from normal flows, the request must be denied without revealing existence. System tables that capture activities or events are updated by the service automatically and are not directly manipulated through this API.\n\nInteroperation and errors: Use GET /todoApp/todoUser/todos/{todoId} to fetch the current state before or after an update and PATCH /todoApp/todoUser/todos to retrieve lists. Validation failures (e.g., empty or overlong title, invalid due_at) result in field-specific errors. On success, the endpoint returns the updated ITodoAppTodo.","method":"put","name":"update","parameters":[{"name":"todoId","description":"Identifier of the target Todo (UUID)","schema":{"type":"string","format":"uuid"}}],"path":"/todoApp/todoUser/todos/{todoId}","requestBody":{"description":"Fields to update on the Todo, including optional status transitions","typeName":"ITodoAppTodo.IUpdate"},"responseBody":{"description":"The updated Todo entity","typeName":"ITodoAppTodo"},"summary":"Update a Todo (todo_app_todos) by id for the authenticated owner"},{"specification":"Delete a Todo resource owned by the authenticated user by marking it as deleted and recording audit artifacts. This operation targets the Prisma table todo_app_todos and implements the deletion workflow described in the schema comments. When invoked, providers should: (1) verify ownership using todo_app_todos.todo_app_user_id; (2) set todo_app_todos.deleted_at to the current timestamp (soft deletion as supported by the schema); (3) insert a deletion audit record in todo_app_todo_deletion_events (capturing todo_app_todo_id, todo_app_user_id, occurred_at, optional reason) and an activity record in todo_app_todo_activities (activity_type 'delete'); and (4) optionally emit business events via todo_app_business_events for downstream analytics. The endpoint is idempotent if the todo is already deleted.","path":"/todoApp/todoUser/todos/{todoId}","method":"delete","summary":"Delete a Todo by ID in todo_app_todos using soft deletion and record audit entries","description":"Delete a single Todo belonging to the caller. The underlying Prisma model is todo_app_todos, which stores ownership (todo_app_user_id), core fields (title, description, due_at, status), and lifecycle timestamps (created_at, updated_at, completed_at). The model includes a deleted_at column that, when set, excludes the record from normal listings. This endpoint sets deleted_at to the current time to implement the schema-supported deletion behavior, preserving privacy and enabling recovery windows and auditability described in related tables.\n\nSecurity and authorization: Only a user with role todoUser acting on their own record may delete it. The service must confirm that the path todoId resolves to a row where todo_app_todos.todo_app_user_id equals the authenticated user’s id. If not, deny without revealing whether the Todo exists, consistent with access-control requirements.\n\nRelationships and audit trail: Related append-only audit models include todo_app_todo_deletion_events (records occurred_at, optional reason, and links to the todo and deleter) and todo_app_todo_activities (records activity_type such as 'delete', details, changed_fields, and timestamps). Providers should create these audit entries as part of the deletion workflow to preserve a historical trail. Optionally, providers may also emit todo_app_business_events for analytics using a suitable event type.\n\nValidation and behavior: If the Todo has already been marked deleted (deleted_at not null), the operation should be treated as idempotent—perform no additional state changes and return success without error. If the todoId is not a valid UUID or cannot be resolved (with ownership), respond with a suitable error. No request body is required, and no response body is returned upon success. This operation performs a soft deletion as indicated by the presence of the deleted_at column in the Prisma schema, not a permanent physical removal.\n\nRelated operations: Use PATCH /todoApp/todoUser/todos/{todoId}/activities to review the activity history recorded in todo_app_todo_activities and PATCH /todoApp/todoUser/todos/{todoId}/deletionEvents to inspect deletion audit records in todo_app_todo_deletion_events.","parameters":[{"name":"todoId","description":"Unique identifier of the target todo","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"todoUser","name":"erase"},{"specification":"Retrieve a filtered, paginated list of activity records for a specific Todo. This operation reads from the Prisma table todo_app_todo_activities, which captures append-only audit events such as 'create', 'update', 'complete', 'reopen', and 'delete' with occurred_at, optional details, and actor references. The request body (ITodoAppTodoActivity.IRequest) should support pagination (page, pageSize), sorting (e.g., occurred_at desc/asc), and filters like activity_type, occurred_at range, and free-text search over details as appropriate. The response returns a paginated page IPageITodoAppTodoActivity.ISummary containing summary rows for display.","path":"/todoApp/todoUser/todos/{todoId}/activities","method":"patch","summary":"List Todo activity history from todo_app_todo_activities for a specific Todo","description":"Purpose and overview: Returns activity history for the Todo identified by todoId. The todo_app_todo_activities model stores audit trail fields including activity_type, details, changed_fields, previous_status, next_status, and occurred_at. It also maintains nullable relations to the Todo and the actor user to preserve history even if parents are later purged. This endpoint enables end users to review what happened to their Todo over time.\n\nSecurity considerations: Only the Todo owner (role todoUser) may access activities for their item. The provider must validate ownership via the parent todo_app_todos.todo_app_user_id. Attempts to read another user’s activities must be denied without revealing whether the resource exists.\n\nDB relationships and behavior: Activities reference todo_app_todos via todo_app_todo_id (nullable for history preservation) and todo_app_users via todo_app_user_id (nullable). Providers should filter results to the specified Todo and apply pagination and sorting as requested. Typical defaults sort by occurred_at descending. The underlying schema includes text-search indexes (e.g., on details) to support keyword filtering if exposed in IRequest.\n\nValidation and errors: If todoId is not a valid UUID or does not resolve to a Todo owned by the caller, the request must be rejected. The endpoint is read-only and does not modify activity records. Related endpoints include GET /todoApp/todoUser/todos/{todoId}/activities/{activityId} for fetching a single activity record.","parameters":[{"name":"todoId","description":"Identifier of the parent todo","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and pagination parameters for activity listing","typeName":"ITodoAppTodoActivity.IRequest"},"responseBody":{"description":"Paginated activity summaries for the requested Todo","typeName":"IPageITodoAppTodoActivity.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index"},{"specification":"Retrieve a single activity record associated with a specific Todo. This operation reads from the Prisma table todo_app_todo_activities. It requires both the parent todoId and the activityId path parameters. The response returns the full activity entity ITodoAppTodoActivity, including fields like activity_type, details, changed_fields, previous_status, next_status, and occurred_at. Ownership of the parent Todo must be enforced.","path":"/todoApp/todoUser/todos/{todoId}/activities/{activityId}","method":"get","summary":"Get a single Todo activity by ID from todo_app_todo_activities","description":"Purpose and overview: Fetches a detailed audit entry for the Todo’s activity history from todo_app_todo_activities. Activity records capture domain actions such as 'create', 'update', 'complete', 'reopen', and 'delete' with timestamps and optional descriptive details. The model’s FKs to the Todo and the actor are nullable to preserve history even after parent deletions.\n\nSecurity and permissions: Only the owner of the parent Todo may read its activities. Providers must ensure the todo_id belongs to the authenticated user (via todo_app_todos.todo_app_user_id). If the activity does not belong to the specified Todo, or the Todo is not owned by the caller, the request should be denied without disclosing existence.\n\nBehavior and error handling: On success, return the full activity document (ITodoAppTodoActivity). If activityId or todoId is not a valid UUID, or the record is not found under the specified parent with proper ownership, return an appropriate error. This is a read-only endpoint; it does not alter activity records.\n\nRelated endpoints: PATCH /todoApp/todoUser/todos/{todoId}/activities provides paginated search; DELETE /todoApp/todoUser/todos/{todoId} records a 'delete' activity upon successful deletion.","parameters":[{"name":"todoId","description":"Identifier of the parent todo","schema":{"type":"string","format":"uuid"}},{"name":"activityId","description":"Identifier of the activity record to fetch","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed activity record for the specified activityId","typeName":"ITodoAppTodoActivity"},"authorizationType":null,"authorizationRole":"todoUser","name":"at"},{"specification":"Retrieve a filtered, paginated list of deletion audit entries for a specific Todo. This operation reads from the Prisma table todo_app_todo_deletion_events, which records who deleted the Todo and when, with an optional reason field. The request body (ITodoAppTodoDeletionEvent.IRequest) should support pagination, sorting (e.g., occurred_at), and filters such as date ranges and free-text search on reason. The response returns IPageITodoAppTodoDeletionEvent.ISummary for efficient list rendering.","path":"/todoApp/todoUser/todos/{todoId}/deletionEvents","method":"patch","summary":"List deletion audit entries for a Todo from todo_app_todo_deletion_events","description":"Purpose and overview: Lists deletion audit records tied to a Todo using the todo_app_todo_deletion_events model. Each record includes a link to the deleted Todo (nullable for preservation), the deleting user (nullable), a human-readable reason, and occurred_at timestamps. This endpoint provides transparency for deletion workflows and complements the soft deletion behavior supported by todo_app_todos.deleted_at.\n\nSecurity and authorization: Only the owner (role todoUser) may list deletion events for their Todo. Providers must validate that the Todo identified by todoId belongs to the authenticated user. Unauthorized access attempts must be denied without revealing whether the resource exists.\n\nDB relationships and behavior: Deletion events relate to todo_app_todos and todo_app_users with onDelete behaviors chosen to preserve history (nullable FKs). Providers should constrain results to events for the specified Todo, apply pagination and sorting, and optionally expose keyword filtering on reason leveraging the available trigram index.\n\nValidation and errors: Reject requests with invalid UUIDs or when the specified Todo is not found/owned by the caller. This endpoint is read-only and does not create, change, or remove deletion events. Related operations include DELETE /todoApp/todoUser/todos/{todoId} to perform the deletion and PATCH /todoApp/todoUser/todos/{todoId}/activities to review broader activity history.","parameters":[{"name":"todoId","description":"Identifier of the parent todo","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and pagination parameters for deletion events","typeName":"ITodoAppTodoDeletionEvent.IRequest"},"responseBody":{"description":"Paginated deletion event summaries for the requested Todo","typeName":"IPageITodoAppTodoDeletionEvent.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index"},{"specification":"Retrieve a single deletion audit entry associated with a specific Todo. This operation reads from the Prisma table todo_app_todo_deletion_events and returns the detailed record for the provided deletionEventId, additionally scoped by the parent todo identified by todoId to ensure ownership and referential integrity. It is a read-only endpoint intended for end users to view the context of their own deletion actions on a Todo for auditability. The response includes fields such as id, todo_app_todo_id, todo_app_user_id, reason, occurred_at, created_at, and updated_at, along with any descriptive metadata allowed by the schema. Business logic must verify that the authenticated user owns the parent todo (via todo_app_todos.todo_app_user_id) before returning the record.","authorizationType":null,"description":"This endpoint returns a single deletion audit entry for a Todo. The underlying storage is the Prisma model todo_app_todo_deletion_events, which records point‑in‑time deletion audit entries for todos, including who deleted the todo and when, with an optional human‑readable reason. The model includes columns like id (primary key), todo_app_todo_id (nullable FK to todo_app_todos), todo_app_user_id (nullable FK to todo_app_users as the deleter), reason (optional text), occurred_at (business event time), and created_at/updated_at timestamps. It preserves audit history by allowing the foreign keys to be nullable so that records remain valid even if parent entities are purged. A logical deletion timestamp exists for rare administrative redactions under policy, and such records must be excluded from normal retrievals.\n\nSecurity and permissions must ensure that only the owner of the parent todo can access the associated deletion event. Provider logic should verify that the authenticated identity corresponds to todo_app_todos.todo_app_user_id for the given todoId, and that the deletion event’s todo_app_todo_id matches the provided todoId. If either check fails, the provider should behave as if the resource is not available to avoid leaking information about other users’ data.\n\nThe operation is read‑only; it does not create or alter any audit records. It is related to other read operations such as retrieving a Todo detail or listing all deletion events under a Todo (if provided elsewhere). Expected behaviors include returning a single audit record when both identifiers match and the user is authorized, or an appropriate not‑found/authorization failure outcome when identifiers do not correspond or access is denied. Records with a logical deletion timestamp should be filtered out from standard responses.","summary":"Get a specific Todo deletion audit entry (todo_app_todo_deletion_events) by identifiers","parameters":[{"name":"todoId","description":"Identifier of the parent Todo to which the deletion event belongs","schema":{"type":"string","format":"uuid"}},{"name":"deletionEventId","description":"Identifier of the target deletion event entry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The deletion audit entry associated with the specified Todo and event ID","typeName":"ITodoAppTodoDeletionEvent"},"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/todos/{todoId}/deletionEvents/{deletionEventId}","method":"get"},{"specification":"Search and retrieve a filtered, paginated list of service policies from the Prisma table todo_app_service_policies. This operation supports complex querying via a request body: filtering by namespace, code, name, active state, and effective window (effective_from/effective_to); full‑text search over name/description; and configurable pagination/sorting. It is intended for administrators who manage policies referenced by other entities such as todo_app_service_configurations and todo_app_feature_flags.","authorizationType":null,"description":"This operation returns a paginated collection of service policy summaries from todo_app_service_policies. The model defines administrative policy objects with fields including id (primary key), todo_app_user_id (administrator owner/creator), namespace, code (globally unique identifier), name, optional description, value (raw string), value_type (type hint), active (boolean), effective_from and effective_to (optional business effectivity window), and created_at/updated_at timestamps, with a logical deletion timestamp used to exclude archived records from normal listings. Indexes support lookups across activity state, namespace, temporal windows, and text search on name/description, enabling efficient administrative queries.\n\nSecurity considerations: policies are administrative assets and should only be listed by authorized administrators. Therefore, this endpoint requires systemAdmin privileges. Even within administrative contexts, the response should avoid exposing secrets from other sub‑systems; however, policy values are already modeled as raw strings with value_type hints and are not inherently secret unless business rules dictate otherwise.\n\nValidation and business rules include honoring the globally unique code constraint, filtering based on active state and effectivity windows, and supporting pagination parameters (page, pageSize) within expected ranges. Sorting should allow fields such as created_at, updated_at, code, name, or effective_from in ascending or descending order. Related operations typically include policy detail retrieval (GET /servicePolicies/{policyId}) and policy creation or update endpoints.\n\nError handling should cover invalid filter combinations (e.g., malformed datetime ranges), out‑of‑bounds pagination, and requests from non‑authorized actors. Records with a logical deletion timestamp should be excluded from standard results.","summary":"List/search service policies (todo_app_service_policies) with filters and pagination","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting parameters for service policies","typeName":"ITodoAppServicePolicy.IRequest"},"responseBody":{"description":"Paginated collection of service policy summaries matching the query","typeName":"IPageITodoAppServicePolicy.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/servicePolicies","method":"patch"},{"specification":"Retrieve a single service policy from the Prisma table todo_app_service_policies by its identifier. This operation returns the full policy object, including administrative attributes such as namespace, code, name, description, value, value_type, active flag, and effectivity window metadata. It is used by administrators to view the authoritative definition of a specific policy referenced by other entities like todo_app_service_configurations and todo_app_feature_flags.","authorizationType":null,"description":"This endpoint fetches one policy record from todo_app_service_policies using the provided policyId. The model documents business policies that govern application behavior, rate limits, retention, or other constraints. Key fields include id (primary key), optional todo_app_user_id (administrator ownership), namespace (logical grouping), code (globally unique policy code), name, optional description, value (raw string), value_type (type hint for interpretation), active (boolean), effective_from/effective_to (optional effectivity window), and created_at/updated_at timestamps. A logical deletion timestamp is present to identify archived records that should not appear in normal flows.\n\nSecurity and permissions: Access is intended for administrators, as policies are governance artifacts. The provider should confirm systemAdmin authorization and handle records that are inactive or archived according to administrative visibility rules.\n\nValidation and expected behavior: The operation returns the single policy if it exists and is eligible for display; otherwise, it should respond that it was not found. This endpoint complements other administrative operations such as listing/searching policies and creating or updating policies. When integrating with dependent resources, clients typically resolve policies by code in business logic, while this endpoint provides ID‑based retrieval for precise administration tasks.","summary":"Get a specific service policy (todo_app_service_policies) by ID","parameters":[{"name":"policyId","description":"Identifier of the target service policy","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The complete service policy object for the specified identifier","typeName":"ITodoAppServicePolicy"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/servicePolicies/{policyId}","method":"get"},{"specification":"Create a new service policy in the Prisma table todo_app_service_policies. Administrators define governance policies with a globally unique code, human‑readable name, optional description, and a raw value interpreted using value_type. The creation request must satisfy uniqueness constraints and initialize flags such as active and optional effectivity windows (effective_from/effective_to). On success, the endpoint returns the created policy object.","description":"This operation inserts a new row into todo_app_service_policies to define an administrative policy governing application behavior. The model’s salient fields include id (primary key, generated), optional todo_app_user_id referencing the administrative actor, namespace (logical grouping), code (globally unique policy code), name, optional description, value (raw string), value_type (type hint such as string, int, double, boolean, datetime, uri), active (boolean), optional effectivity timestamps effective_from/effective_to, and created_at/updated_at timestamps maintained by the system. Referential relationships include optional linkage from policies to todo_app_service_configurations and todo_app_feature_flags that may reference this policy.\n\nSecurity: Only administrators may create policies, so this endpoint requires systemAdmin authorization. Provider logic must enforce the unique code constraint and validate that value and value_type are coherent. When effectivity windows are provided, the start and end timestamps should be validated for consistency.\n\nExpected behavior and error handling: On success, return the newly created policy. If the code is not unique or required fields are missing, return a validation failure. If the request attempts to set fields outside the schema (e.g., unsupported value_type), return an input error. Downstream systems that reference policies by code should treat creation as immediately available once confirmed.\n\nRelated operations: listing/searching policies and fetching a policy by ID. Policies may later be updated or archived by separate administrative endpoints according to governance workflows.","summary":"Create a new service policy (todo_app_service_policies)","parameters":[],"requestBody":{"description":"Creation payload for a new service policy, including code, namespace, and value/value_type","typeName":"ITodoAppServicePolicy.ICreate"},"responseBody":{"description":"The newly created service policy record","typeName":"ITodoAppServicePolicy"},"authorizationRoles":["systemAdmin"],"name":"create","path":"/todoApp/systemAdmin/servicePolicies","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Update an existing service policy record in the Prisma table todo_app_service_policies identified by its primary key id. The operation allows administrators to modify business policy attributes such as namespace, code, name, description, value, value_type, active flag, and the effective window (effective_from/effective_to). It enforces the unique constraint on code and ensures timestamps (updated_at) reflect the modification. The path parameter policyId is a UUID that maps to todo_app_service_policies.id.","description":"This endpoint updates a single policy stored in the todo_app_service_policies table, which “governs application behavior, rate limits, retention, and other constraints.” The model includes columns like id (UUID PK), namespace, code (globally unique), name, description, value (raw string), value_type (type hint), active (boolean), effective_from, effective_to, created_at, updated_at, and deleted_at. The request body should carry only the fields intended to be updated according to business validation (e.g., code uniqueness, proper value_type usage). The provider should set updated_at upon successful write.\n\nSecurity and permissions: Only administrative actors should be able to modify policies. This operation requires a systemAdmin role and should verify the requester’s authorization. Because policies can control critical behaviors, providers should also consider creating audit entries via internal mechanisms (e.g., admin action logs) without exposing audit tables through this API.\n\nEntity relationships: Policies may be referenced by todo_app_service_configurations and todo_app_feature_flags through optional FKs. Changing active/effective windows or code must respect the unique [code] constraint and any dependent application logic that resolves policies by code.\n\nValidation and business rules: Enforce the @@unique([code]) constraint, ensure value_type is recognized by the application, and verify that effective_from is earlier than effective_to when both are present. Attempts to update immutable identifiers (id) must be rejected. The endpoint path uses policyId which maps to the id column.\n\nRelated operations: Retrieval and listing of configurations under a policy are available in the serviceConfigurations endpoints. When changing policy activation, downstream readers of configurations or flags may adjust behavior accordingly.\n\nError handling: Return validation errors for uniqueness violations or invalid values; return not-found when policyId does not match any current record (including records marked deleted by deleted_at if your read policy excludes them).","summary":"Update a service policy (todo_app_service_policies) by id","parameters":[{"name":"policyId","description":"Target policy’s UUID (todo_app_service_policies.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the service policy","typeName":"ITodoAppServicePolicy.IUpdate"},"responseBody":{"description":"Updated service policy with complete attributes","typeName":"ITodoAppServicePolicy"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/todoApp/systemAdmin/servicePolicies/{policyId}","method":"put"},{"specification":"Delete a service policy record in the Prisma table todo_app_service_policies identified by its primary key id. The provider should implement deletion semantics consistent with the schema’s deleted_at timestamp, marking the record as deleted (logical deletion) rather than removing it physically, unless business policy requires a permanent removal. The path parameter policyId maps to todo_app_service_policies.id.","description":"This endpoint deletes a policy from the todo_app_service_policies table, which stores “business policies governing application behavior, rate limits, retention, and other constraints.” The table includes a deleted_at timestamp indicating logical deletion capability. Implementers should mark the policy as deleted by setting deleted_at and, if required by policy, also deactivate it, ensuring it is excluded from normal reads. Permanent removal (hard delete) should be considered only if explicitly required by governance policy.\n\nSecurity and permissions: Restricted to systemAdmin. Administrators should ensure no unintended exposure results from removing policies that are currently referenced by todo_app_service_configurations or todo_app_feature_flags. If a hard delete is ever used, be aware the referencing relations are configured with onDelete: Cascade; a logical deletion will not trigger cascades, so application logic must handle visibility.\n\nRelationships and constraints: Policies can be linked from configurations and feature flags. Deleting a policy should be blocked when doing so would violate active operational constraints, or a safety check should warn/require confirmation in provider logic.\n\nError handling: Return not-found if the policy does not exist or is already marked deleted under the service’s read policy. The operation returns no content on success. Audit of administrative deletions is recommended via internal logging systems.","summary":"Delete a service policy (todo_app_service_policies) by id","parameters":[{"name":"policyId","description":"Target policy’s UUID (todo_app_service_policies.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/todoApp/systemAdmin/servicePolicies/{policyId}","method":"delete"},{"specification":"Retrieve a filtered, searchable, and paginated list of service configurations from the Prisma table todo_app_service_configurations that are associated with a specific policy (todo_app_service_policies.id via todo_app_service_policy_id). The operation supports domain filters (namespace, environment, key, active), effective window checks (effective_from/effective_to), and full-text-like search using trigram indexes on key and description. It returns a paginated collection for administrative review.","description":"This endpoint lists configurations in todo_app_service_configurations under a given policy. The model stores namespace, optional environment, key (unique within namespace/environment), value, value_type, is_secret, description, active, effective_from, effective_to, and temporal fields including created_at, updated_at, and deleted_at. The request targets only records where todo_app_service_policy_id equals the provided policyId.\n\nSecurity and permissions: Because configurations may contain sensitive or secret values (is_secret), access is restricted to systemAdmin. Providers should redact values for entries where is_secret is true, depending on business rules, in list views. The response structure can use a summary representation to avoid exposing sensitive value content while still providing key metadata needed for selection.\n\nRelationships and behavior: Each configuration may optionally reference a policy and a creating/updating user. The search experience can leverage defined indexes: trigram indexes on key and description support keyword queries, and composite indexes support common filters (active, namespace, environment). Ensure logical deletions (deleted_at) are respected so that logically deleted records are not included by default.\n\nValidation and request parameters: The request body (IRequest) should support filters like namespace, environment, active status, effective windows intersection with now, and free-text query across key/description. Include pagination (page, pageSize within allowed ranges such as 1–100) and sorting (e.g., by created_at desc by default, or by key asc). Ensure policyId is required and used to scope the query to this policy.\n\nError handling: If the specified policyId does not exist or is not visible, return not-found. If no configurations match, return an empty page. Avoid returning secret values in summaries to reduce exposure risk.","summary":"List/search service configurations (todo_app_service_configurations) for a policy","parameters":[{"name":"policyId","description":"Parent policy UUID (todo_app_service_policies.id) to scope configurations","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search filters, pagination, and sorting options for configurations under the policy","typeName":"ITodoAppServiceConfiguration.IRequest"},"responseBody":{"description":"Paginated list of configuration summaries under the given policy","typeName":"IPageITodoAppServiceConfiguration.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/serviceConfigurations","method":"patch"},{"specification":"Retrieve a single service configuration record from the Prisma table todo_app_service_configurations by id, scoped under a parent service policy identified by todo_app_service_policies.id. The operation returns full configuration details for administrative inspection, using policyId and configurationId path parameters mapped to the corresponding UUID primary keys.","description":"This endpoint returns one configuration from todo_app_service_configurations. The model includes id, optional todo_app_user_id, optional todo_app_service_policy_id, namespace, environment, key, value, value_type, is_secret, description, active, effective_from, effective_to, created_at, updated_at, and deleted_at. The request must ensure that the configuration’s todo_app_service_policy_id equals the provided policyId to enforce correct scoping.\n\nSecurity and permissions: Access is limited to systemAdmin due to potential sensitivity (is_secret). Implementers may optionally redact value for secret entries unless an explicit “reveal secret” workflow is authorized. All reads should exclude logically deleted records (deleted_at not null) per business policy.\n\nRelationships and constraints: The configuration references a policy and optionally a creating/updating user. Uniqueness is enforced across [namespace, key, environment]. The GET returns the complete object so that administrators can verify exact values, types, and activation windows.\n\nError handling: Return not-found if the configuration does not exist, is not associated with the specified policy, or is marked deleted. Ensure correct 404 behavior to avoid revealing records that are outside the given policy scope.","summary":"Get a service configuration (todo_app_service_configurations) by id under a policy","parameters":[{"name":"policyId","description":"Parent policy UUID (todo_app_service_policies.id)","schema":{"type":"string","format":"uuid"}},{"name":"configurationId","description":"Target configuration UUID (todo_app_service_configurations.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed service configuration record","typeName":"ITodoAppServiceConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/serviceConfigurations/{configurationId}","method":"get"},{"specification":"Create a new configuration record associated with a specific service policy. This operation targets the Prisma table todo_app_service_configurations and links the new row to todo_app_service_policies via todo_app_service_policy_id (taken from the path parameter). Administrators use this to manage namespaced keys with optional environment scoping, value typing, activation window, and secrecy flags. It enforces the unique constraint on (namespace, key, environment) and records operational attributes like active, effective_from/effective_to, and descriptions for governance.","description":"Create a configuration entry under the identified service policy. The underlying table todo_app_service_configurations stores administrative settings with fields including namespace, environment (optional), key, value, value_type, is_secret, description, active, effective_from, effective_to, created_at, updated_at, and deleted_at. According to the schema comments, values are raw strings interpreted by value_type (e.g., \"string\", \"int\", \"double\", \"boolean\", \"datetime\", \"uri\"), and may be redacted when is_secret=true. The configuration is optionally tied to a governing policy via todo_app_service_policy_id, which in this endpoint is supplied by the path parameter.\n\nSecurity and permissions: Only administrative actors are expected to create configurations. Business logic should validate that the caller holds sufficient privileges (systemAdmin) and apply redaction for secrets in logs or responses when is_secret=true. The operation must also honor effective_from/effective_to semantics and active flag handling described in the model documentation.\n\nDatabase relationships and constraints: The new row references todo_app_service_policies (foreign key todo_app_service_policy_id) and can reference the actor user via todo_app_user_id depending on implementation. A unique constraint on (namespace, key, environment) prevents duplicates; the application should handle conflicts gracefully and surface clear guidance. GIN trigram indexes on key/description and composite indexes on active/namespace/environment support search and filtering in related read endpoints.\n\nValidation and error handling: Ensure namespace and key are provided and conform to business naming rules. Confirm value_type is a supported hint and that value is compatible with it at validation time when applicable. On uniqueness conflicts, return a descriptive message indicating the existing combination of namespace/key/environment. Sensitive values should never be echoed in logs when is_secret=true. Any date-times for effective_from/effective_to must be valid RFC 3339 timestamps.","summary":"Create a configuration (todo_app_service_configurations) under a service policy","parameters":[{"name":"policyId","description":"Target policy ID to attach the configuration to","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Configuration creation payload scoped to the specified policy","typeName":"ITodoAppServiceConfiguration.ICreate"},"responseBody":{"description":"Created configuration with details and the policy linkage","typeName":"ITodoAppServiceConfiguration"},"name":"create","authorizationRoles":["systemAdmin"],"path":"/todoApp/systemAdmin/servicePolicies/{policyId}/serviceConfigurations","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Update an existing configuration associated with a service policy. Operates on the Prisma table todo_app_service_configurations identified by configurationId within the policy namespace given by policyId. Supports changing administrative attributes such as value, value_type, is_secret, description, active, and effective window while preserving the uniqueness constraint on (namespace, key, environment).","description":"Modify the targeted configuration stored in todo_app_service_configurations. This table holds administrative settings including namespace, optional environment, key, value, value_type, is_secret, description, active, effective_from, effective_to, timestamps, and a deleted_at marker. The operation should enforce that the configuration belongs to the given todo_app_service_policy_id (from policyId) before applying updates.\n\nSecurity considerations: Only authorized administrators should update configurations. Avoid exposing secret values when is_secret=true; redact in logs and, depending on policy, in responses. Maintain updated_at semantics upon successful mutation. Inputs for time window fields (effective_from/effective_to) must be valid RFC 3339 date-times.\n\nRelations and constraints: The configuration is linked to todo_app_service_policies via todo_app_service_policy_id. Uniqueness on (namespace, key, environment) must be respected; if an update changes any of these, verify the combination remains unique. The table provides trigram indexes for key/description and additional composite indexes to facilitate downstream search.\n\nError handling: Return clear messages for uniqueness conflicts or when attempting to update a configuration not found under the specified policy. If the record is marked deleted via deleted_at, treat it as not updatable per governance policy.","summary":"Update a configuration in todo_app_service_configurations for a given policy","parameters":[{"name":"policyId","description":"Policy ID that owns the configuration","schema":{"type":"string","format":"uuid"}},{"name":"configurationId","description":"Configuration ID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Configuration update payload","typeName":"ITodoAppServiceConfiguration.IUpdate"},"responseBody":{"description":"Updated configuration details","typeName":"ITodoAppServiceConfiguration"},"name":"update","authorizationRoles":["systemAdmin"],"path":"/todoApp/systemAdmin/servicePolicies/{policyId}/serviceConfigurations/{configurationId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Mark a configuration as deleted in the todo_app_service_configurations table. The target record is identified by configurationId and must belong to the policy indicated by policyId. Instead of removing the row, this operation should populate deleted_at so it is excluded from normal queries while preserving history, consistent with the schema’s lifecycle design.","description":"Remove the configuration from active use by marking it as deleted in todo_app_service_configurations. The model includes a deleted_at timestamp to exclude records from normal operations while retaining them for governance and recovery workflows. This endpoint identifies the configuration by configurationId within the policy scope policyId and, upon authorization, updates the record to set deleted_at (and potentially active=false) according to business rules.\n\nSecurity and permissions: Restricted to administrative actors. Ensure the configuration belongs to the provided policyId and that the caller has sufficient privileges. Avoid emitting sensitive value fields (when is_secret=true) in audit logs or responses.\n\nBehavior and error handling: If the configuration is already marked deleted (deleted_at not null), treat the operation as idempotent and return a confirmation without further state change. If the record does not exist under the specified policy, respond with a not-found outcome without leaking cross-tenant details. This operation permanently removes the configuration from active evaluations and standard listings by virtue of the deleted_at marker.","summary":"Remove a configuration (todo_app_service_configurations) from active use by marking deleted_at","parameters":[{"name":"policyId","description":"Policy ID that owns the configuration","schema":{"type":"string","format":"uuid"}},{"name":"configurationId","description":"Configuration ID to remove from active use","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"name":"erase","authorizationRoles":["systemAdmin"],"path":"/todoApp/systemAdmin/servicePolicies/{policyId}/serviceConfigurations/{configurationId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a filtered, paginated list of feature flags under a specific policy from the todo_app_feature_flags table. Supports advanced search over fields such as namespace, environment, code, name, description, and active status, as well as sorting and pagination, all scoped by the policyId path parameter.","description":"Search and list feature flags belonging to the specified policy (todo_app_feature_flags with foreign key todo_app_service_policy_id). The schema defines attributes including namespace, optional environment, code, name, description, active, rollout_percentage, target_audience, start_at, end_at, created_at, updated_at, and a deleted_at marker. Indexes on (active, namespace, environment), (rollout_percentage, namespace), and trigram indexes on name/description support efficient querying.\n\nSecurity: Access is restricted to administrative users responsible for flag governance. Business logic must ensure the caller has system-level admin permissions and apply policy scoping using policyId to avoid cross-policy leakage.\n\nQuery model and behavior: The request body may specify pagination, search keywords (e.g., on code, name, description), filters (active state, environment, namespace), rollout ranges, and time window constraints (start_at/end_at). Sorting options can include created_at, updated_at, code, name, rollout_percentage, or activity windows. Results should return a summary shape optimized for listing, excluding unnecessary internal details, and omit records with deleted_at set by default.\n\nError handling: Validate that policyId maps to an existing todo_app_service_policies row. For invalid filters or ranges, return descriptive messages indicating the rule (e.g., invalid percentage range or date-time format).","summary":"Search and paginate feature flags (todo_app_feature_flags) under a policy","parameters":[{"name":"policyId","description":"Policy ID that scopes the feature flags","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and pagination parameters for feature flags","typeName":"ITodoAppFeatureFlag.IRequest"},"responseBody":{"description":"Paginated list of feature flag summaries matching criteria","typeName":"IPageITodoAppFeatureFlag.ISummary"},"name":"index","authorizationRoles":["systemAdmin"],"path":"/todoApp/systemAdmin/servicePolicies/{policyId}/featureFlags","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a single Feature Flag record associated with a specific Service Policy. This operation targets the todo_app_feature_flags table and validates that the requested feature flag (featureFlagId) belongs to the specified policy (policyId) via the todo_app_feature_flags.todo_app_service_policy_id foreign key referencing todo_app_service_policies.id. It returns the detailed Feature Flag entity (ITodoAppFeatureFlag), enabling administrators to read state such as namespace, code, environment, active, rollout_percentage, and the evaluation window fields (start_at, end_at).","description":"This endpoint fetches one feature flag from the todo_app_feature_flags table using its primary key and ensures policy scoping by verifying that todo_app_feature_flags.todo_app_service_policy_id matches the path policyId. The underlying Prisma schema documents feature-flag concepts such as namespace-scoped code uniqueness across (namespace, code, environment), optional governing policy via todo_app_service_policy_id, and control fields including active, rollout_percentage, and optional targeting window (start_at, end_at). These schema descriptions clarify that flags are administrator-managed and support staged rollouts and environment scoping.\n\nSecurity and permissions: Access is limited to administrative users responsible for feature management. The requestor must hold system-level privileges (systemAdmin role) because flags control runtime behavior. Non-administrative roles must not read or infer internal rollout configurations. Authorization should be performed prior to data access, and response data must omit or mask any sensitive values if policy dictates.\n\nDatabase relationships: The feature flag references todo_app_service_policies via todo_app_feature_flags.todo_app_service_policy_id (nullable in schema), and administrators often manage flags in association with policies. This operation uses the policyId path parameter to scope the retrieval. If the feature flag does not belong to the given policy, the provider must respond as not found. Read queries typically leverage indexes such as [active, namespace, environment] and uniqueness on [namespace, code, environment].\n\nValidation and behavior: The provider verifies UUID formats for both policyId and featureFlagId, checks that the referenced policy exists (todo_app_service_policies.id), and then ensures the feature flag exists and matches that policy. If the record has a non-null deleted_at, it is considered deleted and should not be returned. The response returns all relevant fields of ITodoAppFeatureFlag for administrative inspection.\n\nRelated operations: Use POST /servicePolicies/{policyId}/featureFlags to create a new flag under the policy, PUT to modify an existing flag, and DELETE to remove (soft-delete) a flag. Typical admin workflows navigate between these operations during flag lifecycle management. Error handling should distinguish between format/validation errors, missing resources, authorization failures, and conflict states.","summary":"Get a feature flag (todo_app_feature_flags) scoped to a service policy (todo_app_service_policies)","parameters":[{"name":"policyId","description":"Identifier of the parent service policy","schema":{"type":"string","format":"uuid"}},{"name":"featureFlagId","description":"Identifier of the target feature flag","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed feature flag information","typeName":"ITodoAppFeatureFlag"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/featureFlags/{featureFlagId}","method":"get"},{"specification":"Create a new Feature Flag under a specific Service Policy. This operation inserts into the todo_app_feature_flags table and sets the foreign key todo_app_feature_flags.todo_app_service_policy_id from the path policyId (referencing todo_app_service_policies.id). It enforces administrator-driven creation of flags with attributes such as namespace, code, environment, active, rollout_percentage, target_audience, and optional evaluation window (start_at, end_at). It returns the created entity.","description":"This endpoint creates a feature flag record in todo_app_feature_flags, associating it with the policy identified by policyId via the todo_app_service_policy_id foreign key to todo_app_service_policies.id. According to the Prisma schema comments, feature flags are designed for conditional enablement and staged rollouts, support environment and namespace scoping, percentage-based rollouts, and optional targeting notes. Administrators manage these records; they may optionally be linked to a governing policy and include timestamps (created_at, updated_at) and a soft-deletion column (deleted_at).\n\nSecurity and permissions: Only administrative users (systemAdmin) may create feature flags, as these directly impact runtime behavior. The server must ignore or override any body-supplied governing policy field and instead bind the new flag to the policyId from the path to avoid cross-policy mismatches. Sensitive operational practices—like redacting internals in logs when is_secret applies on other entities—should be considered, though flags themselves do not include secret value types.\n\nValidation and business rules: Enforce uniqueness on [namespace, code, environment] as defined by the Prisma schema (@@unique). Validate that rollout_percentage is an integer suitable for 0–100 progressive rollout semantics and that optional window fields (start_at, end_at) are coherent (end_at after start_at when both present). Ensure the referenced policy (todo_app_service_policies) exists and is not deleted (deleted_at is null). The system sets created_at/updated_at automatically, and deleted_at remains null on creation. On success, return the created ITodoAppFeatureFlag record.\n\nRelated operations: Administrators typically retrieve the created flag using GET /servicePolicies/{policyId}/featureFlags/{featureFlagId}, update it with PUT, and remove it with DELETE when necessary. Conflicts due to uniqueness violations or invalid policy references should be reported with clear messages.","summary":"Create a feature flag in todo_app_feature_flags under a given todo_app_service_policies record","parameters":[{"name":"policyId","description":"Identifier of the parent service policy for association","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Feature flag creation payload. The server binds it to policyId.","typeName":"ITodoAppFeatureFlag.ICreate"},"responseBody":{"description":"Newly created feature flag entity","typeName":"ITodoAppFeatureFlag"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/featureFlags","method":"post"},{"specification":"Update an existing Feature Flag within a specific Service Policy. This operation modifies a record in the todo_app_feature_flags table, identified by featureFlagId, and confirms it belongs to the policy identified by policyId via the todo_app_feature_flags.todo_app_service_policy_id → todo_app_service_policies.id relationship. It returns the updated entity.","description":"This endpoint updates administrative fields of a feature flag stored in todo_app_feature_flags. Per Prisma schema, feature flags include fields such as namespace, code, environment, name, description, active, rollout_percentage, target_audience, and optional start_at/end_at window controls. The update must respect the uniqueness constraint on [namespace, code, environment] and the policy association defined by todo_app_service_policy_id.\n\nSecurity and permissions: Only administrative actors (systemAdmin) are authorized to modify flags. The provider must verify that the targeted flag belongs to the policy specified by policyId; otherwise, treat the request as not found. Records with non-null deleted_at should not be updatable (consider them removed from normal flows).\n\nValidation and behavior: Apply field validations coherent with business semantics (e.g., rollout_percentage should remain within 0–100; start_at precedes end_at if both set). The system should set updated_at to the current time upon successful modification. Attempts to change the governing policy association should be rejected; this endpoint maintains the link to policyId from the path. On success, return the updated ITodoAppFeatureFlag entity for confirmation.\n\nRelated operations: Administrators can fetch the current state via GET, create new flags with POST, and remove flags with DELETE. The implementation should communicate conflicts clearly, especially uniqueness violations and invalid state transitions.","summary":"Update a feature flag (todo_app_feature_flags) scoped by a service policy (todo_app_service_policies)","parameters":[{"name":"policyId","description":"Identifier of the parent service policy","schema":{"type":"string","format":"uuid"}},{"name":"featureFlagId","description":"Identifier of the feature flag to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to modify on the feature flag","typeName":"ITodoAppFeatureFlag.IUpdate"},"responseBody":{"description":"Updated feature flag entity","typeName":"ITodoAppFeatureFlag"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/featureFlags/{featureFlagId}","method":"put"},{"specification":"Remove (soft-delete) a Feature Flag that belongs to a specific Service Policy. This operation targets the todo_app_feature_flags table. It sets the deleted_at timestamp to mark the record as deleted while preserving history. The feature flag is identified by featureFlagId and must belong to the policy identified by policyId via the todo_app_feature_flags.todo_app_service_policy_id reference to todo_app_service_policies.id.","description":"This endpoint performs a non-destructive removal of a feature flag by setting deleted_at in the todo_app_feature_flags table, as defined by the Prisma schema. Records with deleted_at not null are excluded from normal flows; this preserves administrative history and avoids accidental loss. The operation must verify ownership under the policy scope using the todo_app_service_policy_id foreign key to todo_app_service_policies.\n\nSecurity and permissions: Only administrative users (systemAdmin) may remove feature flags. The provider should verify that the target feature flag exists, is associated with the specified policyId, and is not already removed (deleted_at is null). If the record is already removed, treat the operation as idempotent and respond successfully without additional changes.\n\nValidation and behavior: Set deleted_at to the current time and update updated_at. Do not physically delete the row to preserve auditability. Subsequent reads through the GET operation should not return removed records. If needed, additional administrative audit logging can be recorded in separate audit tables (e.g., todo_app_admin_actions) per governance policy—these are system-generated and not exposed via user-facing write APIs.\n\nRelated operations: Administrators may create new flags via POST after removal, or update existing ones with PUT prior to removal. Retrieval via GET will exclude removed records. Error handling should distinguish between authorization, not-found (including cross-policy mismatch), and transient conflicts.","summary":"Soft-remove a feature flag in todo_app_feature_flags under a service policy (todo_app_service_policies)","parameters":[{"name":"policyId","description":"Identifier of the parent service policy","schema":{"type":"string","format":"uuid"}},{"name":"featureFlagId","description":"Identifier of the feature flag to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/todoApp/systemAdmin/servicePolicies/{policyId}/featureFlags/{featureFlagId}","method":"delete"},{"specification":"List/search service configuration records from the Prisma table todo_app_service_configurations. This operation lets administrators retrieve a paginated collection of configuration keys scoped by namespace and optional environment, with filters for active state, effective window, value_type, and free-text search over key/description. Results are optimized for list views and should respect secrecy by redacting sensitive values where is_secret=true in summary responses. This entity relates to todo_app_users via todo_app_user_id (administrator actor) and to todo_app_service_policies via todo_app_service_policy_id. Records that have a non-null deleted_at are excluded from normal listings.","description":"Retrieve a filtered, sorted, and paginated collection of configuration items defined in the todo_app_service_configurations table. Columns include: id (UUID), namespace (string), environment (nullable string), key (string), value (string), value_type (string), is_secret (boolean), description (nullable string), active (boolean), effective_from/effective_to (nullable DateTime), created_at/updated_at (DateTime), optional references to a creating/updating user (todo_app_user_id) and a governing policy (todo_app_service_policy_id), and a deleted_at timestamp that denotes records removed from normal flows.\n\nAccess is restricted to administrative users responsible for operations and governance. Only users with the systemAdmin role are allowed to search configuration keys. Implementations should ensure that sensitive values (is_secret=true) are not exposed in list responses; returning metadata and redacted value representations is recommended for the summary collection.\n\nThe operation is tightly coupled with underlying relations: user references todo_app_users and policy references todo_app_service_policies. Consumers commonly filter by namespace, environment, active, value_type, and effective window intersections (e.g., records that are currently effective based on effective_from/effective_to). Free-text search over key and description is supported, aligning with GIN trigram indexes declared in the schema for key and description. Records where deleted_at is not null must be excluded from standard results.\n\nValidation and business logic include enforcing the unique constraint on (namespace, key, environment) at creation time (handled by the creation API). This search endpoint supports pagination (page/size), sorting (e.g., created_at desc by default), and keyword search. Related endpoints: GET /serviceConfigurations/{configurationId} for details, POST /serviceConfigurations for creation, and PUT /serviceConfigurations/{configurationId} for updates.","summary":"Search and paginate service configurations (todo_app_service_configurations)","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting options for configuration listing.","typeName":"ITodoAppServiceConfiguration.IRequest"},"responseBody":{"description":"Paginated collection of configuration summaries matching the search criteria.","typeName":"IPageITodoAppServiceConfiguration.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/serviceConfigurations","method":"patch"},{"specification":"Retrieve a single configuration record from the Prisma table todo_app_service_configurations by its id. Provides full detail for administrative review, including links to the owning user (todo_app_user_id) and optional governing policy (todo_app_service_policy_id). Records with a non-null deleted_at are considered removed from normal flows and should not be returned unless explicitly handled by administrative recovery tooling.","description":"Fetch a specific configuration by identifier from todo_app_service_configurations. The table stores: id (UUID), namespace, optional environment, key, value, value_type, is_secret flag, optional description, active flag, optional effective_from/effective_to, and timestamps (created_at, updated_at). It also references an optional administrator user via todo_app_user_id and an optional policy via todo_app_service_policy_id. A non-null deleted_at indicates the record is removed from normal flows and must not be included in standard reads.\n\nSecurity considerations limit access to system administrators. Implementations should handle value exposure carefully when is_secret=true. While list endpoints typically redact sensitive values, detailed reads for systemAdmin users may return the full value subject to organizational policy and auditing requirements.\n\nIf the identifier does not correspond to an available record (including when the record is removed from normal flows), the operation should respond with an appropriate not-found outcome without leaking existence information to unauthorized roles. Related endpoints: PATCH /serviceConfigurations for searching, POST /serviceConfigurations for creating new keys, and PUT /serviceConfigurations/{configurationId} for updates.","summary":"Get one service configuration by id (todo_app_service_configurations)","parameters":[{"name":"configurationId","description":"Target configuration's UUID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed configuration record.","typeName":"ITodoAppServiceConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/serviceConfigurations/{configurationId}","method":"get"},{"specification":"Create a new configuration record in the Prisma table todo_app_service_configurations. Administrators provide namespace, optional environment, key, value, value_type, is_secret, optional description, active state, and optional effective window (effective_from/effective_to). The unique constraint on (namespace, key, environment) is enforced. Optionally associate the record with a governing policy (todo_app_service_policy_id) and capture the acting administrator via todo_app_user_id if supplied by business logic.","description":"Insert a configuration item into todo_app_service_configurations. Required and optional columns include: namespace (string), environment (nullable string), key (string), value (string), value_type (string), is_secret (boolean), description (nullable string), active (boolean), effective_from/effective_to (nullable DateTime), and system-managed created_at/updated_at timestamps. The table enforces uniqueness across (namespace, key, environment) and supports referential links to todo_app_users (todo_app_user_id) and todo_app_service_policies (todo_app_service_policy_id).\n\nOnly users with the systemAdmin role may create configuration items. Implementations must validate input lengths and formats as appropriate for the domain and ensure the value is interpreted according to value_type. When is_secret=true, providers should ensure the value is protected in logs and list summaries. Records with non-null deleted_at are excluded from normal flows; this endpoint creates active records and does not interact with removed records.\n\nOn success, the operation returns the full configuration entity. Conflicts due to duplicate (namespace, key, environment) combinations should be surfaced as a clear validation error. Related endpoints: PATCH /serviceConfigurations for listing, GET /serviceConfigurations/{configurationId} for details, PUT /serviceConfigurations/{configurationId} for updates.","summary":"Create a new service configuration (todo_app_service_configurations)","parameters":[],"requestBody":{"description":"Creation payload for a configuration item.","typeName":"ITodoAppServiceConfiguration.ICreate"},"responseBody":{"description":"Created configuration record.","typeName":"ITodoAppServiceConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/todoApp/systemAdmin/serviceConfigurations","method":"post"},{"specification":"Update an existing configuration record in the Prisma table todo_app_service_configurations identified by id. Administrators can modify fields such as value, value_type, is_secret, description, active, and the effective window while preserving the uniqueness constraint on (namespace, key, environment). Links to todo_app_users (administrator actor) and todo_app_service_policies (governing policy) may be adjusted per policy. Records flagged with a non-null deleted_at are not part of normal update flows.","description":"Modify a configuration item stored in todo_app_service_configurations. Updatable fields typically include: value (string), value_type (string), is_secret (boolean), description (nullable string), active (boolean), and effective_from/effective_to (nullable DateTime). Depending on governance policy, administrators may also adjust namespace, environment, or key, but care must be taken to maintain the unique composition across (namespace, key, environment). System-managed columns created_at and updated_at are maintained automatically; records with non-null deleted_at are excluded from standard update flows.\n\nOnly systemAdmin users can perform updates. When is_secret=true, service providers should avoid exposing values in logs and audit channels and should consider redaction in UI list contexts. If todo_app_service_policy_id is supplied, it must reference an existing policy in todo_app_service_policies. Attempts to update to a duplicate (namespace, key, environment) combination should produce a validation conflict.\n\nRelated endpoints include: PATCH /serviceConfigurations for searching, GET /serviceConfigurations/{configurationId} for retrieving details, and POST /serviceConfigurations for creating new records. Error handling should include not-found outcomes for unknown ids and conflict responses for uniqueness violations.","summary":"Update an existing service configuration (todo_app_service_configurations)","parameters":[{"name":"configurationId","description":"Target configuration's UUID","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the target configuration item.","typeName":"ITodoAppServiceConfiguration.IUpdate"},"responseBody":{"description":"Updated configuration record.","typeName":"ITodoAppServiceConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/todoApp/systemAdmin/serviceConfigurations/{configurationId}","method":"put"},{"specification":"Delete (archive) a single service configuration record identified by its UUID from the todo_app_service_configurations table. This endpoint is intended for administrative governance to remove obsolete or misconfigured keys from active evaluation. The underlying Prisma model (todo_app_service_configurations) includes fields such as namespace, environment, key, value, value_type, is_secret, active, effective_from/effective_to, and lifecycle timestamps. Given the model’s deleted_at column, this operation performs a logical deletion by marking the record as deleted rather than physically removing it. Relations to todo_app_users (administrative actor) and todo_app_service_policies (optional governing policy) are maintained for auditability.","description":"This operation targets the Systematic configuration store represented by the Prisma model todo_app_service_configurations. According to the schema comments, it manages key/value settings grouped by namespace and optionally by environment, with an explicit value_type to inform runtime interpretation. Records carry flags such as is_secret to indicate sensitive contents and active to control evaluation, as well as effective_from and effective_to to bound their applicability. The model enforces a uniqueness constraint across (namespace, key, environment) and provides relations to a governing policy (todo_app_service_policies) and an administrative user (todo_app_users).\n\nSecurity and permissions: Configuration lifecycle is an administrative responsibility. Access is therefore restricted to system administrators. Since the table includes sensitive configuration values (some marked as is_secret), responses, logs, and business logic must ensure secrets are not exposed inadvertently during deletion workflows.\n\nBehavior and lifecycle: Because todo_app_service_configurations has a deleted_at column, deletion is implemented by marking the record as deleted (setting deleted_at). This ensures the record is excluded from normal flows while preserving historical context and references. Consider how uniqueness rules and any downstream caches behave after deletion. If your system requires re-introducing a configuration with the same (namespace, key, environment), ensure that either the existing record is updated/reused or your business logic supports handling archived entries appropriately.\n\nValidation and errors: The endpoint expects a valid UUID for configurationId. If the record does not exist or is already deleted, providers should respond idempotently—acknowledging the state without exposing sensitive details. Related APIs include listing and detail retrieval endpoints for configurations (not covered here) and policy management endpoints if configurations are governed by todo_app_service_policies.","summary":"Delete a service configuration by ID in todo_app_service_configurations (logical deletion via deleted_at).","parameters":[{"name":"configurationId","description":"Unique identifier of the service configuration to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/todoApp/systemAdmin/serviceConfigurations/{configurationId}","method":"delete"},{"specification":"Search and paginate feature flags from the todo_app_feature_flags table with advanced filtering, free-text search, and sorting. This operation is designed for administrative management of flags across namespaces and environments. It supports filters on fields such as namespace, environment, code, name, active, rollout_percentage, policy linkage (todo_app_service_policy_id), and time windows (start_at, end_at, created_at, updated_at). It returns a paginated collection suitable for admin consoles. The model uses a composite uniqueness on (namespace, code, environment).","description":"This endpoint lists feature flags stored in the Prisma model todo_app_feature_flags. Per the schema comments, flags enable conditional behavior and staged rollouts. Each flag has namespace, optional environment, code, name, description, an active switch, rollout_percentage (0–100), optional targeting notes, and optional time bounds (start_at/end_at). Administrative actors may associate flags with a governing policy (todo_app_service_policies), and relations to todo_app_users capture ownership. The table includes created_at, updated_at, and deleted_at lifecycle columns and GIN indices for name/description to support search.\n\nSecurity considerations: Only system administrators should query full administrative listings, as flags can reveal internal rollout strategies. Although this is a read operation, the data may carry operational sensitivity (e.g., unreleased features). Providers should filter out logically deleted rows (where deleted_at is set) in normal listings unless an explicit include-archived option is requested by policy.\n\nFiltering, pagination, and sorting: Business logic should support filters by namespace, environment, code, name, active status, rollout_percentage ranges, association to a specific policy, effective windows (start_at/end_at), and general date ranges (created_at/updated_at). Free-text search should leverage the indexed fields (name, description). Sorting typically includes created_at desc by default, with options to sort by namespace/code/name, active, rollout_percentage, or time windows. Pagination parameters (page number/size) must respect admin-configured limits.\n\nRelated operations: Use GET /featureFlags/{featureFlagId} to fetch a single flag record and POST /featureFlags to create a new one. Update and archival endpoints would complement this search to form a full administrative workflow.","summary":"Search and list feature flags (todo_app_feature_flags) with filtering, sorting, and pagination.","parameters":[],"requestBody":{"description":"Search criteria, filters, sorting, and pagination controls for feature flags","typeName":"ITodoAppFeatureFlag.IRequest"},"responseBody":{"description":"Paginated list of feature flag summaries matching search criteria","typeName":"IPageITodoAppFeatureFlag.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/featureFlags","method":"patch"},{"specification":"Retrieve a single feature flag by UUID from the todo_app_feature_flags table. The record includes administrative attributes such as namespace, environment, code, name, description, active, rollout_percentage, target_audience, time windows (start_at, end_at), and lifecycle timestamps. Optional relations to todo_app_service_policies and todo_app_users provide policy governance context and administrative ownership.","description":"This operation returns the complete details for one feature flag managed in the Prisma model todo_app_feature_flags. As described in the schema, each flag supports environment and namespace scoping, percentage rollouts, and optional targeting metadata. Administrators can link a flag to a governing policy (todo_app_service_policies), and the creator/owner relation to todo_app_users captures administrative attribution. The model also defines created_at, updated_at, and deleted_at timestamps, with search-friendly indexes on name and description.\n\nSecurity: Feature flag definitions often reveal product roadmap and operational strategy. Access should be limited to system administrators. When a flag has been archived (deleted_at set), typical detail retrieval either hides it or returns it with a clear archived indicator, depending on policy.\n\nValidation and behavior: The featureFlagId must be a valid UUID. If the identifier does not correspond to an existing row or the flag has been archived, the provider should return an appropriate error or a not-found response consistent with administrative console expectations. This endpoint is typically used after a search or from direct navigation in an admin UI.\n\nRelated operations: Use PATCH /featureFlags for search and listing and POST /featureFlags for creation. Update and archival endpoints would complete the administrative lifecycle for flags.","summary":"Get a single feature flag by ID from todo_app_feature_flags.","parameters":[{"name":"featureFlagId","description":"Unique identifier of the feature flag","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full feature flag entity with all administrative fields","typeName":"ITodoAppFeatureFlag"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/featureFlags/{featureFlagId}","method":"get"},{"specification":"Create a new feature flag in the todo_app_feature_flags table. The request includes namespace, optional environment, code, name, description, active, rollout_percentage (0–100), optional target_audience, optional start_at/end_at, and optional links to a governing policy and administrative owner. The table enforces uniqueness on (namespace, code, environment) and stores lifecycle timestamps. On success, the newly created flag is returned.","description":"This operation inserts a new feature flag as defined by the Prisma model todo_app_feature_flags. The schema comments emphasize environment and namespace scoping, percentage rollouts, and optional targeting notes. Fields include namespace, environment, code, name, description, active, rollout_percentage, target_audience, start_at, end_at, and lifecycle timestamps (created_at, updated_at, deleted_at). Optional relations to todo_app_service_policies and todo_app_users capture governance and administrative ownership. A composite uniqueness constraint requires that (namespace, code, environment) be unique.\n\nSecurity and permissions: Feature flag creation is an administrative action. Only system administrators should be allowed. The business logic must validate required fields, ensure rollout_percentage is within 0–100, and confirm uniqueness before insertion. Sensitive internal notes should remain in description/targeting fields only if appropriate.\n\nValidation and errors: Providers should perform input validation (e.g., non-empty namespace/code/name, rollout_percentage bounds, start/end window consistency). If a duplicate (namespace, code, environment) exists—even if archived logic is applied—surface a clear conflict error. On success, return the full feature flag entity.\n\nRelated operations: Use PATCH /featureFlags for listing/searching and GET /featureFlags/{featureFlagId} to view details of the newly created flag. Update and archival endpoints (not included here) typically complete the flag lifecycle.","summary":"Create a new feature flag (todo_app_feature_flags).","parameters":[],"requestBody":{"description":"Feature flag creation payload with validation per model constraints","typeName":"ITodoAppFeatureFlag.ICreate"},"responseBody":{"description":"Newly created feature flag","typeName":"ITodoAppFeatureFlag"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/todoApp/systemAdmin/featureFlags","method":"post"},{"specification":"Update a feature flag owned by the administration domain. Operates on the Prisma table todo_app_feature_flags. The endpoint modifies properties such as namespace, environment, code, name, description, active, rollout_percentage (0–100), target_audience, start_at, end_at, and optional todo_app_service_policy_id linkage. It must honor the uniqueness constraint on (namespace, code, environment) and maintain system-managed timestamps (updated_at). The record is identified by its primary key id (UUID).","authorizationType":null,"description":"Update an existing feature flag record in the administration configuration domain. The underlying Prisma model todo_app_feature_flags includes fields for namespace, environment, code, name, description, active, rollout_percentage, target_audience, start_at, end_at, created_at, updated_at, and deleted_at. It also carries optional foreign keys to todo_app_service_policies (todo_app_service_policy_id) and todo_app_users (todo_app_user_id) noting the administrative owner/creator. As documented in the schema comments, this model supports environment and namespace scoping, percentage rollouts, and optional targeting notes.\n\nSecurity considerations: Only users with the systemAdmin role should be allowed to modify feature flag definitions. The operation must check that the target flag is not logically removed (deleted_at is null) before applying changes. The system should record administrative actions in audit facilities like todo_app_admin_actions and todo_app_audit_logs for governance, attributing the actor and reason when appropriate.\n\nThis operation updates attributes of the identified flag while respecting database constraints. The unique key across (namespace, code, environment) must not be violated. The rollout_percentage must remain within the 0–100 integer range as indicated by the model. When linking to a policy via todo_app_service_policy_id, the referenced todo_app_service_policies record must exist and be appropriate for the intended governance. The updated_at column should reflect the modification time; created_at is immutable by clients.\n\nRelated operations may include listing or retrieving feature flags for administration, or deleting a flag to remove it from evaluation. On errors, respond with appropriate messages for not found (unknown or logically removed id), conflict on unique constraints, or validation failures for type/range rules.","summary":"Update a feature flag (todo_app_feature_flags) by ID","parameters":[{"name":"featureFlagId","description":"Feature flag's UUID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the feature flag","typeName":"ITodoAppFeatureFlag.IUpdate"},"responseBody":{"description":"The updated feature flag","typeName":"ITodoAppFeatureFlag"},"authorizationRole":"systemAdmin","name":"update","path":"/todoApp/systemAdmin/featureFlags/{featureFlagId}","method":"put"},{"specification":"Remove a feature flag from active evaluation by marking the feature flag record in todo_app_feature_flags as deleted based on its primary key id (UUID). The model supports lifecycle management via a deleted_at timestamp; this endpoint performs a logical removal so the flag no longer participates in rollouts or evaluation. Timestamp columns should be maintained by the system.","authorizationType":null,"description":"Delete a feature flag in the configuration domain. The Prisma model todo_app_feature_flags includes a deleted_at column used to exclude records from normal operations. When this endpoint is invoked by an authorized systemAdmin, the implementation should transition the record to a deleted state so that it is no longer returned by standard administrative listings or used by runtime evaluators. The model also references optional relations to todo_app_service_policies (policy) and todo_app_users (user); removing a flag does not require modifying those parent entities.\n\nSecurity and governance: Only systemAdmin actors may remove feature flags. Implementations should capture an administrative action in audit trails (e.g., todo_app_admin_actions or todo_app_audit_logs) with the actor identity and optional human-readable reason.\n\nBehavior and errors: If the id does not correspond to an existing, non-deleted record, respond with a not-found outcome. If the flag is already marked deleted, the operation may be treated as idempotent. No response body is returned on success.","summary":"Delete a feature flag (todo_app_feature_flags) by ID","parameters":[{"name":"featureFlagId","description":"Feature flag's UUID to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","name":"erase","path":"/todoApp/systemAdmin/featureFlags/{featureFlagId}","method":"delete"},{"specification":"Search and paginate user accounts from the todo_app_users table with advanced filtering, sorting, and keyword search. Supports filters on email (substring), status, email_verified, created_at and last_login_at ranges, and ordering options. Returns a paginated list suitable for administration views. Intended for administrative use; does not expose private todo content.","authorizationType":null,"description":"Retrieve a filtered, paginated list of user accounts. The underlying Prisma model todo_app_users stores core authentication/account fields: id (UUID), email (unique), password_hash, status (e.g., pending_verification, active, suspended, deactivated), email_verified, verified_at, last_login_at, created_at, updated_at, and deleted_at. As described in the schema comments, this table is central to access control and privacy boundaries and is the parent for related profile and preference records.\n\nSecurity: Access to system-wide user listings must be restricted to the systemAdmin role. This endpoint is for governance and operational views, not for exposing private todo content. Summary response models MUST explicitly exclude sensitive fields such as password_hash and any token-related values. Business logic should ensure that logically removed accounts (deleted_at set) are excluded unless explicitly requested by an administrative filter.\n\nFiltering and sorting: Implement flexible criteria aligned to the schema—email substring search using trigram indexes, exact or set-based status filtering, booleans like email_verified, and time-range filters for created_at and last_login_at. The operation should support pagination (page, pageSize) with defaults aligned to business policy (commonly 20) and sorting by created_at (default desc) or other permissible columns. Validation should enforce reasonable page size bounds and ignore unsupported fields.\n\nRelated operations include retrieving a single user by ID for detailed administrative review or updating account status via separate admin workflows. On errors, return clear messages for invalid filters, out-of-range pagination, or missing permissions.","summary":"Search and paginate users (todo_app_users) for administration","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for users","typeName":"ITodoAppUser.IRequest"},"responseBody":{"description":"Paginated user summaries matching the provided criteria","typeName":"IPageITodoAppUser.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users","method":"patch"},{"specification":"Retrieve a single user account from the todo_app_users table by its primary key id (UUID). Returns detailed account information appropriate for administrative inspection, including status and verification fields. Intended for system administrators.","authorizationType":null,"description":"Get detailed information about a user account identified by UUID. The Prisma table todo_app_users contains authentication-centric fields: email, password_hash (never exposed in responses), status, email_verified, verified_at, last_login_at, created_at, updated_at, and deleted_at. This endpoint should return a representation that excludes sensitive secrets while capturing business-relevant fields like status and verification timestamps.\n\nSecurity: Only systemAdmin actors should be permitted to retrieve arbitrary user records. Implementations must ensure that ownership checks are applied for non-admin contexts (not applicable to this administrative endpoint). If the target record has been logically removed (deleted_at set), return a not-found outcome to avoid exposing retired identities.\n\nRelations and behavior: While the main entity is todo_app_users, implementations may optionally enrich with adjacent information such as user profile or preferences in read models; however, the canonical source remains the users table. On errors, provide not-found for unknown ids, and avoid disclosing whether a deleted account existed historically.","summary":"Get a user (todo_app_users) by ID","parameters":[{"name":"userId","description":"User's UUID to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed user information for administration","typeName":"ITodoAppUser"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/users/{userId}","method":"get"},{"specification":"Retrieve a single user profile for a given userId. Operates on the Prisma table todo_app_user_profiles (1:1 with todo_app_users via todo_app_user_profiles.todo_app_user_id). Returns the current profile fields (full_name, nickname, avatar_uri) associated to the specified user, excluding records where deleted_at is not null. Enforces that only the authenticated owner can access their own profile. The operation uses path parameter userId (UUID) to locate the profile by FK to todo_app_users.id and unique constraint on todo_app_user_profiles.todo_app_user_id.","authorizationType":null,"authorizationRole":"todoUser","description":"This operation fetches the profile attached to a specific account in the todoApp. The underlying Prisma model is todo_app_user_profiles, which stores optional display attributes: full_name, nickname, and an avatar_uri that points to an image resource as a URI string. The relation is one-to-one with todo_app_users through the todo_app_user_profiles.todo_app_user_id foreign key. The profile record also contains created_at and updated_at timestamps for auditability and a deleted_at timestamp used to hide records from normal flows.\n\nSecurity and permissions: Only authenticated end users should retrieve their own profile. Although the route encodes a {userId} parameter, the provider function must verify that the authenticated principal’s id matches userId to prevent cross-user access. Administrators do not routinely access private profile content in MVP; therefore, authorization is restricted to todoUser.\n\nRelationships and lookup behavior: The request uses userId (UUID) that corresponds to todo_app_users.id. The service locates the profile by the unique constraint on todo_app_user_profiles.todo_app_user_id. If no profile exists for the user, the service returns a not-found condition consistent with business error handling policies.\n\nValidation and business logic: No request body is required. The handler should ignore profile records where deleted_at is set. If multiple records exist due to data inconsistency (should not happen because of @@unique on todo_app_user_id), the service must treat it as an error.\n\nRelated operations: Creation and update of the profile are handled by POST and PUT on the same resource path. Error handling follows the authentication and privacy guidance: deny access when the path userId does not match the authenticated user, and do not reveal existence of other users’ data.","summary":"Get the user profile (todo_app_user_profiles) for the specified userId.","parameters":[{"name":"userId","description":"Unique identifier of the user whose profile is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The profile record attached to the specified user.","typeName":"ITodoAppUserProfile"},"name":"at","path":"/todoApp/todoUser/users/{userId}/profile","method":"get"},{"specification":"Create a user profile for the given userId in the Prisma table todo_app_user_profiles (one-to-one with todo_app_users via todo_app_user_profiles.todo_app_user_id). This operation accepts profile attributes (full_name, nickname, avatar_uri) and persists a new profile row when one does not already exist for the user. The unique constraint on todo_app_user_profiles.todo_app_user_id enforces the 1:1 relationship. Ownership is validated by matching the authenticated principal’s id to the path userId.","authorizationType":null,"authorizationRole":"todoUser","description":"Purpose: Insert a new profile associated to the user identified by {userId}. The todo_app_user_profiles model contains presentation-oriented fields: full_name, nickname, and avatar_uri (URI string up to 80,000 characters), along with created_at/updated_at timestamps and a deleted_at timestamp for lifecycle governance. A one-to-one link is enforced through a unique constraint on todo_app_user_id.\n\nSecurity: Only the authenticated owner (todoUser) can create their profile. The handler must verify that the authenticated user’s id equals the {userId} path parameter. If the user already has a profile row (as enforced by @@unique on todo_app_user_id), the service should return a conflict error and advise using the update endpoint instead.\n\nValidation and business rules: Input values should be trimmed and validated according to presentation rules. avatar_uri must be a valid URI; services should treat it as a reference string (no file upload in this API). Records with deleted_at should not be recreated without explicit recovery policy—attempting to recreate a profile where a logically removed row still exists should be handled according to business rules (typically conflict).\n\nRelated operations: GET returns the existing profile, PUT updates an existing profile, and this POST creates the first profile row for the user. Errors include unauthorized when path does not match the authenticated principal and conflict when a profile already exists.","summary":"Create a user profile (todo_app_user_profiles) for the specified userId.","parameters":[{"name":"userId","description":"Unique identifier of the user for whom the profile will be created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Profile creation payload for the specified userId.","typeName":"ITodoAppUserProfile.ICreate"},"responseBody":{"description":"The newly created user profile.","typeName":"ITodoAppUserProfile"},"name":"create","path":"/todoApp/todoUser/users/{userId}/profile","method":"post"},{"specification":"Update the existing user profile for the given userId in the Prisma table todo_app_user_profiles (one-to-one with todo_app_users via todo_app_user_profiles.todo_app_user_id). Allows modifying full_name, nickname, and avatar_uri fields while maintaining audit timestamps. Enforces ownership by requiring the authenticated user’s id to match the path parameter userId.","authorizationType":null,"authorizationRole":"todoUser","description":"Purpose and overview: Modify profile attributes stored in todo_app_user_profiles for the specified account. The model holds optional presentation data (full_name, nickname, avatar_uri) and timestamps (created_at, updated_at). The deleted_at timestamp denotes a record that should be excluded from normal flows. This endpoint updates only the existing profile row linked by the unique todo_app_user_id constraint.\n\nSecurity and authorization: Only the owner (todoUser) can update their profile. The provider must ensure that the authenticated principal’s id equals {userId}. Administrative access to private profile content is not part of routine operations in MVP.\n\nValidation and business logic: The request body contains the fields to update. The service should validate avatar_uri as a URI string and preserve constraints on field lengths. If no profile exists for the user, return not-found and direct the client to create it first. If the profile record is marked with a non-null deleted_at, standard handlers should treat it as unavailable for update unless a separate recovery workflow exists.\n\nRelated operations: GET retrieves the profile; POST creates it if missing. Error handling aligns with privacy requirements: reject cross-user updates without revealing resource existence; return validation messages for malformed inputs.","summary":"Update the user profile (todo_app_user_profiles) for the specified userId.","parameters":[{"name":"userId","description":"Unique identifier of the user whose profile will be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Profile update payload for the specified userId.","typeName":"ITodoAppUserProfile.IUpdate"},"responseBody":{"description":"The updated user profile.","typeName":"ITodoAppUserProfile"},"name":"update","path":"/todoApp/todoUser/users/{userId}/profile","method":"put"},{"specification":"Retrieve the preference settings for a given userId. Operates on the Prisma table todo_app_user_preferences (1:1 with todo_app_users via todo_app_user_preferences.todo_app_user_id). Returns timezone (IANA identifier), locale (BCP 47 tag), and page_size. Enforces ownership such that only the authenticated owner can access their own preferences. Excludes rows where deleted_at is set.","authorizationType":null,"authorizationRole":"todoUser","description":"This operation fetches per-user preference settings from todo_app_user_preferences. Fields include timezone (e.g., \"Asia/Seoul\"), locale (e.g., \"en-US\"), and page_size (integer, typical allowed range 1–100 per business rules). The model is one-to-one with todo_app_users through todo_app_user_preferences.todo_app_user_id and maintains created_at/updated_at timestamps with an additional deleted_at timestamp for lifecycle control.\n\nSecurity: Only authenticated end users (todoUser) can access their own preferences. The controller/provider must verify that the authenticated user’s id matches the {userId} path parameter. Administrative access to private preference values is not part of routine operations for MVP.\n\nBehavior and error handling: If no preferences record exists for the user, the service may either return not-found or elect to lazily initialize defaults at a higher layer; this API describes retrieval only and does not perform creation. Records where deleted_at is non-null should be ignored for normal reads. Validation is not required for GET, but downstream consumers should interpret timezone and locale per their standards.\n\nRelated operations: Separate endpoints (not defined here) would handle creation or update of preferences. This GET operation solely returns the existing preferences for the specified userId.","summary":"Get user preferences (todo_app_user_preferences) for the specified userId.","parameters":[{"name":"userId","description":"Unique identifier of the user whose preferences are requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The preference settings for the specified user.","typeName":"ITodoAppUserPreference"},"name":"at","path":"/todoApp/todoUser/users/{userId}/preferences","method":"get"},{"specification":"Create the initial preference record for a specific user in the todoApp system, operating on the Prisma table todo_app_user_preferences. This endpoint allows an authenticated end user (role: todoUser) to establish their own preference settings, including timezone, locale, and default page_size, which the application uses to interpret due dates, display language, and pagination defaults. It enforces the 1:1 relationship to todo_app_users and must fail creation if a preference record already exists for the user.","description":"Create a user preference record bound to the owner identified by userId. According to the Prisma schema for todo_app_user_preferences, this table stores per-user settings: timezone (IANA identifier such as \"Asia/Seoul\"), locale (BCP 47 tag such as \"en-US\"), and page_size (integer with business rule range 1–100). The model also contains created_at, updated_at, and an optional deleted_at. The relationship to todo_app_users is one-to-one through todo_app_user_id with a unique constraint, ensuring each account has at most one preference record.\n\nSecurity considerations: Only the authenticated owner should be able to create their own preferences. The authorization role is limited to todoUser, with ownership validation performed in application logic to ensure the path parameter userId matches the authenticated principal. Administrative accounts do not routinely create or modify end-user preferences.\n\nRelationship to underlying entities: The preference record references todo_app_users via a required FK. The table’s columns (timezone, locale, page_size) directly influence business behavior, such as timezone-aware interpretation for due_at in todo_app_todos and default page sizes for list endpoints. Creation should populate created_at/updated_at, leaving deleted_at null. Attempts to create a second record must be rejected due to the unique constraint on todo_app_user_id.\n\nValidation and business logic: Enforce that page_size respects business limits (typically 1–100). Validate timezone strings against known IANA identifiers and locale strings against BCP 47 format. If validation fails, return a clear error. If a record already exists for the user, return a conflict response.\n\nRelated operations: Use PUT /users/{userId}/preferences to update an existing record. There is no separate delete endpoint in this scope; preference lifecycle can be handled via updates or administrative processes if needed.\n\nError handling: Return validation errors for bad timezone/locale formats or out-of-range page_size. Return conflict if a record for the given user already exists. Ensure ownership checks deny cross-user attempts without revealing existence of other users’ data.","summary":"Create a user preference record (todo_app_user_preferences) for the specified user.","parameters":[{"name":"userId","description":"Owner user’s ID whose preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Initial preference settings for the user, including timezone, locale, and page size.","typeName":"ITodoAppUserPreference.ICreate"},"responseBody":{"description":"The created user preference record with full details.","typeName":"ITodoAppUserPreference"},"authorizationType":null,"authorizationRole":"todoUser","name":"create","path":"/todoApp/todoUser/users/{userId}/preferences","method":"post"},{"specification":"Update the existing preference record for a specific user in the todoApp system, operating on the Prisma table todo_app_user_preferences. This endpoint allows an authenticated end user (role: todoUser) to modify their own preferences (timezone, locale, page_size). It requires that the preference record already exists and enforces the 1:1 relationship with todo_app_users.","description":"Update the user’s existing preference record indicated by userId. Per the Prisma schema for todo_app_user_preferences, this table holds: timezone (IANA identifier), locale (BCP 47 tag), and page_size (integer). System-managed timestamps include created_at and updated_at; deleted_at is optional. The foreign key todo_app_user_id enforces ownership and uniqueness across users.\n\nSecurity and permissions: Only the authenticated owner should update their own preferences. The authorization role is todoUser, with ownership verified in application logic by comparing the authenticated principal to the path parameter userId. Administrative actors do not routinely edit private user preferences.\n\nEntity relationships: The preference record is 1:1 with todo_app_users (unique on todo_app_user_id). Preference values impact interpretation of due_at in todo_app_todos (timezone) and display language (locale), as well as default pagination size for list endpoints (page_size).\n\nValidation rules and business logic: Validate timezone against IANA identifiers, locale against BCP 47, and page_size within allowed range (1–100). Update should set updated_at to the current time. If the preference record does not exist for the user, return a not found error, avoiding disclosure beyond the current user context.\n\nRelated operations: Use POST /users/{userId}/preferences to create a preference record if none exists. Reading preferences can be exposed via a corresponding GET endpoint if required by the client design.\n\nError handling: Provide field-specific validation messages on incorrect formats or ranges. Return not found when no preference record exists for the user. Deny access if an authenticated user attempts to modify another user’s preferences.","summary":"Update an existing user preference record (todo_app_user_preferences) for the specified user.","parameters":[{"name":"userId","description":"Owner user’s ID whose preferences are being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full updates to timezone, locale, and page size.","typeName":"ITodoAppUserPreference.IUpdate"},"responseBody":{"description":"The updated user preference record with full details.","typeName":"ITodoAppUserPreference"},"authorizationType":null,"authorizationRole":"todoUser","name":"update","path":"/todoApp/todoUser/users/{userId}/preferences","method":"put"},{"specification":"Search and paginate the guestVisitor role assignment history for a given user, operating on the Prisma table todo_app_guestvisitors. This read-only endpoint supports administrators reviewing grant/revoke history with filters, sorting, and pagination. It must not modify data and is intended for governance visibility.","description":"Retrieve a filtered, paginated list of guestVisitor role assignments for the specified userId from the todo_app_guestvisitors table. According to the Prisma schema description, this model stores multiple historical records per user with granted_at, optional revoked_at, and system-managed created_at/updated_at/deleted_at. The user reference is via todo_app_user_id, enabling queries ordered by granted_at and filtered for current membership where revoked_at IS NULL.\n\nSecurity considerations: Role assignment history is governance data and not user-editable. Access should be restricted to system administrators responsible for audits and operations. Accordingly, the authorization role is systemAdmin. The endpoint is strictly read-only and should implement appropriate rate limits for list operations.\n\nRelationships and fields: Each record references todo_app_users through todo_app_user_id. The key fields include granted_at (when the guestVisitor role was granted) and revoked_at (null when still active). No write operations are provided here, aligning with the business rule that role assignments are managed by governance workflows.\n\nQuery behavior and validation: The request body (ITodoAppGuestVisitor.IRequest) may include pagination parameters (page, pageSize within 1–100), optional filters (e.g., activeOnly—records where revoked_at is null), time range filters on granted_at or revoked_at, and sorting options (e.g., granted_at desc). The implementation should validate page bounds and permitted sort fields, and default sorting by granted_at descending if unspecified.\n\nRelated operations: Use GET /users/{userId}/guestVisitors/{guestVisitorId} to retrieve a single assignment record by its identifier. No creation, update, or deletion operations are exposed in alignment with the schema’s audit/history intent.\n\nError handling: Return validation errors for unsupported sort fields or out-of-range pagination. If the specified userId does not map to a known user, handle the response generically to avoid disclosing details to unauthorized parties, with explicit checks tied to the administrator role.","summary":"Search and list guestVisitor assignments (todo_app_guestvisitors) for a user with pagination and filters.","parameters":[{"name":"userId","description":"Target user’s ID whose guestVisitor assignments will be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and pagination parameters for guestVisitor history.","typeName":"ITodoAppGuestVisitor.IRequest"},"responseBody":{"description":"Paginated results containing guestVisitor assignment summaries for the user.","typeName":"IPageITodoAppGuestVisitor.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/guestVisitors","method":"patch"},{"specification":"Retrieve a single guestVisitor role assignment record for a given user, operating on the Prisma table todo_app_guestvisitors. This read-only endpoint supports administrative inspection of a specific grant/revoke record identified by guestVisitorId and scoped to a particular userId.","description":"Return details of one guestVisitor role assignment from todo_app_guestvisitors using the composite path (userId, guestVisitorId). The Prisma model records role assignment events with fields such as granted_at (grant time), optional revoked_at (revoke time), and system-managed timestamps (created_at, updated_at, deleted_at). The record references the owning user via todo_app_user_id. Although the path scopes by userId, the implementation should still validate that the fetched record’s todo_app_user_id matches the path userId to prevent cross-tenant leakage.\n\nSecurity and permissions: Access is restricted to administrators responsible for governance reviews. Authorization is set to systemAdmin. No modifications are permitted through this endpoint, and it should not reveal data for records that do not belong to the specified user.\n\nEntity relationships and validation: Ensure the record’s todo_app_user_id equals the path userId before returning it. The response includes all relevant fields appropriate for administrative review, such as granted_at and revoked_at, but excludes any secret or non-existent attributes as per schema. The model supports historical queries where revoked_at may be null for currently active assignments.\n\nRelated operations: For broader history and filtering, use PATCH /users/{userId}/guestVisitors. There are no write endpoints for this model because role assignments are managed via governance processes.\n\nError handling: Return not found if guestVisitorId does not exist or does not belong to the specified userId. Handle authorization failures explicitly for non-admin callers.","summary":"Get details of a guestVisitor assignment (todo_app_guestvisitors) for a specific user.","parameters":[{"name":"userId","description":"Owner user’s ID for scoping the role assignment.","schema":{"type":"string","format":"uuid"}},{"name":"guestVisitorId","description":"Identifier of the guestVisitor assignment record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The guestVisitor assignment record with full details.","typeName":"ITodoAppGuestVisitor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/users/{userId}/guestVisitors/{guestVisitorId}","method":"get"},{"specification":"List role assignment history entries for the todoUser role associated with a specific account. Operates on the Prisma table todo_app_todousers (Actors namespace). Each record represents a grant/revoke event for when a todo_app_users account holds the todoUser role. The endpoint supports administrative audit use cases with pagination, filtering (e.g., currently-active assignments where revoked_at is null, date ranges on granted_at), and sorting. Relationships: todo_app_todousers.todo_app_user_id → todo_app_users.id. Indexes exist on (todo_app_user_id, granted_at) and (granted_at, created_at) to support efficient queries.","authorizationType":null,"description":"Retrieve a filtered, paginated list of role assignment history records for the todoUser role for the specified user. According to the Prisma schema comment for todo_app_todousers, this table stores multiple grant/revoke events over time to preserve audit history, is not user-editable, and is maintained by governance workflows. Each row contains id (UUID), todo_app_user_id, granted_at, optional revoked_at when the assignment ended, created_at, updated_at, and a logical deletion timestamp in deleted_at intended for retention workflows.\n\nSecurity and permissions: Access to role assignment history is restricted to administrative governance. Only system administrators should call this endpoint. The provider must also enforce cross-user isolation by verifying that the path parameter userId corresponds to the targeted account and that the caller has the systemAdmin permission. Non-administrative users must not be able to enumerate another user’s role history.\n\nDatabase relationships and behavior: Results are constrained to rows where todo_app_user_id = {userId}. The design supports multiple historical rows; queries typically order by granted_at (descending) to show most recent role changes first. Filtering may include whether the assignment is currently active (revoked_at is null), as well as granted_at and revoked_at date ranges based on audit needs. Implementations commonly exclude logically removed rows where deleted_at is set. The table is indexed on (todo_app_user_id, granted_at) and (granted_at, created_at) to optimize these access patterns.\n\nValidation and business rules: This endpoint is read-only. It must not attempt to create, update, or remove role assignments as these records are system-managed audit history. The request body allows search and pagination parameters (page, pageSize within a 1–100 range), sorting fields such as granted_at or revoked_at, and filters for active-only or specific time windows.\n\nRelated operations and dependencies: Providers may first validate that the parent user exists via a separate user retrieval operation before executing the list. For detail retrieval of a single assignment, use GET /users/{userId}/todoUsers/{todoUserId}. Error handling should return an authorization error for callers lacking administrative privileges, and a not-found or empty result when the parent user has no matching records.","summary":"Search and paginate todoUser role assignment history for a user (todo_app_todousers).","parameters":[{"name":"userId","description":"Owner user’s ID whose todoUser role history is being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for listing todoUser role assignments.","typeName":"ITodoAppTodoUser.IRequest"},"responseBody":{"description":"Paginated list of todoUser role assignment summary records.","typeName":"IPageITodoAppTodoUser.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/todoUsers","method":"patch"},{"specification":"Retrieve a single todoUser role assignment record by its identifier for a specific account. Operates on Prisma table todo_app_todousers (Actors namespace). Ensures the returned record’s todo_app_user_id matches the path’s {userId}.","authorizationType":null,"description":"This operation returns one historical role assignment entry from todo_app_todousers for the specified user. The schema describes todo_app_todousers as a role assignment history table supporting multiple grant/revoke cycles for auditability, with fields including id (UUID), todo_app_user_id (FK to todo_app_users.id), granted_at, optional revoked_at, created_at, updated_at, and a logical deletion timestamp deleted_at used for retention workflows.\n\nSecurity considerations: Only system administrators may access detailed role assignment history. The provider must check that the caller has administrative permissions and that the requested record belongs to the user identified by {userId}. If the record’s todo_app_user_id does not match the path, return not-found without revealing cross-user details.\n\nEntity relationship: The record links to todo_app_users via todo_app_user_id. It is read-only and not user-editable, consistent with the schema comment that governance workflows manage these assignments. Implementations typically exclude logically removed rows where deleted_at is set.\n\nError handling: Return authorization errors for insufficient permissions, not-found when the record does not exist or is not associated with the specified user, and input validation errors for malformed UUIDs. For listing and searching multiple entries instead, use PATCH /users/{userId}/todoUsers.","summary":"Get one todoUser role assignment record for a user (todo_app_todousers).","parameters":[{"name":"userId","description":"Owner user’s ID whose todoUser assignment record is queried.","schema":{"type":"string","format":"uuid"}},{"name":"todoUserId","description":"Identifier of the todoUser role assignment record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed todoUser role assignment record.","typeName":"ITodoAppTodoUser"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/users/{userId}/todoUsers/{todoUserId}","method":"get"},{"specification":"List role assignment history entries for the systemAdmin role associated with a specific account. Operates on the Prisma table todo_app_systemadmins (Actors namespace). Each record represents a grant/revoke event for when a todo_app_users account holds the systemAdmin role. Supports pagination, filtering (e.g., active where revoked_at is null), and sorting for administrative audits. Relationship: todo_app_systemadmins.todo_app_user_id → todo_app_users.id. Indexed on (todo_app_user_id, granted_at) and (granted_at, created_at).","authorizationType":null,"description":"Retrieve a filtered, paginated list of systemAdmin role assignment history records for the specified user. The Prisma schema for todo_app_systemadmins describes a history of grant/revoke events for governance audits, not user-editable and managed by administrators. Fields include id (UUID), todo_app_user_id (FK to todo_app_users.id), granted_at, optional revoked_at for end of assignment, created_at, updated_at, and a logical deletion timestamp in deleted_at used for retention workflows.\n\nSecurity and permissions: Access is restricted to administrative users. The provider must verify that the caller has systemAdmin privileges and enforce isolation by constraining results to todo_app_user_id = {userId}. Non-administrative users must not be allowed to enumerate another user’s administrative role history.\n\nDatabase behavior and filters: Queries commonly order by granted_at descending. Filters may target current active assignments (revoked_at is null), or limit by granted_at/revoked_at date ranges to support audit scope. Implementations typically exclude logically removed rows where deleted_at is set. The schema’s indexes on (todo_app_user_id, granted_at) and (granted_at, created_at) facilitate these access patterns.\n\nValidation and business logic: The endpoint is read-only and must not mutate role assignments. The request body supports pagination (page, pageSize), sorting (e.g., by granted_at), and filters like active-only or bounded time windows.\n\nRelated operations: Use GET /users/{userId}/systemAdmins/{systemAdminId} to retrieve a single assignment record. Providers may pre-validate the parent user exists via a user retrieval endpoint. Handle authorization errors for insufficient privileges and return empty results when no matching records exist.","summary":"Search and paginate systemAdmin role assignment history for a user (todo_app_systemadmins).","parameters":[{"name":"userId","description":"Owner user’s ID whose systemAdmin role history is being listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for listing systemAdmin role assignments.","typeName":"ITodoAppSystemAdmin.IRequest"},"responseBody":{"description":"Paginated list of systemAdmin role assignment summary records.","typeName":"IPageITodoAppSystemAdmin.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/systemAdmins","method":"patch"},{"specification":"Retrieve a single systemAdmin role assignment record by its identifier for a specific account. Operates on Prisma table todo_app_systemadmins (Actors namespace). Verifies the record belongs to the specified user via todo_app_user_id matching the {userId} path parameter.","authorizationType":null,"description":"Return a single historical systemAdmin role assignment entry from todo_app_systemadmins for the specified user. Per the schema, this table stores grant/revoke events over time for governance audits, is not user-editable, and is managed by administrators. Fields include id (UUID), todo_app_user_id (FK to todo_app_users.id), granted_at, optional revoked_at, created_at, updated_at, and a logical deletion timestamp deleted_at managed for retention.\n\nSecurity: Only administrative callers may access this detail view. The provider must ensure the caller has systemAdmin privileges and that the requested record’s todo_app_user_id equals {userId}. If the record does not belong to the specified user or does not exist, respond with not-found semantics without leaking cross-user details.\n\nBehavior and errors: This is a read-only operation. Implementations generally exclude logically removed rows where deleted_at is set. Validate UUID formats for both path parameters. For collection retrieval, use PATCH /users/{userId}/systemAdmins.\n\nThis endpoint is intended for administrative audits and governance workflows that require precise visibility into when systemAdmin rights were granted or revoked for a given account.","summary":"Get one systemAdmin role assignment record for a user (todo_app_systemadmins).","parameters":[{"name":"userId","description":"Owner user’s ID whose systemAdmin assignment record is queried.","schema":{"type":"string","format":"uuid"}},{"name":"systemAdminId","description":"Identifier of the systemAdmin role assignment record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed systemAdmin role assignment record.","typeName":"ITodoAppSystemAdmin"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/users/{userId}/systemAdmins/{systemAdminId}","method":"get"},{"specification":"Search and retrieve a paginated list of personal data export jobs for the authenticated user. Operates on the Prisma table todo_app_data_exports (Privacy namespace). Supports advanced filtering by status (requested, processing, completed, failed, expired), creation and completion time windows, link expiry, and export format. Provides sorting (created_at desc by default) and pagination controls. Only returns rows where todo_app_data_exports.todo_app_user_id equals the caller’s user ID.","authorizationType":null,"description":"This operation returns a filtered and paginated list of personal data export jobs for the signed-in user from the todo_app_data_exports table. The table stores export workflow metadata including status, export_format, download_uri, file_size_bytes, checksum, status_message, completed_at, expires_at, request_ip, request_user_agent, created_at, updated_at, and a logical deletion timestamp used for retention workflows. The owner is linked through todo_app_user_id referencing todo_app_users.id. Results must be restricted to the caller’s own records.\n\nSecurity and permissions: access is restricted to users authenticated as the owner (role: todoUser). The provider must filter by todo_app_data_exports.todo_app_user_id = auth.userId. Administrators may audit exports across users via separate governance endpoints not covered here; this endpoint is strictly user-scoped.\n\nFiltering and search: clients can filter by status, export_format, date ranges on created_at, completed_at, and expires_at, and perform free-text search over status_message when supported. Sorting supports created_at, completed_at, and expires_at fields with created_at descending as the default. Pagination follows the user’s preferences (e.g., page_size from todo_app_user_preferences) or explicit request values.\n\nValidation and behavior: only records with non-null download_uri should be considered ready for download; clients should honor expires_at to avoid presenting stale links. The status field reflects the job lifecycle (e.g., requested, processing, completed, failed, expired) as described in the Prisma comments. Records marked for lifecycle retention via the deleted timestamp should be excluded from normal listings by implementation policy.\n\nRelated operations: use GET /todoApp/todoUser/dataExports/{dataExportId} for details about a specific export job, including its download_uri and timestamps. Creating export jobs is typically initiated by a separate creation endpoint or workflow; this route is for listing and searching existing jobs.","summary":"List/search personal data export jobs (todo_app_data_exports) for the authenticated user","parameters":[],"requestBody":{"description":"Search, filter, sort, and paginate parameters for listing data export jobs","typeName":"ITodoAppDataExport.IRequest"},"responseBody":{"description":"Paginated list of data export job summaries matching the criteria","typeName":"IPageITodoAppDataExport.ISummary"},"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/dataExports","method":"patch"},{"specification":"Retrieve details of a single personal data export job by its identifier for the authenticated user. Operates on the Prisma table todo_app_data_exports and returns all relevant fields such as status, export_format, download_uri, completed_at, expires_at, file_size_bytes, checksum, status_message, and timestamps. The result must belong to the caller (todo_app_user_id matches the authenticated user).","authorizationType":null,"description":"This operation fetches a single data export job from todo_app_data_exports by its primary key id. The model captures the export lifecycle through status and timestamps (created_at, updated_at, completed_at, expires_at) and provides download_uri and file_size_bytes when available. Ownership is enforced via todo_app_user_id referencing todo_app_users.id; implementations must ensure the requested record belongs to the authenticated user.\n\nSecurity: only authenticated users in the todoUser role can access this endpoint and only for their own records. Attempting to access another user’s export must result in a generic denial without revealing existence. Administrators should use separate governance endpoints for cross-user audits.\n\nBehavior and validations: if the export is not completed or the expires_at has passed, clients should avoid presenting an invalid download_uri. When status is failed, status_message may include human-readable context. The presence of a logical deletion timestamp indicates records hidden by retention policies and should not be served by this endpoint. The response includes all relevant fields necessary for the user to verify export readiness and audit their request.\n\nRelated operations: to explore multiple exports with filters and pagination, use PATCH /todoApp/todoUser/dataExports. Export job creation is handled elsewhere in the privacy workflow.","summary":"Get a specific data export job (todo_app_data_exports) by ID for the authenticated user","parameters":[{"name":"dataExportId","description":"Identifier of the data export job (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested data export job","typeName":"ITodoAppDataExport"},"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/dataExports/{dataExportId}","method":"get"},{"specification":"Search and retrieve a paginated list of account deletion workflow records for the authenticated user. Operates on the Prisma table todo_app_account_deletion_requests (Privacy namespace). Supports filtering by status (pending_confirmation, scheduled, canceled, completed), date windows (confirmed_at, scheduled_purge_at, processed_at, canceled_at, created_at), and free-text over reason. Provides sorting and pagination with created_at descending by default. Only returns rows where todo_app_account_deletion_requests.todo_app_user_id equals the caller’s user ID.","authorizationType":null,"description":"This operation lists account deletion request records for the signed-in user from the todo_app_account_deletion_requests table. The model includes fields for status, reason, confirmed_at, scheduled_purge_at, processed_at, canceled_at, request_ip, request_user_agent, created_at, updated_at, and a logical deletion timestamp used for retention. Ownership is enforced through todo_app_user_id referencing todo_app_users.id.\n\nSecurity and permissions: only authenticated users in the todoUser role may view their own deletion requests. The provider must filter by todo_app_account_deletion_requests.todo_app_user_id = auth.userId. Administrative oversight of deletion workflows across users is handled via separate governance endpoints and is not in scope here.\n\nFiltering, sorting, pagination: clients may filter by status to track where a request is in its lifecycle (pending_confirmation, scheduled, canceled, completed). Time-based filters on created_at, confirmed_at, scheduled_purge_at, processed_at, and canceled_at support history inspection and monitoring. Sorting supports created_at and scheduled_purge_at fields, with created_at descending as default. Pagination respects user preferences or explicit request parameters.\n\nBehavior and validations: once a request is scheduled, the scheduled_purge_at indicates when purge processing begins according to policy; processed_at captures completion. Records flagged for lifecycle retention via the deleted timestamp should be hidden from normal listings. This list endpoint does not modify state; cancellation or creation of requests is performed by separate endpoints.\n\nRelated operations: use GET /todoApp/todoUser/accountDeletionRequests/{accountDeletionRequestId} to retrieve details about a specific deletion request. Creation, confirmation, cancellation, and scheduling occur through dedicated endpoints not covered here.","summary":"List/search account deletion requests (todo_app_account_deletion_requests) for the authenticated user","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for account deletion requests","typeName":"ITodoAppAccountDeletionRequest.IRequest"},"responseBody":{"description":"Paginated list of account deletion request summaries","typeName":"IPageITodoAppAccountDeletionRequest.ISummary"},"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/accountDeletionRequests","method":"patch"},{"specification":"Retrieve details of a single account deletion request by its identifier for the authenticated user. Operates on the Prisma table todo_app_account_deletion_requests. Returns status, reason, confirmation/scheduling/completion timestamps, client context fields, and audit-relevant metadata. Ensures the record belongs to the caller by matching todo_app_user_id to the authenticated user.","authorizationType":null,"description":"This operation fetches a specific account deletion request from todo_app_account_deletion_requests by primary key id. The entity tracks request lifecycle through status and timestamps including confirmed_at, scheduled_purge_at, processed_at, and canceled_at, and stores request_ip and request_user_agent for traceability. The record’s ownership is enforced via todo_app_user_id referencing todo_app_users.id, and implementations must prevent cross-user access.\n\nSecurity: available to authenticated users (todoUser role) for their own records only. Requests for another user’s identifier should be denied without revealing whether a record exists. Administrative reviews across multiple users are handled by separate governance operations and are excluded here.\n\nBehavior: status communicates the current stage of the workflow (e.g., pending_confirmation, scheduled, canceled, completed). The presence of a logical deletion timestamp indicates records intended for retention workflows and such entries should not be returned by this endpoint. Clients may use scheduled_purge_at to communicate expected purge timing and processed_at to indicate completion.\n\nRelated operations: to browse multiple requests with filters or to track history, use PATCH /todoApp/todoUser/accountDeletionRequests. Lifecycle transitions (create/confirm/cancel) are handled elsewhere.","summary":"Get a specific account deletion request (todo_app_account_deletion_requests) by ID for the authenticated user","parameters":[{"name":"accountDeletionRequestId","description":"Identifier of the account deletion request (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested account deletion workflow record","typeName":"ITodoAppAccountDeletionRequest"},"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/accountDeletionRequests/{accountDeletionRequestId}","method":"get"},{"specification":"Search and retrieve a paginated collection of privacy consent records belonging to the authenticated user. This operation is associated with the Prisma table todo_app_privacy_consents. It supports advanced filtering (e.g., by purpose_code, granted status, granted_at/revoked_at/expires_at ranges), free-text search on purpose_name, and sorting. The request uses ITodoAppPrivacyConsent.IRequest to pass pagination, sorting, and filter criteria. The response returns a paginated page container IPageITodoAppPrivacyConsent.ISummary optimized for list views, including summary fields from the underlying table.","path":"/todoApp/todoUser/privacyConsents","method":"patch","summary":"List and search privacy consents (todo_app_privacy_consents) with pagination and filters","description":"Retrieve a filtered, sorted, and paginated list of privacy consent records for the current user from the todo_app_privacy_consents table. The table stores user consent history by purpose with fields including purpose_code, purpose_name, granted (boolean), granted_at, revoked_at, expires_at, policy_version, source, ip, and user_agent, plus standard created_at/updated_at and an optional deleted_at for retention workflows. Use this endpoint to audit current and historical consent states without exposing private todo content.\n\nSecurity and permissions: access is restricted to authenticated end users acting on their own records (role \"todoUser\"). The implementation must apply ownership filtering on todo_app_privacy_consents.todo_app_user_id to ensure cross-user isolation. Administrators should not use this endpoint to view private consent details; separate admin auditing, if required by policy, should operate on aggregated or operational data without exposing private content.\n\nRelationship to database entities: each result row corresponds to a record in todo_app_privacy_consents. The list is append-mostly over time as consents are granted and revoked by creating new rows. Consumers typically care about the most recent effective grant for each purpose, but this endpoint exposes the full history enabling clients to compute present status or show timelines.\n\nValidation and business logic: the request body (ITodoAppPrivacyConsent.IRequest) may include filters for purpose_code, granted (true/false), date ranges on granted_at/revoked_at/expires_at, free-text search over purpose_name, pagination (page, pageSize with business defaults such as 20 and allowed range 1–100), and sorting fields (e.g., granted_at desc by default). Empty or whitespace-only search keywords should be ignored. Implementers should ensure rate limiting per fairness policies and return only the caller’s own records.\n\nRelated operations: use GET /privacyConsents/{privacyConsentId} to retrieve a single consent record by its identifier when the client needs complete details. This collection search is intended for list pages, timelines, and settings views where multiple consents are displayed.\n\nError handling: return validation errors for unsupported sort keys, out-of-range page sizes, or malformed date filters; deny access if the user is not authenticated. Records with deleted_at not null are typically excluded from normal results unless the request explicitly asks for archival data via business policy.","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for privacy consent listing","typeName":"ITodoAppPrivacyConsent.IRequest"},"responseBody":{"description":"Paginated list of privacy consent summaries for the authenticated user","typeName":"IPageITodoAppPrivacyConsent.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index"},{"specification":"Fetch a single privacy consent record by its identifier from the Prisma table todo_app_privacy_consents. Returns the complete consent entity using ITodoAppPrivacyConsent. Enforces ownership by verifying the record’s todo_app_user_id matches the authenticated user.","path":"/todoApp/todoUser/privacyConsents/{privacyConsentId}","method":"get","summary":"Get a single privacy consent (todo_app_privacy_consents) by ID","description":"This operation retrieves one privacy consent record from todo_app_privacy_consents by its primary key. The table models consent history per user and purpose with fields such as purpose_code, purpose_name, granted, granted_at, revoked_at, expires_at, policy_version, source, ip, and user_agent. It also includes created_at, updated_at, and an optional deleted_at used for retention or redaction under policy.\n\nSecurity and permissions: only authenticated end users (role \"todoUser\") may access their own consent records. The provider must verify ownership by comparing the record’s todo_app_user_id to the caller’s identity and deny access without revealing existence if the record belongs to a different user. Administrators should not use this endpoint for routine operations, as private consent details are not intended for administrative browsing.\n\nEntity relationship context: a consent record is independent of todos and represents a single event in the consent timeline for a given purpose. Clients may use this read to show detailed consent information in settings screens, including timestamps, policy_version, and capture source.\n\nError handling and behavior: if privacyConsentId does not exist or refers to a record that the user does not own, return an authorization-safe denial. Records with a non-null deleted_at are considered archived and normally not returned unless business policy permits. Validation must ensure privacyConsentId is a UUID.","parameters":[{"name":"privacyConsentId","description":"Unique identifier of the privacy consent record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete privacy consent entity","typeName":"ITodoAppPrivacyConsent"},"authorizationType":null,"authorizationRole":"todoUser","name":"at"},{"specification":"Remove the user profile associated with a specific user by marking it as deleted in the Prisma table todo_app_user_profiles. This endpoint performs a logical deletion by setting deleted_at to the current timestamp, preserving history while excluding the profile from normal flows. It requires the path parameter userId (UUID) and enforces that the authenticated user owns the profile being deleted.","path":"/todoApp/todoUser/users/{userId}/profile","method":"delete","summary":"Logically delete a user profile (todo_app_user_profiles) by userId","description":"This operation performs a logical removal of a user’s profile in todo_app_user_profiles by setting deleted_at. The profile table stores presentational attributes for a single user (1:1 with todo_app_users) including full_name, nickname, avatar_uri, and timestamps. Deletion hides the profile from standard reads without erasing auditability, aligning with the model’s deleted_at column.\n\nSecurity considerations: only the profile owner (role \"todoUser\") may delete their profile via this endpoint. The provider must verify that the userId in the path matches the authenticated principal and deny access otherwise without revealing whether a profile exists. Administrative routines should not read private profile attributes without lawful process; operational governance should use separate admin workflows.\n\nEntity and relationship context: todo_app_user_profiles has a unique FK to todo_app_users via todo_app_user_id, ensuring at most one profile per account. This endpoint targets the profile by the owning userId rather than a separate profileId to keep the API ergonomic for self-service.\n\nValidation rules and business behavior: if no active (non-deleted) profile exists for the specified user, the operation should be idempotent and return a confirmation that no active profile remains. Any cascading effects (e.g., clearing cached avatar) are handled by provider logic. Since deleted_at exists in the schema, the operation marks the record as deleted rather than permanently removing it.\n\nRelated operations: future profile create/update endpoints would manage full_name, nickname, and avatar_uri. Audit logging of the deletion action is recommended via system audit mechanisms, but those records are system-generated and not exposed for manual writes.\n\nError handling: validate userId format as UUID. Deny when the caller is unauthenticated or attempts cross-user access. If multiple edge cases occur (e.g., concurrent delete), the operation remains idempotent, ensuring the postcondition is that no active profile exists for the user.","parameters":[{"name":"userId","description":"Identifier of the owning user whose profile should be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"todoUser","name":"erase"},{"specification":"Remove user preferences for a specific user by marking the preferences record as deleted in the Prisma table todo_app_user_preferences. Performs a logical deletion by setting deleted_at to the current timestamp. Requires userId (UUID) and enforces ownership by the authenticated user.","path":"/todoApp/todoUser/users/{userId}/preferences","method":"delete","summary":"Logically delete user preferences (todo_app_user_preferences) by userId","description":"This endpoint marks the preferences record in todo_app_user_preferences as deleted by setting deleted_at. The preferences table is 1:1 with todo_app_users via todo_app_user_id and stores user-controlled presentation and behavior such as timezone, locale, and page_size. Logical deletion preserves history and supports retention workflows consistent with the presence of the deleted_at column in the schema.\n\nSecurity and permissions: only the owner (role \"todoUser\") can delete their preferences. The provider must verify that the path userId corresponds to the authenticated user, and deny access for cross-user attempts without revealing whether a preferences record exists.\n\nDatabase relationships: the unique constraint on todo_app_user_id ensures a single preferences row per user. This endpoint addresses the preferences by userId rather than a separate preferencesId, aligning with the 1:1 model and typical self-service flows.\n\nBehavior and validation: if a preferences record is already deleted or does not exist, the operation should be treated as idempotent with the postcondition that no active preferences remain. Downstream systems interpreting due dates and UI text (timezone, locale, page_size) should fall back to service defaults after deletion until a new preferences record is created.\n\nRelated operations: separate endpoints typically allow creating or updating preferences. Administrative access to private preference values is out of routine scope.\n\nError handling: validate userId as UUID. Deny unauthenticated requests. Ensure rate limits are respected for destructive actions. The operation sets deleted_at and excludes the record from subsequent normal reads.","parameters":[{"name":"userId","description":"Identifier of the owning user whose preferences should be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"todoUser","name":"erase"},{"specification":"Search and paginate authentication sessions for a specific user. Operates on the Prisma table todo_app_sessions and returns a filtered, sorted, and paginated collection of the user’s sessions without exposing sensitive secrets (e.g., session_token). The endpoint supports complex querying (time windows, active/expired/revoked status, client metadata filters, sorting, pagination) that exceed simple query strings, hence PATCH is used with a structured request body (ITodoAppSession.IRequest). The response is a paginated summary list (IPageITodoAppSession.ISummary) suitable for account security pages and session management views.","description":"Retrieve a filtered, sorted, and paginated list of sessions for the specified user from the todo_app_sessions table. Each record represents a sign-in session and includes attributes such as id (UUID primary key), todo_app_user_id (owner reference), ip (last seen or creation IP), user_agent, issued_at, expires_at, revoked_at, revoked_reason, created_at, and updated_at. The table also has a session_token column that is unique and security-sensitive; client responses must not include raw tokens.\n\nThis operation is intended for authenticated users reviewing their own active and historical sessions to monitor account security and manage sign-ins across devices. Authorization must ensure that the path userId matches the caller’s identity. Use todo_app_sessions.todo_app_user_id to enforce ownership checks so that users can never list sessions belonging to others.\n\nThe request body (ITodoAppSession.IRequest) should support common filters derived from the schema columns, such as status filters (e.g., active where revoked_at is null and expires_at is in the future; expired where expires_at is in the past; revoked where revoked_at is not null), time range filters over issued_at/expires_at, client metadata filters (ip, user_agent substrings), and pagination/sorting parameters (default sort by issued_at descending). Results should exclude rows considered logically removed by business policy when deleted_at is not null.\n\nIf the user does not exist or the caller lacks permission to access the specified userId, the provider should deny access without revealing whether the resource exists. If filters are invalid (e.g., malformed date ranges), the provider should return validation errors that identify the rule in business terms. Related operations include: GET /users/{userId}/sessions/{sessionId} for a specific session detail, GET /sessions/{sessionId}/revocation for any associated revocation record, and PATCH /sessions/{sessionId}/refreshTokens to review the refresh-token chain for a session.","summary":"Search a user’s sessions from Prisma table todo_app_sessions with filtering and pagination","parameters":[{"name":"userId","description":"Owner user’s ID whose sessions are being queried","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and paginate parameters for user sessions","typeName":"ITodoAppSession.IRequest"},"responseBody":{"description":"Paginated summary list of sessions that match the search criteria","typeName":"IPageITodoAppSession.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/users/{userId}/sessions","method":"patch"},{"specification":"Retrieve a single authentication session owned by a specific user. Operates on the Prisma table todo_app_sessions and returns the full session entity (ITodoAppSession) excluding sensitive token secrets. The endpoint validates that the session belongs to the provided userId and enforces ownership-based access control.","description":"Fetch a single session record from todo_app_sessions identified by sessionId and scoped by userId. The schema defines fields including id (UUID), todo_app_user_id (FK to todo_app_users.id), session_token (unique secret, never returned to clients), ip, user_agent, issued_at, expires_at, revoked_at, revoked_reason, created_at, updated_at, and deleted_at. Implementations must avoid exposing raw session_token, and may provide safe metadata only.\n\nSecurity and authorization: the caller must be authenticated as the owner indicated by userId, and the provider must verify that the session’s todo_app_user_id equals the path userId. If the session does not belong to the user or is not found, the provider should deny access without indicating whether the resource exists. This behavior aligns with the account security practices described in the requirements.\n\nExpected behavior and errors: return the single session entity when found. If the record is flagged as logically removed by business policy (non-null deleted_at), omit it from normal responses. If the session is expired (expires_at < now) or revoked (revoked_at not null), those states should be reflected in the response fields but do not by themselves prevent retrieval. Validation errors should be returned for malformed UUIDs. Related endpoints: PATCH /users/{userId}/sessions (list/search), GET /sessions/{sessionId}/revocation (view revocation details for the session), PATCH /sessions/{sessionId}/refreshTokens (inspect refresh-token chain).","summary":"Get a specific session (todo_app_sessions) for the given user","parameters":[{"name":"userId","description":"Owner user’s ID","schema":{"type":"string","format":"uuid"}},{"name":"sessionId","description":"Target session’s ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested session entity without raw token secrets","typeName":"ITodoAppSession"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/users/{userId}/sessions/{sessionId}","method":"get"},{"specification":"Retrieve the revocation record for a specific session. Operates on the Prisma table todo_app_session_revocations, which enforces a unique record per session via the todo_app_session_id. Returns the revocation entity (ITodoAppSessionRevocation) if it exists, allowing users to understand when and why their session was revoked.","description":"Return the revocation details for the given session from todo_app_session_revocations. The schema includes id (UUID PK), todo_app_session_id (unique FK to todo_app_sessions.id), revoked_at (timestamp), revoked_by (actor category such as \"user\", \"system\", or \"admin\"), reason (optional), created_at, updated_at, and deleted_at. The presence of a record indicates that the session has been explicitly revoked and should no longer be considered valid for authentication.\n\nSecurity considerations: even though the path omits userId, the provider must validate ownership by joining the session (todo_app_sessions) referenced by todo_app_session_id and ensuring its todo_app_user_id matches the authenticated caller. This prevents cross-user access to revocation details.\n\nExpected behavior: return the revocation record when it exists. If no record exists for the session, respond as not found according to service conventions. Validation errors should be surfaced for malformed UUIDs. This operation is commonly used alongside GET /users/{userId}/sessions/{sessionId} to present a complete picture of session state, and PATCH /sessions/{sessionId}/refreshTokens to review the associated refresh-token rotation history.","summary":"Get session revocation details (todo_app_session_revocations) for a session","parameters":[{"name":"sessionId","description":"Target session’s ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Revocation record associated with the session, if any","typeName":"ITodoAppSessionRevocation"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/sessions/{sessionId}/revocation","method":"get"},{"specification":"Search and paginate refresh tokens associated with a session. Operates on the Prisma table todo_app_refresh_tokens and returns a paginated summary (IPageITodoAppRefreshToken.ISummary) without exposing raw token or token_hash values. Supports filters such as validity windows, rotation state, and revocation status to reconstruct token history for account security views.","description":"Retrieve refresh tokens for the specified session from todo_app_refresh_tokens. The schema includes id (UUID PK), todo_app_session_id (FK to todo_app_sessions.id), parent_id (self-referential chain), token (opaque; deprecated for security), token_hash (unique lookup hash), issued_at, expires_at, rotated_at, revoked_at, revoked_reason, created_at, updated_at, and deleted_at. Client responses must not expose token or token_hash values; instead, return safe metadata such as timestamps and rotation/revocation status.\n\nSecurity and authorization: although the path does not include userId, the provider must enforce ownership by verifying that the session referenced by the path parameter belongs to the authenticated user (via todo_app_sessions.todo_app_user_id). This prevents cross-user inspection of token chains.\n\nThe request body (ITodoAppRefreshToken.IRequest) should support filters on temporal fields (issued_at/expires_at), rotation/revocation status (rotated_at, revoked_at), and chain navigation via parent_id when focusing on a branch. Sorting should typically default to issued_at descending. Results should exclude logically removed rows when deleted_at is not null per business policy. Related endpoints: GET /users/{userId}/sessions/{sessionId} (session detail), GET /sessions/{sessionId}/revocation (revocation info), and PATCH /users/{userId}/sessions (search sessions).","summary":"Search refresh tokens (todo_app_refresh_tokens) for a session with pagination","parameters":[{"name":"sessionId","description":"Session whose refresh tokens are being queried","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, sort, and paginate parameters for refresh tokens","typeName":"ITodoAppRefreshToken.IRequest"},"responseBody":{"description":"Paginated summary of refresh tokens for the session","typeName":"IPageITodoAppRefreshToken.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/sessions/{sessionId}/refreshTokens","method":"patch"},{"specification":"Retrieve a single refresh token record from the todo_app_refresh_tokens table by its identifier within the context of a parent session in todo_app_sessions. This GET operation returns one refresh token resource that belongs to the specified session, enabling callers to inspect issued_at, expires_at, rotated_at, revoked_at, and other audit-related fields. The endpoint validates that the referenced refresh token is associated to the given session (todo_app_refresh_tokens.todo_app_session_id = {sessionId}). Request body is not required; response returns the detailed refresh token DTO (ITodoAppRefreshToken).","description":"Fetch a specific refresh token associated with an authentication session. In the Prisma schema, todo_app_refresh_tokens stores long-lived authentication artifacts with rotation history and revocation metadata. Columns include id, todo_app_session_id (FK to todo_app_sessions.id), optional parent_id for rotation chains, token and token_hash, issued_at, expires_at, rotated_at, revoked_at, revoked_reason, created_at, updated_at, and a deleted_at marker column used to exclude records from normal flows when set.\n\nSecurity and permissions: Only the authenticated owner of the session (the same user who owns todo_app_sessions.todo_app_user_id) should be able to read this record. Administrators should not need routine access to refresh token contents. Providers must never expose raw secrets in logs, and downstream DTOs must omit or redact sensitive columns (token, token_hash) per policy.\n\nEntity relationships and constraints: The record references a parent session via todo_app_session_id with onDelete: Cascade in the schema. Implementations must confirm that the refreshTokenId exists and belongs to the specified sessionId; otherwise, respond as not found. If revoked_at is present, the token has been revoked; if rotated_at is present, the token has been superseded by a child token in the rotation chain. The deleted_at marker indicates records that are no longer active and should typically be excluded from standard retrievals.\n\nValidation and behavior: This operation returns a single resource. It does not paginate or filter. Typical errors include invalid UUID formats, nonexistent identifiers, or a mismatch between sessionId and refreshTokenId. Related operations include session detail retrieval and listing a session’s refresh tokens if provided elsewhere.","summary":"Get a refresh token from todo_app_refresh_tokens by session and token identifiers","parameters":[{"name":"sessionId","description":"Identifier of the parent session (todo_app_sessions.id)","schema":{"type":"string","format":"uuid"}},{"name":"refreshTokenId","description":"Identifier of the refresh token (todo_app_refresh_tokens.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed refresh token information (sensitive fields redacted)","typeName":"ITodoAppRefreshToken"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/sessions/{sessionId}/refreshTokens/{refreshTokenId}","method":"get"},{"specification":"Search and paginate authentication login attempts for a specific user from the todo_app_login_attempts table. This PATCH operation supports complex filtering, sorting, and pagination over audit-style attempt records (success/failure, IP, user agent, reason, occurred_at). The request body uses ITodoAppLoginAttempt.IRequest (search parameters), and the response returns a paginated collection of summaries (IPageITodoAppLoginAttempt.ISummary). Path parameter {userId} scopes results to the owner account.","description":"Retrieve a filtered, paginated list of authentication attempts linked to a user. In the Prisma schema, todo_app_login_attempts captures per-attempt outcomes with columns such as id, optional todo_app_user_id (FK to todo_app_users.id when the email maps to an account), email (as entered), success, ip, optional user_agent, optional failure_reason, occurred_at, created_at, updated_at, and a deleted_at marker. These records support brute-force protection, abuse detection, and security analytics.\n\nSecurity and permissions: Only the authenticated owner should access their own login attempts. Implementations must ensure the caller is the same principal identified by {userId}. Administrators typically do not require routine access to private per-attempt details. Apply appropriate rate limiting to reduce enumeration risks.\n\nEntity relationships and filters: When todo_app_user_id is present, filter by equality to {userId}. Depending on policy, systems may also correlate attempts by the user’s current email value, but the canonical filter is the FK match. The response excludes logically deleted items (deleted_at set) from standard results. Typical filters include time windows over occurred_at, success state, IP address, user agent, and free-text search over failure_reason.\n\nValidation and error handling: The request body (ITodoAppLoginAttempt.IRequest) defines pagination, sorting, and optional filters. Reject unsupported page sizes or invalid sort keys in provider logic. Common errors include invalid UUID formats for {userId} and authorization failures when a user requests data for another user.","summary":"Search login attempts (todo_app_login_attempts) for a specific user with pagination and filters","parameters":[{"name":"userId","description":"Owner user identifier (todo_app_users.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination parameters for login attempts","typeName":"ITodoAppLoginAttempt.IRequest"},"responseBody":{"description":"Paginated list of login attempt summaries","typeName":"IPageITodoAppLoginAttempt.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/users/{userId}/loginAttempts","method":"patch"},{"specification":"Retrieve a single authentication login attempt record from the todo_app_login_attempts table for a specific user. This GET returns the full detail for one attempt, allowing security review of success/failure, IP, user agent, reason, and occurred_at. The path requires {userId} (owner) and {loginAttemptId} (attempt id).","description":"Fetch detailed information about a single login attempt. The Prisma model todo_app_login_attempts includes id, optional todo_app_user_id (FK to todo_app_users.id), email (as entered), success, ip, optional user_agent, optional failure_reason, occurred_at, created_at, updated_at, and a deleted_at marker. This record is security-sensitive and is primarily intended for a user reviewing their own account activity.\n\nSecurity and permissions: Enforce ownership by requiring that todo_app_login_attempts.todo_app_user_id equals {userId}. Deny access without confirming existence when a user targets another user’s data. Apply rate limiting to mitigate probing. Records flagged as deleted (deleted_at set) should not be returned in normal circumstances.\n\nExpected behavior and errors: Returns a single resource when both {userId} and {loginAttemptId} identify an owned record. Return not found if the identifiers are invalid, do not match, or if the record is not accessible to the caller. This operation is read-only.","summary":"Get one login attempt (todo_app_login_attempts) for a user by id","parameters":[{"name":"userId","description":"Owner user identifier (todo_app_users.id)","schema":{"type":"string","format":"uuid"}},{"name":"loginAttemptId","description":"Login attempt identifier (todo_app_login_attempts.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed login attempt information","typeName":"ITodoAppLoginAttempt"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/users/{userId}/loginAttempts/{loginAttemptId}","method":"get"},{"specification":"Search and paginate email verification records for a specific user from the todo_app_email_verifications table. This PATCH operation supports filtering and sorting by sent_at, expires_at, consumed_at, failure_count, and other attributes. The request body uses ITodoAppEmailVerification.IRequest; the response returns a paginated collection of summaries (IPageITodoAppEmailVerification.ISummary). Path parameter {userId} scopes results to the owner.","description":"List and filter email verification records associated with a user account. The Prisma model todo_app_email_verifications stores id, todo_app_user_id (FK to todo_app_users.id), token and token_hash, target_email, sent_at, expires_at, optional consumed_at, failure_count, optional consumed_by_ip, created_at, updated_at, and a deleted_at marker. These records support account activation and email-change verification flows; for security, responses and logs must avoid exposing raw token secrets.\n\nSecurity and permissions: Only the authenticated owner should view their own verification records. Enforce that the caller corresponds to {userId}. Administrative access is not required during normal operations. Apply rate limiting to mitigate probing.\n\nFiltering and sorting: Typical filters include time windows (sent_at, expires_at), consumption state (consumed_at presence), and failure_count ranges. Default sorting may be by sent_at or created_at in descending order. Records with a deletion marker (deleted_at set) are generally excluded from ordinary results.\n\nBehavior and errors: Request body (ITodoAppEmailVerification.IRequest) supplies pagination and filter parameters; the response is a paginated summary list. Common errors include invalid UUID format for {userId} and insufficient authorization when attempting to access another user’s data.","summary":"Search email verifications (todo_app_email_verifications) for a user with pagination and filters","parameters":[{"name":"userId","description":"Owner user identifier (todo_app_users.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria and pagination for email verifications","typeName":"ITodoAppEmailVerification.IRequest"},"responseBody":{"description":"Paginated list of email verification summaries (sensitive fields redacted)","typeName":"IPageITodoAppEmailVerification.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/users/{userId}/emailVerifications","method":"patch"},{"specification":"Retrieve a specific email verification record belonging to a user. This operation reads from the Prisma table todo_app_email_verifications and returns a single email verification entity. It is intended for authenticated end users to view metadata about their own email verification token record (e.g., target_email, sent_at, expires_at, consumed_at, failure_count). The operation never creates, modifies, or deletes records; it only reads them. Path parameters include the user identifier (todo_app_users.id) and the email verification identifier (todo_app_email_verifications.id). The response type is ITodoAppEmailVerification.","description":"Fetch a single email verification token record associated with the specified user. The underlying Prisma model todo_app_email_verifications includes fields: id (UUID), todo_app_user_id (FK to todo_app_users.id), token (deprecated in comments), token_hash (preferred for lookups), target_email, sent_at, expires_at, consumed_at, failure_count, consumed_by_ip, created_at, updated_at, and deleted_at. In accordance with the schema comments, implementations should avoid exposing sensitive token values and rely on token_hash for security-sensitive workflows; client responses should prioritize metadata such as target_email and lifecycle timestamps.\n\nSecurity and access control: Only the owner (todoUser) may retrieve their own record. The provider must verify that the path userId matches the authenticated principal and that the requested emailVerificationId is owned by that user (todo_app_email_verifications.todo_app_user_id). Requests from other users must be denied without revealing resource existence.\n\nEntity relations and validation: The todo_app_email_verifications record references todo_app_users. This read-only operation does not perform any modifications. It should return records that still exist and are not considered removed (for typical queries, treat rows with a non-null deleted_at as removed from normal access). If the specified id does not exist for the owner, return a not-found response pattern.\n\nRelated operations: Account lifecycle endpoints (e.g., registration and verification confirmation triggers) are separate write processes and are not covered here. This operation is complementary to user security views and audit diagnostics where applicable.","summary":"Get a specific email verification (todo_app_email_verifications) for a user","parameters":[{"name":"userId","description":"Owner user’s ID (UUID) of the email verification record","schema":{"type":"string","format":"uuid"}},{"name":"emailVerificationId","description":"Email verification record ID (UUID) to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Email verification record owned by the specified user","typeName":"ITodoAppEmailVerification"},"authorizationRoles":["todoUser"],"name":"at","path":"/todoApp/todoUser/users/{userId}/emailVerifications/{emailVerificationId}","method":"get","authorizationRole":"todoUser","authorizationType":null},{"specification":"Search and retrieve a filtered, paginated list of password reset records for a specific user. This operation reads from the Prisma table todo_app_password_resets, supporting complex filtering, sorting, and pagination via a request body DTO ITodoAppPasswordReset.IRequest. It returns a paginated collection IPageITodoAppPasswordReset.ISummary optimized for list views. This is a read-only operation for end users reviewing their own password reset requests’ metadata.","description":"Return a paginated list of password reset records that belong to the specified user. The underlying Prisma model todo_app_password_resets includes: id (UUID), todo_app_user_id (nullable FK to todo_app_users.id for privacy-preserving requests), email, token (deprecated in comments), token_hash (preferred), requested_at, expires_at, consumed_at, requested_by_ip, created_at, updated_at, and deleted_at. In alignment with the schema comments, implementations should avoid exposing sensitive token values and rely on hashed representations server-side; list responses should present non-sensitive metadata such as email, timestamps, and status derived from consumed_at/expired comparisons.\n\nSecurity and permissions: Access is restricted to the owner (todoUser). The provider must ensure the path userId corresponds to the authenticated user and filter the list to entries where todo_app_password_resets.todo_app_user_id equals that userId when present, and where appropriate align on privacy behavior for email-only requests. Requests from other accounts must be denied without revealing whether records exist.\n\nPagination and filtering: The request body (ITodoAppPasswordReset.IRequest) should support common list behaviors noted in business requirements—pagination (default page size often 20 within 1–100 range), sorting by requested_at or expires_at, and optional search over non-sensitive fields (e.g., email domain). Exclude rows considered removed from normal access (records where deleted_at is not null). Handle empty result sets gracefully.","summary":"List/search password resets (todo_app_password_resets) for a user","parameters":[{"name":"userId","description":"Target user’s ID (UUID) whose password reset records are queried","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination criteria for listing password reset records","typeName":"ITodoAppPasswordReset.IRequest"},"responseBody":{"description":"Paginated list of password reset summaries matching the criteria","typeName":"IPageITodoAppPasswordReset.ISummary"},"authorizationRoles":["todoUser"],"name":"index","path":"/todoApp/todoUser/users/{userId}/passwordResets","method":"patch","authorizationRole":"todoUser","authorizationType":null},{"specification":"Retrieve a specific password reset record for a user. This operation reads a single row from the Prisma table todo_app_password_resets using the passwordResetId path parameter. It is designed for authenticated users to review metadata associated with their own password reset request. The response DTO is ITodoAppPasswordReset.","description":"Fetch detailed metadata for one password reset record owned by the specified user. In Prisma, todo_app_password_resets defines: id (UUID), optional todo_app_user_id (FK), email, token (deprecated), token_hash (preferred), requested_at, expires_at, consumed_at, requested_by_ip, created_at, updated_at, and deleted_at. Consistent with the schema’s guidance, implementations must avoid exposing raw token values; responses should focus on safe metadata such as email, timestamps, and lifecycle status inferred from consumed_at and expiration.\n\nSecurity model: Only the owner (todoUser) may access their record. The provider must verify ownership by checking that the record either references the user via todo_app_user_id or otherwise corresponds to an allowed privacy-preserving access pattern aligned with policy. If the record is not owned by the user, the service must deny access without acknowledging existence.\n\nBehavior and errors: This is a read-only retrieval. Records treated as removed from normal access (deleted_at set) should not be returned in standard flows. If no matching record is found for the owner, return a not-found response pattern.","summary":"Get a specific password reset (todo_app_password_resets) for a user","parameters":[{"name":"userId","description":"Owner user’s ID (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"passwordResetId","description":"Password reset record ID (UUID) to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Password reset record owned by the specified user","typeName":"ITodoAppPasswordReset"},"authorizationRoles":["todoUser"],"name":"at","path":"/todoApp/todoUser/users/{userId}/passwordResets/{passwordResetId}","method":"get","authorizationRole":"todoUser","authorizationType":null},{"specification":"Search and retrieve a filtered, paginated list of personal data export jobs for a specific user. This operation reads from the Prisma table todo_app_data_exports, enabling pagination, filtering (by status, time windows), and sorting through the ITodoAppDataExport.IRequest request body. It returns a paginated collection of summaries as IPageITodoAppDataExport.ISummary for efficient list rendering.","description":"Return a paginated list of data export requests associated with the specified user. The Prisma model todo_app_data_exports includes: id (UUID), todo_app_user_id (FK), status, export_format, download_uri (URI when ready), file_size_bytes, checksum, status_message, completed_at, expires_at, request_ip, request_user_agent, created_at, updated_at, and deleted_at. The schema comments emphasize that this table stores workflow metadata and links only; private todo content is not stored in this table.\n\nSecurity: Access is restricted to the owner (todoUser). The provider must ensure path userId matches the authenticated principal and filter results to rows where todo_app_data_exports.todo_app_user_id equals that user. Access attempts for other users must be denied without indicating whether records exist.\n\nList behavior: The request body ITodoAppDataExport.IRequest should support pagination (page size within 1–100, default typically 20), filtering by status (e.g., requested, processing, completed, failed, expired), optional date ranges (created_at, completed_at), and sorting by created_at or completed_at. Exclude rows considered removed from normal access (deleted_at set). For completed entries, download_uri is a URI string and should be treated as sensitive with expiry semantics per expires_at.","summary":"List/search data exports (todo_app_data_exports) for a user","parameters":[{"name":"userId","description":"Owner user’s ID (UUID) to scope data export jobs","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination criteria for listing data export jobs","typeName":"ITodoAppDataExport.IRequest"},"responseBody":{"description":"Paginated list of data export summaries for the user","typeName":"IPageITodoAppDataExport.ISummary"},"authorizationRoles":["todoUser"],"name":"index","path":"/todoApp/todoUser/users/{userId}/dataExports","method":"patch","authorizationRole":"todoUser","authorizationType":null},{"specification":"Retrieve a single personal data export job that belongs to a specific user. This operation reads from the Prisma table todo_app_data_exports, which stores export jobs with fields including id (PK), todo_app_user_id (FK to todo_app_users), status, export_format, download_uri, file_size_bytes, checksum, status_message, completed_at, expires_at, request_ip, request_user_agent, created_at, updated_at, and deleted_at. The endpoint ensures ownership by requiring both userId and dataExportId and returns the detailed export job object for client status display and download link handling when ready.","description":"This operation returns the detailed personal data export job for the specified user and export identifier. In the Prisma schema, todo_app_data_exports represents user-initiated data export requests and tracks lifecycle fields like status (requested, processing, completed, failed, expired), completion timestamps, and an optional download_uri for retrieval once processing is finished. The model also captures request context (request_ip, request_user_agent) and integrity metadata (checksum, file_size_bytes) to support trustworthy downloads.\n\nSecurity and permissions: the result must belong to the authenticated user indicated by userId. Access is limited to the resource owner in line with the privacy and access boundaries described in the business requirements. Administrative roles do not routinely access private export content; this endpoint is intended for end users (todoUser role) to view their own job details. If an export job does not belong to the user or does not exist, the provider should respond without revealing the existence of other users’ records.\n\nEntity relationships: the export record references todo_app_users via todo_app_user_id. The operation must filter by this FK to enforce ownership. Listings and lookups should normally exclude records marked as deleted via the deleted_at column according to retention policies, returning only active records in normal flows.\n\nValidation and behavior: the path parameters must be valid UUIDs. The operation returns the full export job object including status, export_format, and when available, download_uri and expires_at so clients can render a download action. No request body is required. Related operations include POST /users/{userId}/dataExports to create a new export request and search/list operations on account deletion requests for privacy workflows.\n\nError handling: if the export is not found for the given userId and dataExportId pair, return a not-found outcome consistent with access control guidance. Avoid leaking cross-user existence. If the export has expired (expires_at in the past), clients should expect download_uri to be unusable and may initiate a new export.","summary":"Get a user’s data export job by ID from todo_app_data_exports","parameters":[{"name":"userId","description":"Unique identifier of the owner user","schema":{"type":"string","format":"uuid"}},{"name":"dataExportId","description":"Unique identifier of the data export job","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed personal data export job","typeName":"ITodoAppDataExport"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/users/{userId}/dataExports/{dataExportId}","method":"get"},{"specification":"Create a new personal data export request for the specified user. This operation writes to the Prisma table todo_app_data_exports. On creation, the system records todo_app_user_id (FK to todo_app_users), requested export_format, initial status (e.g., requested), and request context (request_ip, request_user_agent) as appropriate. The export job will later be processed asynchronously, updating fields such as status, download_uri, file_size_bytes, checksum, completed_at, and expires_at.","description":"This endpoint allows an authenticated user to initiate a new export job of their personal data. The underlying table todo_app_data_exports captures the job’s lifecycle including status transitions (e.g., requested → processing → completed or failed → expired) and integrity details (checksum, file_size_bytes). The creation flow typically stores minimal user-provided options such as export_format while all other lifecycle attributes are system-managed during processing.\n\nSecurity and permissions: only the resource owner (todoUser) may create an export for their own account. The controller/provider must enforce that the path userId matches the authenticated subject. Administrative roles do not use this endpoint for routine operations. The export record’s ownership is established by setting todo_app_user_id to userId; subsequent retrievals must filter by this relationship.\n\nValidation and business rules: validate export_format against supported values (e.g., json or csv per product policy) and apply rate/fair-use limits where configured. Newly created jobs set an initial status such as requested, and do not include download_uri until processing completes. Records with deleted_at set are excluded from normal flows by policy. This operation should not accept system-managed fields like status, download_uri, checksum, completed_at, or expires_at from clients; those are set by processing logic.\n\nRelated operations: clients typically follow with GET /users/{userId}/dataExports/{dataExportId} to poll status and obtain the download_uri upon completion. Privacy workflows may also include listing and viewing account deletion requests; however, those are separate resources.\n\nError handling: reject invalid input (e.g., unsupported export_format). If rate limits are exceeded, respond with a throttling outcome. Ensure ownership and avoid exposing other users’ records.","summary":"Create a new personal data export request in todo_app_data_exports","parameters":[{"name":"userId","description":"Unique identifier of the owner user initiating the export","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Creation payload specifying export options; system manages status and processing fields","typeName":"ITodoAppDataExport.ICreate"},"responseBody":{"description":"Newly created data export job","typeName":"ITodoAppDataExport"},"authorizationType":null,"authorizationRole":"todoUser","name":"create","path":"/todoApp/todoUser/users/{userId}/dataExports","method":"post"},{"specification":"Search and retrieve a paginated list of a user’s account deletion requests with filtering and sorting. This reads from the Prisma table todo_app_account_deletion_requests, which records user-initiated account deletion workflows with fields including id (PK), todo_app_user_id (FK to todo_app_users), status, reason, confirmed_at, scheduled_purge_at, processed_at, canceled_at, request_ip, request_user_agent, created_at, updated_at, and deleted_at. The request body conveys search parameters such as status, date ranges, pagination, and sort options.","description":"This operation returns a filtered and paginated list of account deletion requests for the specified user. The todo_app_account_deletion_requests table captures the lifecycle of deletion workflows (e.g., pending_confirmation, scheduled, canceled, completed) and timestamps like confirmed_at, scheduled_purge_at, and processed_at, enabling clients to show current state and timelines.\n\nSecurity and permissions: only the owner (todoUser) may list their own deletion requests. The provider must filter by todo_app_user_id = userId and prevent cross-user access. Administrative reviews of deletion workflows occur elsewhere and should avoid exposing private content via this user-facing endpoint.\n\nSearch and pagination behavior: the request supports filtering by status, created_at ranges, scheduled_purge_at windows, and optional reason text search per business policy. Results should exclude records that are marked deleted via deleted_at in normal flows. Sorting is commonly by created_at descending by default, with options to sort by scheduled_purge_at. Pagination must adhere to user preferences or request parameters (e.g., page number/size within 1–100) and return a page container including pagination metadata and an array of summary objects.\n\nRelated operations: clients often navigate to GET /users/{userId}/accountDeletionRequests/{accountDeletionRequestId} to view details of a single request. Separate privacy features like data exports are managed via their own endpoints.\n\nError handling: validate pagination bounds and filter values. If no records match, return an empty page. Enforce ownership checks and avoid revealing the existence of other users’ requests.","summary":"Search and list a user’s account deletion requests from todo_app_account_deletion_requests","parameters":[{"name":"userId","description":"Unique identifier of the owner user","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, sorting, and pagination parameters for listing account deletion requests","typeName":"ITodoAppAccountDeletionRequest.IRequest"},"responseBody":{"description":"Paginated list of account deletion request summaries","typeName":"IPageITodoAppAccountDeletionRequest.ISummary"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/users/{userId}/accountDeletionRequests","method":"patch"},{"specification":"Retrieve a specific account deletion request that belongs to a given user. This operation reads from the Prisma table todo_app_account_deletion_requests, which stores lifecycle fields for account deletion workflows: status, reason, confirmed_at, scheduled_purge_at, processed_at, canceled_at, and request context (request_ip, request_user_agent), along with created_at/updated_at timestamps. The operation enforces ownership by requiring userId and accountDeletionRequestId.","description":"This endpoint provides full details of a single account deletion request for the specified user. The underlying table todo_app_account_deletion_requests records each request’s status (e.g., pending_confirmation, scheduled, canceled, completed) and time markers that guide UI messaging and scheduling (confirmed_at and scheduled_purge_at). Clients use this to display current state, rationale (reason when present), and next steps.\n\nSecurity and permissions: access is restricted to the resource owner (todoUser). The provider must ensure that todo_app_user_id equals the path userId and that records marked deleted (via deleted_at) are excluded from normal responses. Administrative governance endpoints are separate and not part of this user-facing operation.\n\nEntity relationships: each record references todo_app_users via todo_app_user_id. No other entities need to be expanded here. The response returns the complete deletion request resource so clients can render details and status-dependent actions (e.g., cancel within a policy window if supported by business logic implemented elsewhere).\n\nError handling: if the record is not found for the given userId and accountDeletionRequestId, respond with a not-found outcome without indicating whether a record exists for other users. Validate both identifiers as UUIDs. No request body is required.","summary":"Get a user’s account deletion request by ID from todo_app_account_deletion_requests","parameters":[{"name":"userId","description":"Unique identifier of the owner user","schema":{"type":"string","format":"uuid"}},{"name":"accountDeletionRequestId","description":"Unique identifier of the account deletion request","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Account deletion request detail","typeName":"ITodoAppAccountDeletionRequest"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/users/{userId}/accountDeletionRequests/{accountDeletionRequestId}","method":"get"},{"specification":"Create a new account deletion request for a specific user. This operation persists a record in the Prisma table todo_app_account_deletion_requests associated to the path userId. It accepts user-provided context (e.g., reason) and initializes workflow fields like status according to business rules (e.g., pending_confirmation or scheduled by policy). The created row ties to the owner via todo_app_user_id and records request metadata (request_ip, request_user_agent) as applicable.","description":"Create an account deletion request for the owner identified by userId. The underlying Prisma model todo_app_account_deletion_requests stores the lifecycle of a deletion request with fields including status (e.g., pending_confirmation, scheduled, canceled, completed), optional reason, timestamps such as confirmed_at, scheduled_purge_at, processed_at, and canceled_at, as well as request_ip and request_user_agent for traceability. The model links to the owning account through todo_app_user_id and uses created_at and updated_at for temporal auditing.\n\nSecurity and permissions: Only the authenticated owner with role todoUser is authorized to initiate a deletion request for their own account. The controller/provider must enforce that the authenticated subject matches the path parameter userId. Administrative staff do not use this endpoint for governance workflows; they use separate admin channels documented elsewhere.\n\nBusiness logic and validation: Implementers should validate that the userId in the path exists and is active or otherwise eligible to request deletion under policy. Status is initialized according to business rules (for example, pending_confirmation). Optional reason text should be captured as provided within acceptable length constraints. Request context such as request_ip and request_user_agent may be captured from the HTTP request for auditability. Subsequent steps in the workflow (confirmation, scheduling, processing, or cancellation) are handled by other internal processes or endpoints.\n\nRelated operations: Systems may expose read endpoints to view the status of a user’s deletion request history. This create endpoint is typically followed by confirmation and scheduling processes that update the status timeline maintained by todo_app_account_deletion_requests.\n\nError handling: If the path userId does not match the authenticated subject, access must be denied without revealing resource existence. If a request conflicts with an already pending or scheduled deletion request according to policy, return a business-level conflict response with clear messaging.","summary":"Create a user’s account deletion request (todo_app_account_deletion_requests)","parameters":[{"name":"userId","description":"Owner user’s ID who is initiating the deletion request","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Account deletion request payload, including optional reason and initial status intent if policy allows","typeName":"ITodoAppAccountDeletionRequest.ICreate"},"responseBody":{"description":"Created account deletion request record associated to the user","typeName":"ITodoAppAccountDeletionRequest"},"authorizationType":null,"authorizationRole":"todoUser","name":"create","path":"/todoApp/todoUser/users/{userId}/accountDeletionRequests","method":"post"},{"specification":"Search and paginate privacy consent records for a specific user. Operates on the Prisma table todo_app_privacy_consents and returns the user’s own consent history (append-only design). Supports filters such as purpose_code, granted flag, time ranges (granted_at, revoked_at, expires_at), and sorting. Results are scoped to the path userId.","description":"Retrieve a filtered, paginated list of privacy consent records for the account identified by userId using the Prisma model todo_app_privacy_consents. This table preserves a historical trail of consent actions with fields including purpose_code, purpose_name, granted (boolean), granted_at, revoked_at (when applicable), expires_at (optional), policy_version, source, ip, and user_agent. The record links to the owner via todo_app_user_id and includes created_at and updated_at for temporal querying.\n\nSecurity and permissions: Only the authenticated owner with role todoUser may list their own privacy consent history. The implementation must ensure the path userId matches the authenticated subject. Administrative use cases review aggregated or non-personal data through separate mechanisms; routine access to private consent content is not permitted.\n\nQuery behavior: The request body supports search parameters such as purpose filters (by purpose_code or purpose_name), status filters (currently active grants vs revoked), time windows (granted_at ranges, revoked_at ranges, expires_at ranges), and sorting preferences (e.g., granted_at desc by default). Pagination parameters (page, page_size) should follow service-wide conventions with typical limits (e.g., 1–100). The endpoint returns a paginated page wrapper whose data elements are consent records.\n\nRelated operations: Use POST /users/{userId}/privacyConsents to append a new consent event (grant or withdrawal). Use GET /users/{userId}/privacyConsents/{privacyConsentId} to retrieve a specific consent action by identifier.\n\nError handling: Deny access if the userId does not match the authenticated subject. Validate pagination bounds and filter formats; provide clear messages when constraints are violated.","summary":"Search a user’s privacy consent history (todo_app_privacy_consents)","parameters":[{"name":"userId","description":"Owner user’s ID whose privacy consents are being listed","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for listing privacy consents","typeName":"ITodoAppPrivacyConsent.IRequest"},"responseBody":{"description":"Paginated list of privacy consent records belonging to the user","typeName":"IPageITodoAppPrivacyConsent"},"authorizationType":null,"authorizationRole":"todoUser","name":"index","path":"/todoApp/todoUser/users/{userId}/privacyConsents","method":"patch"},{"specification":"Retrieve a specific privacy consent record by identifier for a given user. Operates on the Prisma table todo_app_privacy_consents scoped by the path parameters userId and privacyConsentId. Returns the exact consent event row, preserving historical details such as purpose, granted flag, timestamps, and context.","description":"Return a single privacy consent record from todo_app_privacy_consents matching privacyConsentId that belongs to the account identified by userId. The consent record contains business fields like purpose_code, purpose_name, granted, granted_at, optional revoked_at and expires_at, policy_version, and optional source, ip, and user_agent for traceability. Ownership is enforced via todo_app_user_id; temporal fields (created_at/updated_at) support auditing.\n\nSecurity and permissions: Only the authenticated owner with role todoUser may access this resource, and the path userId must match the authenticated subject. The implementation must also verify ownership: the consent record’s todo_app_user_id equals userId. Requests for resources not owned by the caller must be denied without revealing existence.\n\nBehavior and validation: If the record is not found or does not belong to the specified user, return a not-found style response without disclosing sensitive details. This endpoint is read-only and returns the stored consent event as-is, reflecting the append-only design for consent history.\n\nRelated operations: Use PATCH /users/{userId}/privacyConsents to search a user’s consent history. Use POST /users/{userId}/privacyConsents to append a new consent decision event.\n\nError handling: Handle invalid UUID formats for either path parameter with appropriate validation messages. Protect against enumeration by applying ownership checks before returning data.","summary":"Get a specific privacy consent by ID (todo_app_privacy_consents)","parameters":[{"name":"userId","description":"Owner user’s ID to which the consent must belong","schema":{"type":"string","format":"uuid"}},{"name":"privacyConsentId","description":"Target privacy consent record’s ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed privacy consent record","typeName":"ITodoAppPrivacyConsent"},"authorizationType":null,"authorizationRole":"todoUser","name":"at","path":"/todoApp/todoUser/users/{userId}/privacyConsents/{privacyConsentId}","method":"get"},{"specification":"Append a new privacy consent event (grant or withdrawal) for a specific user. This operation writes to the Prisma table todo_app_privacy_consents, creating a new row tied to the owner via todo_app_user_id. It captures purpose_code, purpose_name, granted flag, policy_version, and timing/context fields such as granted_at, revoked_at (if representing a withdrawal), source, ip, and user_agent as appropriate.","description":"Create a privacy consent record for the account identified by userId using the append-only model of todo_app_privacy_consents. Each row represents a consent action with fields including purpose_code, purpose_name, granted (true to grant, false to deny/withdraw), granted_at, optional revoked_at and expires_at, policy_version, and optional source, ip, and user_agent. The ownership link is todo_app_user_id; created_at and updated_at timestamps support auditing and reporting.\n\nSecurity and permissions: Only the authenticated owner (role todoUser) may create consent records for their own account. The controller must verify the path userId equals the authenticated subject. Administrative users do not use this endpoint for routine operations.\n\nValidation and business rules: Ensure required fields are present and consistent. When granted is true, granted_at should be set; when representing a withdrawal, granted may be false and revoked_at may be set according to policy. purpose_code and policy_version must be valid per current notices/policies. Optional metadata (source, ip, user_agent) may be captured from the request.\n\nRelated operations: Use PATCH /users/{userId}/privacyConsents to search existing history and GET /users/{userId}/privacyConsents/{privacyConsentId} to view a specific event. Updates to prior records are not typical; changes are recorded as new rows to preserve history.\n\nError handling: Reject attempts to write for another user’s account. Validate enum-like domain values (e.g., format or policy-defined lists for purpose_code) and timestamp fields. Return clear messages on validation failures.","summary":"Create a new privacy consent event (todo_app_privacy_consents)","parameters":[{"name":"userId","description":"Owner user’s ID for whom the consent event is recorded","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Consent creation payload describing purpose, grant/withdrawal, and policy context","typeName":"ITodoAppPrivacyConsent.ICreate"},"responseBody":{"description":"Newly created privacy consent record","typeName":"ITodoAppPrivacyConsent"},"authorizationType":null,"authorizationRole":"todoUser","name":"create","path":"/todoApp/todoUser/users/{userId}/privacyConsents","method":"post"},{"specification":"Search and paginate administrative rate limit policies stored in the Prisma table todo_app_rate_limits. This operation provides server-side filtering, free-text search on name/description, and sorting across configuration fields (e.g., code, category, scope, window_seconds, enabled). It returns a paginated collection of summary records for efficient listing views. Request parameters are supplied in the ITodoAppRateLimit.IRequest DTO and the response uses IPageITodoAppRateLimit.ISummary. Administrators use this endpoint to audit and tune throttling behavior that is referenced by enforcement counters in todo_app_user_rate_counters and todo_app_ip_rate_counters.","path":"/todoApp/systemAdmin/rateLimits","method":"patch","summary":"List and search rate limit policies from Prisma table todo_app_rate_limits","description":"Retrieve a filtered, paginated list of rate limit policies from the todo_app_rate_limits table. According to the Prisma schema comments, this model defines system-wide throttling policy definitions that administrators manage. Key columns include id (UUID primary key), code (unique business identifier), name, description (optional), scope (such as \"user\", \"ip\", or \"global\"), category (for action grouping such as \"read\", \"write\", or \"auth\"), window_seconds (fixed window duration), max_requests, burst_size (optional), sliding_window (boolean), and enabled (boolean). Timestamps (created_at, updated_at) support administrative review.\n\nAccess to this endpoint should be restricted to operational administrators responsible for governance. The authorization model should ensure only users with appropriate administrative role can list and inspect these policies. Listings are intended for console pages and audit tools; ordinary end users do not need visibility into these configurations.\n\nThis operation integrates directly with the todo_app_rate_limits entity and is related to enforcement counters stored in todo_app_user_rate_counters and todo_app_ip_rate_counters, which reference rate limit policies to apply per-subject throttling. While those counter tables are maintained by system logic, administrators depend on this listing to verify which policies are active and how they are configured.\n\nValidation and business logic include supporting common filters such as by category, scope, enabled flag, and sliding_window, as well as range filters on window_seconds and max_requests. Sorting typically supports created_at, code, category, and scope. Full-text search can apply to name and description as hinted by the schema's trigram indexes. Error handling should clarify invalid sort keys, unknown filter values, or pagination bounds.","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting parameters for listing rate limit policies","typeName":"ITodoAppRateLimit.IRequest"},"responseBody":{"description":"Paginated collection of rate limit policy summaries matching the search criteria","typeName":"IPageITodoAppRateLimit.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"Fetch a single rate limit policy by its identifier from the Prisma table todo_app_rate_limits. Returns the full configuration object so administrators can review exact values including code, scope, category, window_seconds, max_requests, burst_size, sliding_window, and enabled. The response uses ITodoAppRateLimit.","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}","method":"get","summary":"Get a specific rate limit policy (todo_app_rate_limits) by ID","description":"Retrieve one rate limit policy from todo_app_rate_limits using its id (UUID). Per the schema comments, this table stores system-wide throttling policy definitions with fields like code (unique business identifier), name, description, scope (e.g., \"user\", \"ip\", \"global\"), category (e.g., \"read\", \"write\", \"auth\"), window_seconds, max_requests, burst_size (optional), sliding_window, and enabled. Timestamps (created_at, updated_at) allow administrators to audit when a policy was created or last changed.\n\nOnly administrators charged with governance should access this endpoint. It is intended for configuration consoles and operational tooling. The endpoint returns detailed configuration suitable for editing or for correlating with observed throttling behavior in related counter tables.\n\nThis operation is directly related to todo_app_user_rate_counters and todo_app_ip_rate_counters which reference policies for enforcement. When investigating throttling outcomes, administrators typically use this GET detail view after finding a policy in the list endpoint.\n\nValidation rules include ensuring the provided rateLimitId is a well-formed UUID and that the referenced policy exists. If the identifier does not match any record, the implementation should return a not-found response without exposing internal details.","parameters":[{"name":"rateLimitId","description":"Unique identifier of the target rate limit policy","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full rate limit policy configuration","typeName":"ITodoAppRateLimit"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"Create a new rate limit policy record in the Prisma table todo_app_rate_limits. The request body ITodoAppRateLimit.ICreate contains required configuration fields such as code, name, scope, category, window_seconds, max_requests, sliding_window, and enabled, with optional description and burst_size. Returns the created ITodoAppRateLimit object.","path":"/todoApp/systemAdmin/rateLimits","method":"post","summary":"Create a rate limit policy in todo_app_rate_limits","description":"Insert a new throttling policy into todo_app_rate_limits. As described in the schema comments, this table defines system-wide throttling policies managed by administrators. Important fields include a unique code for safe referencing, a human-readable name, optional description, scope (such as \"user\", \"ip\", or \"global\"), category (such as \"read\", \"write\", or \"auth\"), window_seconds, max_requests, optional burst_size, a sliding_window boolean, and an enabled flag indicating whether the policy is enforced. Created records carry created_at and updated_at timestamps for operational audit.\n\nOnly authorized administrators should be permitted to create new policies. Creation should validate uniqueness of code, acceptable ranges for window_seconds and max_requests, and the general consistency of provided fields. While the schema uses string types for scope and category, implementations often validate these against known application categories. The create DTO should include clear error messaging when constraints are violated (e.g., duplicate code).\n\nNewly created policies may be used by enforcement mechanisms consulted by todo_app_user_rate_counters and todo_app_ip_rate_counters. If the platform caches policies, the provider logic should ensure appropriate cache refresh or invalidation so that new limits take effect as intended. On success, this endpoint returns the full ITodoAppRateLimit record for immediate confirmation and display.","parameters":[],"requestBody":{"description":"New rate limit policy configuration to create","typeName":"ITodoAppRateLimit.ICreate"},"responseBody":{"description":"The newly created rate limit policy","typeName":"ITodoAppRateLimit"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"Update an existing rate limit policy in the Prisma table todo_app_rate_limits identified by rateLimitId. The request body ITodoAppRateLimit.IUpdate carries updatable fields such as name, description, scope, category, window_seconds, max_requests, burst_size, sliding_window, enabled, and optionally code (subject to uniqueness). Returns the updated ITodoAppRateLimit object.","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}","method":"put","summary":"Update a rate limit policy (todo_app_rate_limits) by ID","description":"Modify a throttling policy stored in todo_app_rate_limits. The schema describes this table as the canonical source for system-wide rate limit configurations, including code (unique), name, description, scope (e.g., \"user\", \"ip\", \"global\"), category (e.g., \"read\", \"write\", \"auth\"), window_seconds, max_requests, optional burst_size, sliding_window flag, and enabled flag. Updating these fields allows administrators to tune throttling behavior without touching enforcement counters directly.\n\nAccess control must restrict this operation to administrators. Validation should ensure the path parameter is a valid UUID, the target record exists, and any changes respect uniqueness for code and reasonable bounds for numeric fields like window_seconds and max_requests. Applications commonly validate scope/category values against known sets even though they are stored as strings in the schema comments.\n\nThis endpoint complements the list, detail, and create operations. After updates, downstream enforcement that references these configurations—such as logic maintaining todo_app_user_rate_counters and todo_app_ip_rate_counters—should observe the changed limits according to the system's cache and propagation rules. The updated ITodoAppRateLimit object is returned so operators can immediately verify the resulting configuration.","parameters":[{"name":"rateLimitId","description":"Unique identifier of the rate limit policy to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full updates for the rate limit policy","typeName":"ITodoAppRateLimit.IUpdate"},"responseBody":{"description":"The updated rate limit policy","typeName":"ITodoAppRateLimit"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"Delete (retire) a rate limit policy record in the todo_app_rate_limits table by identifier. This endpoint is intended for governance/administration to remove an obsolete or misconfigured throttling policy. The model todo_app_rate_limits contains administrative configuration for throttling (code, name, description, scope, category, window_seconds, max_requests, burst_size, sliding_window, enabled) plus lifecycle columns (created_at, updated_at, deleted_at). Deletion should mark the record as no longer active by populating deleted_at, preserving historical references from counters (todo_app_user_rate_counters and todo_app_ip_rate_counters). Implement validation so that active enforcement can be disabled (enabled=false) prior to removal when required by policy.","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}","method":"delete","summary":"Retire a rate limit policy (todo_app_rate_limits) by ID","description":"Remove a rate limit policy from administrative use by targeting its unique identifier in the todo_app_rate_limits table. The schema defines functional attributes including code (unique), scope (e.g., \"user\", \"ip\", \"global\"), category (e.g., \"read\", \"write\", \"auth\"), window_seconds, max_requests, burst_size, sliding_window, and an enabled flag used by enforcement. Lifecycle fields include created_at, updated_at, and a deleted_at timestamp.\n\nAccess to this operation is restricted to system administrators responsible for governance. It is designed to prevent accidental loss of operational history. Instead of physically removing the row, the provider should set the deleted_at timestamp to indicate the policy is retired. This approach preserves referential integrity and auditability for related counters in todo_app_user_rate_counters and todo_app_ip_rate_counters, which reference todo_app_rate_limits via foreign keys.\n\nFrom a business rules perspective, administrators typically disable enforcement (enabled=false) before retiring a policy to avoid abrupt changes in production. Providers may enforce preconditions such as rejecting removal when enabled=true. The operation should be idempotent: invoking it again on a record already marked as deleted has no additional effect beyond confirming the record remains retired.\n\nError handling includes: 1) returning a not-found style outcome when rateLimitId does not correspond to an existing, currently retained record; 2) conflict-style outcomes when policy constraints require disabling before retirement; and 3) authorization failures for non-admin actors.","parameters":[{"name":"rateLimitId","description":"Target rate limit policy identifier (todo_app_rate_limits.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"Search and paginate event type definitions stored in todo_app_event_types. This operation returns a filtered list of event taxonomy records used to classify domain events (e.g., \"todo.created\", \"todo.completed\"). The model contains fields: id, code (unique), name, description, active, created_at, updated_at. Supports rich querying for admin consoles including filtering by active flag, substring search on code/name/description, sorting, and pagination.","path":"/todoApp/systemAdmin/eventTypes","method":"patch","summary":"Search and paginate event type taxonomy (todo_app_event_types)","description":"Retrieve a filtered, paginated collection of event type definitions from the todo_app_event_types table. This table classifies business events with fields including code (globally unique), name, optional description, and an active flag indicating whether the type is currently in use. Timestamps created_at and updated_at support audit and ordering use-cases.\n\nThis operation targets administrative use. Security considerations require system administrator privileges to view and manage the taxonomy comprehensively. While the underlying data is not user-private, centralizing access in admin tooling avoids accidental operational drift.\n\nThe request body allows advanced filters: by active status, time ranges on created_at, free-text search across code/name/description, and sort controls (e.g., created_at desc by default, or code asc). Pagination parameters (page, pageSize) must be supported, aligning with business expectations (typical default 20; allowed 1–100). The response returns a page container with summary projections optimized for list views.\n\nError handling includes validation of pagination bounds, unsupported sort keys, and malformed search inputs. Related operations include POST /eventTypes to add a new type, GET /eventTypes/{eventTypeId} to view details, and administrative toggling via update endpoints (not part of this list).","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for event types","typeName":"ITodoAppEventType.IRequest"},"responseBody":{"description":"Paged collection of event type summaries matching the search criteria","typeName":"IPageITodoAppEventType.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"Fetch a single event type from todo_app_event_types by its identifier. Returns the complete event type record including code (unique), name, description, active, created_at, and updated_at for administrative inspection and management workflows.","path":"/todoApp/systemAdmin/eventTypes/{eventTypeId}","method":"get","summary":"Get event type details (todo_app_event_types) by ID","description":"Retrieve a detailed event type definition from the todo_app_event_types model using its primary key. The schema provides: id, code (unique and stable machine-readable identifier), name (human-readable), optional description, active flag indicating enablement, and timestamps created_at and updated_at.\n\nThis operation is typically used by administrative consoles to inspect a specific taxonomy entry selected from a list. Security policy limits access to system administrators managing event classification.\n\nValidation rules include confirming the identifier corresponds to an existing row. If the identifier is unknown, the provider should return a not-found style outcome without exposing unrelated data. This operation complements the list/search endpoint (PATCH /eventTypes) and the creation endpoint (POST /eventTypes), and would typically be paired with an update operation to change name, description, or active status when permitted by governance policies.","parameters":[{"name":"eventTypeId","description":"Target event type identifier (todo_app_event_types.id)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete event type record","typeName":"ITodoAppEventType"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"Create a new event type record in the todo_app_event_types table. Administrators define a stable code (unique), human-readable name, optional description, and active flag to control availability. The response returns the created record with timestamps (created_at, updated_at).","path":"/todoApp/systemAdmin/eventTypes","method":"post","summary":"Create a new event type (todo_app_event_types)","description":"Insert a new taxonomy entry into todo_app_event_types to classify business-domain events across the system. Fields include: code (unique, stable identifier such as \"todo.created\"), name (human-readable), optional description for administrative notes, active (boolean) to indicate whether the type is currently in use, and timestamps created_at/updated_at managed by the system.\n\nOnly system administrators are authorized to create new event types to maintain governance consistency. Providers should validate that the code is globally unique (per the schema's @@unique([code]) constraint) and that required fields (code, name, active) are present and well-formed. Optional description may be included for context.\n\nOn success, the operation returns the created event type record. Related operations include PATCH /eventTypes for searching and listing, GET /eventTypes/{eventTypeId} for detail retrieval, and a separate update endpoint (not listed here) to modify an existing record's attributes or toggle the active flag.","parameters":[],"requestBody":{"description":"Event type creation payload (code, name, optional description, active)","typeName":"ITodoAppEventType.ICreate"},"responseBody":{"description":"Created event type record","typeName":"ITodoAppEventType"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"Update an existing business event type in the Events domain. This operation targets the todo_app_event_types table (Prisma model) and allows administrators to modify mutable attributes such as name, description, and active status for the event taxonomy used to classify domain events (e.g., \"todo.created\"). The endpoint takes an eventTypeId (UUID) path parameter identifying the target row and accepts a JSON payload conforming to ITodoAppEventType.IUpdate. On success, it returns the updated ITodoAppEventType object so clients can reflect the change immediately. Validation must honor the model’s unique constraint on code and ensure coherent activation state management across dependent systems that reference event types (business events, counters, and metrics).","path":"/todoApp/systemAdmin/eventTypes/{eventTypeId}","method":"put","summary":"Update a single event type (todo_app_event_types) by ID.","description":"Purpose and overview: This operation updates a single record in the todo_app_event_types table, which the schema describes as the “Business event taxonomy for todoApp. Each record defines a stable code and human-readable name for a class of events (e.g., \"todo.created\", \"todo.completed\").” Administrators use this endpoint to maintain display names, descriptions, and enablement flags as the product evolves, without rewriting historical logs.\n\nSecurity and permissions: Only privileged users should mutate the event taxonomy. Enforce authorization for systemAdmin role. Normal end users (todoUser) and unauthenticated visitors (guestVisitor) are not permitted to update event types.\n\nRelationship to underlying entities: The todo_app_business_events model references todo_app_event_types through todo_app_event_type_id for classification, and derived snapshots in todo_app_event_counters_daily and todo_app_aggregated_metrics also depend on these definitions for grouping and reporting. Updates to attributes like name, description, or active influence how future events are emitted and presented, but should not change historical rows already captured.\n\nValidation rules and business logic: The prisma model enforces a unique index on code (@@unique([code])). If the update attempts to change code, it must remain globally unique and stable; in many deployments, code changes may be disallowed by policy to preserve stable identifiers. The active boolean indicates whether the type is enabled for emission; toggling it to false should prevent new events of that type from being produced by upstream services while leaving existing data intact. Required fields include name and code; optional fields include description. Ensure the eventTypeId is a well-formed UUID and corresponds to an existing record (the model has no deleted_at column).\n\nRelated operations: Administrators may use GET retrieval or list/search operations for event types (not defined here) to find the appropriate identifier. For analytics and audit, related read-only endpoints on business events and counters reflect the impact of changes to event types. This update operation pairs with the erase endpoint on the same path when a type must be removed.\n\nExpected behavior and error handling: The service returns the updated ITodoAppEventType on success. Return validation errors for uniqueness conflicts (code) or missing required fields. Return authorization errors for insufficient privileges and not-found errors when eventTypeId does not exist. Concurrency control should detect lost updates using updated_at semantics implemented in service logic.","parameters":[{"name":"eventTypeId","description":"Unique identifier of the event type to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the event type","typeName":"ITodoAppEventType.IUpdate"},"responseBody":{"description":"Updated event type record","typeName":"ITodoAppEventType"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"Permanently remove an event type from the Events taxonomy. This operation targets the todo_app_event_types table. It accepts an eventTypeId (UUID) path parameter, performs a hard deletion according to the schema (no deleted_at column exists on todo_app_event_types), and returns no body upon success. Implementors must carefully consider referential integrity because todo_app_business_events rows reference event types. In the provided Prisma schema, that relation is configured with onDelete: Cascade on todo_app_business_events.eventType, meaning removal of an event type may also remove dependent business event rows. This operation is restricted to administrators and should typically be used only when there are no dependent business events or under explicit governed exceptions.","path":"/todoApp/systemAdmin/eventTypes/{eventTypeId}","method":"delete","summary":"Erase an event type (todo_app_event_types) by ID; permanently removes the record.","description":"Purpose and overview: This operation deletes a record from todo_app_event_types, the model described as the \"Business event taxonomy for todoApp.\" Removing an event type should be rare and reserved for governance scenarios (e.g., erroneous creation during testing or decommissioning a type that must not exist).\n\nSecurity and permissions: Only system administrators are allowed to perform deletion. This is a sensitive operation because the event taxonomy underpins auditing and analytics classification.\n\nRelationship to underlying database entities: todo_app_business_events references todo_app_event_types via todo_app_event_type_id. In the given Prisma schema, the eventType relation uses onDelete: Cascade, which can propagate deletion to dependent business event rows. To preserve audit/analytics history, implement a service-layer guard to block deletion when dependent events exist unless an explicit governed override is provided; otherwise prefer deactivation (active=false) via the update endpoint.\n\nValidation rules and business logic: The path parameter eventTypeId must be a UUID corresponding to an existing row. Since the model has no deleted_at column, deletion removes the row completely. If business policy requires retention of historical records, administrators should disable the type instead of deleting it.\n\nRelated operations: Prefer the update endpoint on the same path for non-destructive changes such as toggling active or editing names/descriptions. Use read-only business event endpoints to verify the impact of changes to the taxonomy.\n\nExpected behavior and error handling: Return success with no response body when deletion completes. Return not-found for unknown eventTypeId and authorization errors for insufficient permissions. If application-level safeguards prevent deletion due to existing dependencies, return a conflict or policy-violation response with remediation guidance.","parameters":[{"name":"eventTypeId","description":"Unique identifier of the event type to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"Retrieve a filtered, paginated, and sorted collection of business events from the todo_app_business_events table. This search endpoint supports complex query criteria (time ranges, actor/target filtering, event-type classification, source/system, free-text search on message, and client metadata). It uses a PATCH method with a request body of ITodoAppBusinessEvent.IRequest and returns a paginated response IPageITodoAppBusinessEvent. This is a read-only operation intended for administrative analytics, auditing, and diagnostics.","path":"/todoApp/systemAdmin/businessEvents","method":"patch","summary":"Search and paginate business events (todo_app_business_events) with filters and sorting.","description":"Purpose and overview: The todo_app_business_events model is described as an \"Append-only business event log capturing user-facing domain events across todoApp.\" Each record references a classification in todo_app_event_types and can optionally reference an actor (todo_app_users), a target todo (todo_app_todos), and a session (todo_app_sessions). This endpoint searches that log with advanced filters to support governance, incident investigation, and operational analytics.\n\nSecurity and permissions: Business event logs often contain sensitive metadata (IP, user agent, and actor linkage). Restrict access to systemAdmin role. End users should not be able to read these records.\n\nRelationship to underlying entities: Each event has foreign keys todo_app_event_type_id, todo_app_user_id, todo_app_todo_id, and todo_app_session_id. Queries commonly filter by these, by occurred_at ranges, and by source system. The schema defines helpful indexes, including GIN trigram indexes on message for efficient substring search and indexes on occurred_at and various foreign keys for time-window analytics.\n\nValidation rules and business logic: The request body (ITodoAppBusinessEvent.IRequest) should support pagination (page, pageSize), sorting (e.g., by occurred_at desc), and filter criteria such as eventTypeId(s), actor userId(s), target todoId(s), sessionId(s), source, ip, and time windows (occurred_at from/to). Free-text search should apply case-insensitive substring matching against message, consistent with schema’s trigram index. Implement rate limiting per policy to protect the service.\n\nRelated operations: Use GET /businessEvents/{businessEventId} to retrieve a single event’s full details after discovering it in search results. Administrators may also consult daily counters or KPI materialized views through separate analytical endpoints (not defined here).\n\nExpected behavior and error handling: On success, return IPageITodoAppBusinessEvent containing pagination metadata and an array of ITodoAppBusinessEvent records. Return validation errors for malformed UUIDs, out-of-range pagination values, or unsupported sort keys. Ensure consistent timezone handling (occurred_at is timestamptz).","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting for business events","typeName":"ITodoAppBusinessEvent.IRequest"},"responseBody":{"description":"Paginated result set of business events matching the filters","typeName":"IPageITodoAppBusinessEvent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"Fetch a single business event by its identifier from the todo_app_business_events table. The endpoint takes a businessEventId (UUID) path parameter and returns the detailed ITodoAppBusinessEvent record, including classification (event type), optional actor/target references, timestamps, message, source, and client metadata. This read-only operation supports administrative auditing and diagnostics.","path":"/todoApp/systemAdmin/businessEvents/{businessEventId}","method":"get","summary":"Get a single business event (todo_app_business_events) by ID.","description":"Purpose and overview: This GET operation retrieves a single append-only record from todo_app_business_events, the schema that captures domain events with references to event types, users, todos, and sessions. It is used when an administrator needs to inspect a specific occurrence identified via search or from a related workflow.\n\nSecurity and permissions: Access should be limited to systemAdmin role due to potentially sensitive content such as IP addresses and user agent strings and the association to specific user identities.\n\nRelationship to underlying entities: The record may reference todo_app_event_types (todo_app_event_type_id), todo_app_users (todo_app_user_id), todo_app_todos (todo_app_todo_id), and todo_app_sessions (todo_app_session_id). These relationships enable cross-navigation in administrative consoles and support traceability.\n\nValidation rules and business logic: Validate businessEventId as a UUID and ensure the target exists. As events are append-only, there is no mutation or deletion through this endpoint. Ensure consistent timezone presentation for occurred_at (timestamptz) in client applications.\n\nRelated operations: Combine with the PATCH /businessEvents search endpoint for discovery. Additional analytical endpoints such as daily counters and KPI views are typically used for trend analysis (not part of this API set).\n\nExpected behavior and error handling: Return the ITodoAppBusinessEvent record on success. Return not-found for unknown identifiers and authorization errors for insufficient privileges. Avoid exposing unrelated personal data in error details.","parameters":[{"name":"businessEventId","description":"Unique identifier of the business event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed business event record","typeName":"ITodoAppBusinessEvent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"Search and retrieve a paginated collection of daily event counters from the Prisma table todo_app_event_counters_daily. This read-only administrative endpoint supports advanced filtering, date-range querying over bucket_date, and sorting across dimensions such as event type (todo_app_event_type_id), actor user (todo_app_user_id), and target todo (todo_app_todo_id). The request body follows ITodoAppEventCountersDaily.IRequest and the response returns a paginated IPageITodoAppEventCountersDaily.\n\nThe todo_app_event_counters_daily model stores per-day counts (count) keyed by bucket_date with optional scoping to a user and/or todo, and references todo_app_event_types for classification. It includes created_at and updated_at timestamps and a uniqueness constraint over bucket_date and the dimension set.\n\nAccess is restricted to systemAdmin. The endpoint is strictly read-only and intended for analytics dashboards and KPI exploration without exposing raw event data.","path":"/todoApp/systemAdmin/eventCountersDaily","method":"patch","summary":"Search list of daily event counters (todo_app_event_counters_daily) with filters and pagination","description":"Retrieve daily event counter snapshots to support KPI and analytics workflows. The underlying Prisma model todo_app_event_counters_daily records per-day counts (count) for a specific event type (todo_app_event_type_id) and optional scopes of actor user (todo_app_user_id) and target todo (todo_app_todo_id). Each row is keyed by a bucket_date that represents the calendar day bucket start and is accompanied by created_at and updated_at timestamps. This endpoint is designed for complex querying over these dimensions without exposing raw event data.\n\nSecurity and permissions: Access to system metrics is restricted to administrative users because it may reveal operational characteristics of the service. Callers must have the systemAdmin role. The endpoint is read-only.\n\nEntity relationships: Records relate to todo_app_event_types (event classification), and optionally to todo_app_users (actor) and todo_app_todos (target). These relations enable filtering such as “all counts of a given event type within a date range” or “counts for a specific user or todo.” The model enforces uniqueness across bucket_date + event type + optional dimensions, ensuring each calendar day has at most one counter row per dimension set.\n\nValidation and business logic: Typical filters include date ranges over bucket_date, equality filters for todo_app_event_type_id, todo_app_user_id, and todo_app_todo_id, and sorting (e.g., by bucket_date descending, then count). Pagination should default to reasonable page sizes aligned with administrative consoles.\n\nRelated operations: Use GET /todoApp/systemAdmin/eventCountersDaily/{eventCounterDailyId} to fetch a single counter row when an identifier is known. For trend analysis across multiple days, clients typically iterate over pages while applying a bucket_date range filter.\n\nError handling: When filters reference non-existent IDs (event type, user, todo), the query will yield empty results rather than an error. Invalid date formats in the request should be rejected with clear messages describing the expected ISO-8601 date/time representation.","parameters":[],"requestBody":{"description":"Search, filter, sort, and paginate daily counters","typeName":"ITodoAppEventCountersDaily.IRequest"},"responseBody":{"description":"Paginated collection of daily event counters with metadata","typeName":"IPageITodoAppEventCountersDaily"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"Fetch a single daily event counter row by its primary key from the Prisma table todo_app_event_counters_daily. Returns the full ITodoAppEventCountersDaily entity, including dimensions (todo_app_event_type_id, todo_app_user_id, todo_app_todo_id), bucket_date, and the aggregated count value. Access is restricted to administrators and is read-only.","path":"/todoApp/systemAdmin/eventCountersDaily/{eventCounterDailyId}","method":"get","summary":"Get one daily event counter (todo_app_event_counters_daily) by ID","description":"This operation retrieves one snapshot record from todo_app_event_counters_daily using its id (UUID). The model stores summarized counts (count) for a given event type and optional user/todo scopes on a bucket_date boundary, along with created_at and updated_at timestamps for auditing the snapshot lifecycle.\n\nSecurity: Access is restricted to administrators (systemAdmin) since the data constitutes internal operational metrics. The endpoint is read-only.\n\nDatabase relationships: The row references todo_app_event_types to classify what is being counted and may reference todo_app_users and todo_app_todos to scope the count. These foreign keys are used for filtering in the list endpoint and for interpreting the dimensions of this specific counter row.\n\nBehavior and errors: If the id is not found, the service returns a not-found response. No request body is required. Use this detail endpoint in conjunction with PATCH /todoApp/systemAdmin/eventCountersDaily for discovery and listing workflows.","parameters":[{"name":"eventCounterDailyId","description":"Unique identifier (UUID) of the daily event counter row to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed daily event counter entity","typeName":"ITodoAppEventCountersDaily"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"Search and retrieve a paginated collection of audit records from the Prisma table todo_app_audit_logs. This administrative endpoint exposes filtering by actor_user_id, target_user_id, action, resource_type, resource_id, success, IP/user-agent, and time ranges. It returns audit log summaries suitable for review and incident investigations using ITodoAppAuditLog.IRequest for queries and IPageITodoAppAuditLog.ISummary for results.","path":"/todoApp/systemAdmin/auditLogs","method":"patch","summary":"Search audit logs (todo_app_audit_logs) with filters, sorting, and pagination","description":"This operation queries audit entries recorded in the Prisma model todo_app_audit_logs. The table captures security-relevant actions with fields including actor_user_id (required), optional target_user_id, action (business action key), resource_type, resource_id, success (boolean), client context (ip, user_agent), and created_at/updated_at timestamps. The purpose is to enable governance reviews without exposing private todo text values, consistent with the schema’s design notes.\n\nSecurity and permissions: Audit data is highly sensitive and restricted to systemAdmin users. Results may be further filtered or masked according to policy when necessary (e.g., regional handling of IPs). The endpoint is read-only.\n\nEntity relationships: actor_user_id and target_user_id reference todo_app_users. These relations support filters like “all actions by an administrator in a time window” or “all actions affecting a particular account.” The audit log does not store private todo content; it only references resource_type and resource_id for linkage in incident analysis.\n\nValidation and business logic: The request supports equality filtering on identifiers (actor_user_id, target_user_id), exact or prefix matching on action and resource_type as allowed by policy, boolean filtering on success, and time-range filters over created_at. Sorting commonly uses created_at descending for latest-first review. Pagination defaults should align with administrative consoles (e.g., 20–100 per page).\n\nRelated operations: Use GET /todoApp/systemAdmin/auditLogs/{auditLogId} for fetching a specific audit record once identified. Combine with user management views to correlate sequences of actions when investigating events.\n\nError handling: Invalid UUID formats or unsupported filter combinations should be rejected with clear validation messages. Non-existent references simply result in empty result sets.","parameters":[],"requestBody":{"description":"Filtering and pagination parameters for audit log search","typeName":"ITodoAppAuditLog.IRequest"},"responseBody":{"description":"Paginated audit log summaries matching the search criteria","typeName":"IPageITodoAppAuditLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"Retrieve a single audit log entry by primary key from the Prisma table todo_app_audit_logs. Returns the detailed ITodoAppAuditLog entity including actor/target user references, business action, resource context, outcome, and client metadata. Access is restricted to administrators and is read-only.","path":"/todoApp/systemAdmin/auditLogs/{auditLogId}","method":"get","summary":"Get one audit log entry (todo_app_audit_logs) by ID","description":"This operation fetches an audit record from todo_app_audit_logs using its id (UUID). Each audit row includes actor_user_id (required), optional target_user_id, action, resource_type, resource_id, success flag, and optional client context such as ip and user_agent, along with created_at and updated_at timestamps. The audit log intentionally avoids storing private todo content, focusing on security-relevant metadata as described in the schema comments.\n\nSecurity: Access is limited to systemAdmin due to the sensitivity of audit trails. The operation is read-only and intended for investigative and compliance workflows.\n\nRelationships and interpretation: actor_user_id and target_user_id link to todo_app_users. resource_type and resource_id allow correlating this entry with domain entities. Implementations commonly provide navigation to related user records where permitted by policy.\n\nBehavior and errors: If the auditLogId does not correspond to an existing row, the service should return not found. No request body is required.","parameters":[{"name":"auditLogId","description":"Unique identifier (UUID) of the audit log entry to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed audit log entity","typeName":"ITodoAppAuditLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"List/search administrative action history records from the todo_app_admin_actions table. This operation provides a paginated, filterable view for system administrators to review privileged operations performed in the system. It supports filtering by administrator actor, optional target user, action key, success flag, idempotency key, creation time ranges, and text search over reason/notes. Results are ordered and paginated for operational consoles.","description":"Retrieve a filtered and paginated collection of administrative action history from the todo_app_admin_actions table. The Prisma schema describes this model as “Historical records of privileged administrative operations performed by system administrators. Captures who acted, optional target user, the administrative action, stated reason, and operational notes. Does not store private todo content. Supports governance reviews and incident response. Uses restrictive/set-null deletes on FKs to preserve history.” Fields include admin_user_id (administrator actor), target_user_id (optional), action (administrative action key), reason and notes (human-readable context), success (boolean outcome), idempotency_key (optional uniqueness guard), and timestamps (created_at, updated_at).\n\nSecurity and permissions: Access to this endpoint is restricted to users with the systemAdmin role. These records may reveal sensitive governance activity and must not be exposed to regular members. Implementations should also apply audit logging for viewing sensitive records when appropriate.\n\nDatabase relationships: Each record references the administrator actor via todo_app_users (admin_user_id) and optionally a target user (target_user_id). The list operation must never join or expose private Todo content; it focuses solely on administrative actions metadata as defined in the schema comments.\n\nValidation and business logic: The request body supports filters such as admin_user_id, target_user_id, action (exact or partial match), success, creation time window (created_at from/to), and free-text search over reason/notes consistent with GIN trigram indexes noted in the schema. Pagination parameters include page, pageSize (1–100), and sort options by created_at or action. The service should cap page sizes to the configured maximum and apply default ordering by created_at descending if unspecified.\n\nRelated operations: Use this PATCH /adminActions endpoint to find candidate records; use GET /adminActions/{adminActionId} for detailed inspection of a specific administrative action. Error handling should return clear messages for invalid filters (e.g., malformed UUIDs, out-of-range page sizes) and must not leak information about users outside authorized scope.","summary":"Search and retrieve paginated administrative actions (todo_app_admin_actions) for governance review.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination parameters for administrative actions search.","typeName":"ITodoAppAdminAction.IRequest"},"responseBody":{"description":"Paginated list of administrative action summaries matching the search criteria.","typeName":"IPageITodoAppAdminAction.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/todoApp/systemAdmin/adminActions","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a single administrative action record from the todo_app_admin_actions table by its identifier. Provides full details needed for governance and incident reviews, including actor, optional target, action, reason, notes, success flag, idempotency key, and timestamps.","description":"This operation returns the detailed administrative action entry identified by adminActionId from the todo_app_admin_actions table. Per the Prisma schema description, this model stores privileged administrative operations with references to the administrator actor (admin_user_id) and an optional target user (target_user_id), the action key, human-readable reason and notes, success boolean, optional idempotency_key, and creation/update timestamps.\n\nSecurity and permissions: Only systemAdmin users are authorized to access this endpoint. The response must include only the fields defined by the model and avoid revealing private Todo content. Access to identities referenced by admin_user_id or target_user_id should respect account lifecycle policies.\n\nEntity relationships: The record links to todo_app_users for both the administrator actor and (optionally) the target user. Implementations may expand or reference related user display information via authorized joins, but must ensure privacy rules are upheld as documented.\n\nValidation and errors: The adminActionId path parameter must be a valid UUID corresponding to an existing record. If the record is not found or the caller lacks permission, the service should return an appropriate not-found/forbidden response without disclosing sensitive internal details. This detail endpoint complements the list/search operation PATCH /adminActions.","summary":"Get details of one administrative action (todo_app_admin_actions) by ID.","parameters":[{"name":"adminActionId","description":"Unique identifier of the administrative action to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed administrative action entity.","typeName":"ITodoAppAdminAction"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/todoApp/systemAdmin/adminActions/{adminActionId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"List/search account lifecycle transition records from the todo_app_account_status_changes table. This endpoint exposes a paginated, filterable view of status transitions for user accounts including previous_status, new_status, actor attributions, and rationale for governance oversight.","description":"Retrieve a filtered and paginated collection of user account status transitions from the todo_app_account_status_changes table. The Prisma schema describes this model as “Point-in-time records of account lifecycle changes for users (e.g., pending_verification → active, active → suspended, suspended → active). Provides a complete historical trail for governance and incident investigation. The admin attribution is optional for system-triggered transitions. No private todo text is stored here.” Key fields include target_user_id (the subject account), admin_user_id (optional administrator actor), previous_status, new_status, business_reason, has_effect, and timestamps (created_at, updated_at).\n\nSecurity and permissions: Access is restricted to users with the systemAdmin role. Records may reveal sensitive governance events and must not be exposed to non-admin users.\n\nDatabase relationships: Each row references the subject account (target_user_id) and optionally the administrator responsible (admin_user_id), both from todo_app_users. The operation must focus strictly on lifecycle metadata and avoid exposure of unrelated user-private content.\n\nValidation and business logic: The request body supports filters such as target_user_id, admin_user_id, previous_status, new_status, has_effect, creation time window (created_at from/to), and free-text search over business_reason consistent with the schema’s trigram index. Pagination includes page and pageSize (1–100) and sorting by created_at or new_status. Default ordering is created_at descending when unspecified.\n\nRelated operations: Use this PATCH /accountStatusChanges endpoint to discover events of interest; use GET /accountStatusChanges/{accountStatusChangeId} for the specific record. Invalid filter values or page sizes should yield clear validation errors without disclosing internal state.","summary":"Search and retrieve paginated account status changes (todo_app_account_status_changes) for governance.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination parameters for account status change search.","typeName":"ITodoAppAccountStatusChange.IRequest"},"responseBody":{"description":"Paginated list of account status change summaries matching the search.","typeName":"IPageITodoAppAccountStatusChange.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/todoApp/systemAdmin/accountStatusChanges","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a single account status change record from the todo_app_account_status_changes table by its identifier. Returns full details including target account, optional administrator actor, previous/new status, business_reason, has_effect, and timestamps for audit and governance uses.","description":"This operation fetches the account lifecycle change record identified by accountStatusChangeId from the todo_app_account_status_changes table. The Prisma schema explains that this model records status transitions such as pending_verification → active, active → suspended, and suspended → active. It captures the target user (target_user_id), optional admin actor (admin_user_id), previous_status, new_status, business_reason (optional), has_effect (indicating if the transition changed the stored status), and the creation/update timestamps.\n\nSecurity and permissions: Only users with the systemAdmin role may access this endpoint. Responses must avoid including any private Todo content and remain limited to lifecycle metadata defined by the schema.\n\nEntity relationships: The record references two users via todo_app_users: the subject account (target_user_id) and optionally the administrator who effected the change (admin_user_id). Implementations may include authorized display metadata for these users while respecting privacy and access rules.\n\nValidation and errors: The accountStatusChangeId must be a valid UUID. If the record does not exist or access is unauthorized, return appropriate not-found/forbidden errors without leaking sensitive details. This endpoint is typically reached after narrowing results with PATCH /accountStatusChanges.","summary":"Get details of one account status change (todo_app_account_status_changes) by ID.","parameters":[{"name":"accountStatusChangeId","description":"Unique identifier of the account status change to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed account status change entity.","typeName":"ITodoAppAccountStatusChange"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/todoApp/systemAdmin/accountStatusChanges/{accountStatusChangeId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a filtered, paginated list of aggregated metrics from the Prisma model todo_app_aggregated_metrics. This endpoint supports complex queries over metric_key, granularity, time windows (period_start/period_end), optional dimensions (todo_app_user_id, todo_app_event_type_id), and sorting/pagination. The operation is read-only and designed for system administrators to observe historical KPI snapshots, not to create or modify them. DTOs follow the TodoApp service prefix: ITodoAppAggregatedMetric.IRequest for request, and IPageITodoAppAggregatedMetric.ISummary for the paginated response.","authorizationType":null,"description":"This operation returns a paginated list of historical aggregated metric snapshots stored in the todo_app_aggregated_metrics table. As documented in the Prisma schema, each row represents a metric value (value with unit) over a defined time window (period_start to period_end) and includes a metric_key and granularity (e.g., hour/day/week/month). Optional foreign keys todo_app_user_id and todo_app_event_type_id allow scoping the snapshot to a particular user or event type. This endpoint is intended for observability and KPI dashboards and is strictly read-only.\n\nAccess is restricted to authorized administrators because aggregated performance and usage metrics can reveal sensitive operational patterns. The endpoint does not expose private todo content; it only returns numeric values and identifying references per the schema. Authorization is expressed at the endpoint level via the systemAdmin role, with additional checks performed in business logic as needed.\n\nThe response includes pagination, and clients can filter by metric_key, granularity, and time window using the request body (ITodoAppAggregatedMetric.IRequest). Consumers can also filter by optional dimensions (todo_app_user_id, todo_app_event_type_id). For efficient querying and search, the model defines indexes on period_start/period_end, metric_key, user/event dimensions, and trigram search on metric_key. Records where deleted_at is set should be treated as archived and excluded by default. Related tables include todo_app_event_types and todo_app_users, referenced by optional foreign keys to provide dimensional context.\n\nThis operation is typically used together with GET /todoApp/systemAdmin/aggregatedMetrics/{aggregatedMetricId} for detail retrieval. Clients should first narrow the list through this search endpoint and then use the detail endpoint to fetch a specific snapshot by its identifier.","summary":"Search and paginate aggregated metrics (todo_app_aggregated_metrics)","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for aggregated metrics.","typeName":"ITodoAppAggregatedMetric.IRequest"},"responseBody":{"description":"Paginated results of aggregated metric summaries matching the criteria.","typeName":"IPageITodoAppAggregatedMetric.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/aggregatedMetrics","method":"patch"},{"specification":"Retrieve a single aggregated metric snapshot by its identifier from the Prisma model todo_app_aggregated_metrics. The endpoint returns the complete ITodoAppAggregatedMetric object for administrators to inspect a specific KPI snapshot. Read-only access; no modification is performed.","authorizationType":null,"description":"This operation fetches a single record from todo_app_aggregated_metrics using its primary key id (UUID). Each row represents an aggregated metric with fields including metric_key, granularity, period_start, period_end, value, unit, and optional dimensions todo_app_user_id and todo_app_event_type_id, as described in the Prisma schema comments. The record also contains created_at and updated_at timestamps for lineage and an optional deleted_at that indicates archival.\n\nSecurity considerations: access is restricted to administrative users with the systemAdmin role because operational metrics can reveal sensitive service characteristics. The endpoint does not return private todo text or user credentials—only the numeric metric snapshot and dimension identifiers. If the requested id does not exist or corresponds to a record considered archived (deleted_at not null), the implementation should return a not found response as appropriate.\n\nUse this endpoint after discovering candidate records via PATCH /todoApp/systemAdmin/aggregatedMetrics. It is optimized for detail inspection of a single metric snapshot, helping administrators trace or validate KPI computations at a precise time window.","summary":"Get details of a single aggregated metric (todo_app_aggregated_metrics) by ID","parameters":[{"name":"aggregatedMetricId","description":"Identifier of the aggregated metric snapshot (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed aggregated metric snapshot.","typeName":"ITodoAppAggregatedMetric"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/aggregatedMetrics/{aggregatedMetricId}","method":"get"},{"specification":"Search and retrieve paginated daily statistics from the Prisma materialized view mv_todo_app_daily_stats. This endpoint supports filtering by stats_date range and sorting/pagination. The view provides read-optimized daily counts and ratios (todos_created, todos_completed, active_users, completion_ratio) along with refreshed_at. DTOs use the TodoApp service prefix: ITodoAppDailyStat.IRequest for request and IPageITodoAppDailyStat.ISummary for response.","authorizationType":null,"description":"This operation returns a paginated list of daily statistics from mv_todo_app_daily_stats. Per the Prisma schema description, each row is a read-optimized, denormalized snapshot for a calendar date (stats_date) that includes todos_created, todos_completed, active_users, and a computed completion_ratio, as well as refreshed_at timestamps indicating when the materialized data was last refreshed. The rows also include created_at and updated_at metadata used by the materialized cache layer and an optional deleted_at that indicates an archived row in the cache.\n\nThe endpoint is read-only and intended for administrative analytics and dashboards. Because daily rollups can disclose service usage patterns, access is restricted to the systemAdmin role. The request body (ITodoAppDailyStat.IRequest) supports filtering by date ranges and sorting, in addition to standard pagination controls. Implementations should exclude rows where deleted_at is set from normal responses to maintain an accurate active view.\n\nThis endpoint is typically used with GET /todoApp/systemAdmin/dailyStats/{dailyStatId} for detail retrieval of a specific daily statistic row. Administrators first narrow down dates and criteria via this search, and then use the detail endpoint to inspect a single row’s metrics and refresh metadata.","summary":"Search and paginate daily stats (mv_todo_app_daily_stats)","parameters":[],"requestBody":{"description":"Search filters, date-range, sorting, and pagination for daily statistics.","typeName":"ITodoAppDailyStat.IRequest"},"responseBody":{"description":"Paginated list of daily statistics summaries.","typeName":"IPageITodoAppDailyStat.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/dailyStats","method":"patch"},{"specification":"Retrieve a single daily statistic row by its identifier from the Prisma materialized view mv_todo_app_daily_stats. Returns the full ITodoAppDailyStat object for administrative inspection. Read-only access.","authorizationType":null,"description":"This operation fetches one row from mv_todo_app_daily_stats by its primary key id (UUID). The view stores per-day rollups with fields such as stats_date, todos_created, todos_completed, active_users, completion_ratio, and refreshed_at, along with created_at and updated_at metadata. The model is read-only and optimized for analytics; it does not expose any private todo content.\n\nAccess is limited to users with the systemAdmin role, as daily-level activity and ratios can reveal operational usage. If the id does not match an existing or active row (e.g., a row with deleted_at set is excluded), the implementation should respond with not found behavior according to the application’s conventions.\n\nUse in combination with PATCH /todoApp/systemAdmin/dailyStats to discover candidate rows, then GET /todoApp/systemAdmin/dailyStats/{dailyStatId} to inspect a particular day’s metrics and refresh information in detail.","summary":"Get details of a single daily stat (mv_todo_app_daily_stats) by ID","parameters":[{"name":"dailyStatId","description":"Identifier of the daily statistics row (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed daily statistics record.","typeName":"ITodoAppDailyStat"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/dailyStats/{dailyStatId}","method":"get"},{"specification":"Provide a read-only, paginated search endpoint over KPI window snapshots stored in the Prisma table mv_todo_app_kpi_counters. This operation is intended for administrative dashboards and SLO monitoring to inspect summarized metrics for a given time window. It must support filtering (e.g., by window_start/window_end ranges), sorting (commonly by window_end descending), and pagination. Results expose derived counters such as todos_created, todos_completed, active_users, and optional latency aggregates (avg_time_to_complete_hours, p95_completion_time_hours). The endpoint operates strictly on the materialized view mv_todo_app_kpi_counters and does not modify data.","description":"Retrieve KPI counter windows for administrative insight from the Prisma table mv_todo_app_kpi_counters. According to the schema comments, this materialized view contains read-optimized, denormalized indicators over sliding or fixed windows with fields including window_start, window_end, todos_created, todos_completed, active_users, and optionally avg_time_to_complete_hours and p95_completion_time_hours. These rows are refreshed from base sources like todo_app_aggregated_metrics and are designed for monitoring dashboards rather than transactional use.\n\nSecurity and authorization align with the business requirements stating that aggregated service metrics are accessible to administrators, not routine end users. Therefore, only systemAdmin should invoke this endpoint. The payload must not expose private Todo text; only numeric counts and high-level indicators are returned. Because the underlying table is read-only, no creation, update, or deletion is allowed through this API.\n\nFrom a data relationship perspective, mv_todo_app_kpi_counters is derived from non-PII sources such as aggregated metrics and event streams, preserving historical KPI snapshots. Typical validation includes ensuring a valid chronological range (window_start < window_end) when provided, and limiting page size to administrator-configured bounds. Errors are returned for invalid time ranges or unsupported sort keys. Related endpoints include the detail retrieval GET /todoApp/systemAdmin/kpiCounters/{kpiCounterId} for fetching a single snapshot row by its identifier.","summary":"Search KPI window snapshots from Prisma table mv_todo_app_kpi_counters (admin-only).","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for KPI window snapshots (e.g., window range, sort, page).","typeName":"ITodoAppKpiCounter.IRequest"},"responseBody":{"description":"Paginated collection of KPI counter windows matching the input criteria.","typeName":"IPageITodoAppKpiCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/kpiCounters","method":"patch"},{"specification":"Provide a read-only detail retrieval endpoint for a single KPI window snapshot stored in Prisma table mv_todo_app_kpi_counters. The operation fetches a specific record by its primary key (id: UUID) to display exact KPI values (e.g., todos_created, todos_completed, active_users, avg_time_to_complete_hours, p95_completion_time_hours) and the represented time window (window_start, window_end).","description":"Return a single KPI counter window row from mv_todo_app_kpi_counters by its identifier. Per the Prisma schema, each row captures metrics for a defined window with fields like window_start, window_end, todos_created, todos_completed, active_users, and optional latency aggregates. This endpoint is intended for administrative review where a specific KPI record needs inspection.\n\nAccess is restricted to systemAdmin per the business requirements for aggregated service metrics visibility. The endpoint is purely read-only against the materialized view and does not alter any underlying data. Expected validation includes checking that the provided identifier is a valid UUID and exists. If no row is found for the given id, the API should return a not-found response without exposing internal implementation details.\n\nThis detail retrieval complements the collection search at PATCH /todoApp/systemAdmin/kpiCounters, allowing dashboards to drill into a single KPI window when needed.","summary":"Get a single KPI window snapshot from Prisma table mv_todo_app_kpi_counters by ID (admin-only).","parameters":[{"name":"kpiCounterId","description":"Identifier of the KPI window snapshot row to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed KPI window snapshot corresponding to the provided identifier.","typeName":"ITodoAppKpiCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/kpiCounters/{kpiCounterId}","method":"get"},{"specification":"Provide a read-only, paginated search endpoint over audit records associated with a specific user, operating on the Prisma table todo_app_audit_logs. Results should include actor attribution, optional target attribution, action classification, resource context, and client metadata. The operation is designed for governance and security reviews to inspect activity related to the user specified by the path parameter.","description":"Retrieve audit trail entries related to the user identified by {userId} from the Prisma table todo_app_audit_logs. As documented in the schema, each audit record includes actor_user_id (required), optional target_user_id, a business action key (action), optional resource_type/resource_id, success flag, and client context (ip, user_agent) along with created_at. The endpoint should filter audit records where the specified user is the actor and/or the target, depending on the administrative query intent.\n\nSecurity considerations are paramount: audit logs are sensitive and primarily for governance. In alignment with the requirements, access is restricted to systemAdmin and should not expose private Todo content. The endpoint supports pagination, search over action/resource fields, time-range filtering (e.g., by created_at), success-state filtering, and sorting (commonly by created_at descending).\n\nFrom a relational perspective, the records reference todo_app_users for actor and target and may relate logically to other entities via resource_type/resource_id without directly embedding their content. Validation rules include enforcing a valid UUID for the path userId and ensuring pagination limits remain within administrative policy. This endpoint pairs with other administrative audit views and complements KPI/metrics endpoints for a holistic operational picture.","summary":"Search audit logs (todo_app_audit_logs) for a specific user by path userId (admin-only).","parameters":[{"name":"userId","description":"Target user's UUID to scope audit log retrieval (actor and/or target).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter (e.g., date range, action, success), sort, and pagination parameters for audit logs.","typeName":"ITodoAppAuditLog.IRequest"},"responseBody":{"description":"Paginated set of audit log entries associated with the specified user.","typeName":"IPageITodoAppAuditLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/auditLogs","method":"patch"},{"specification":"Provide a read-only, paginated search endpoint over privileged administrative actions linked to a specific user, operating on the Prisma table todo_app_admin_actions. This endpoint supports governance workflows to review administrative interventions affecting the user identified by the path parameter (e.g., suspend/reactivate account, revoke sessions).","description":"List administrative action records scoped to the user identified by {userId} from the Prisma table todo_app_admin_actions. The schema describes each record with admin_user_id (administrator actor), optional target_user_id (the affected user), action key, reason and notes, success flag, optional idempotency_key, and timestamps. This endpoint enables governance reviews to understand what administrative operations have been performed that involve the specified user as a target.\n\nGiven the sensitivity, access is restricted to systemAdmin. The endpoint supports pagination, filtering (e.g., by action, success, time ranges via created_at), text search across reason/notes (as indexed by trigrams), and sorting (commonly by created_at descending). Private Todo text is not stored in this table and therefore not exposed by this API.\n\nRelationally, records reference todo_app_users both for the admin actor and the optional target user. Validation includes verifying the path userId as a valid UUID and enforcing pagination/sorting constraints. This operation complements the audit logs endpoint and KPI/metrics endpoints, providing a complete administrative audit surface for the user.","summary":"Search administrative actions (todo_app_admin_actions) affecting a specific user (admin-only).","parameters":[{"name":"userId","description":"Target user's UUID used to scope administrative actions where the user is affected.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter (e.g., action, success, date range), sort, and pagination parameters for admin actions.","typeName":"ITodoAppAdminAction.IRequest"},"responseBody":{"description":"Paginated set of administrative action records related to the specified user.","typeName":"IPageITodoAppAdminAction"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/adminActions","method":"patch"},{"specification":"Search and retrieve a paginated list of account status transition records for a specific user. This operates on the Prisma table todo_app_account_status_changes, which records point-in-time transitions of a user account’s status (previous_status → new_status) with optional administrator attribution (admin_user_id), business_reason, and whether the transition had effect (has_effect). The endpoint supports filters such as date ranges (created_at), previous/new status values, has_effect flag, and filtering by the administrator who initiated the change. Results are ordered and paginated for governance views.","description":"Retrieve account status change history for a given user to support governance reviews, incident investigations, and audit reporting. According to the Prisma schema comments for todo_app_account_status_changes, each row captures a transition of a user account’s lifecycle status with fields including: target_user_id (required), optional admin_user_id when manually changed, previous_status, new_status, business_reason, has_effect (indicates if a stored transition actually changed state), and timestamps created_at/updated_at. This endpoint exposes a read/search surface for those records while enforcing access control consistent with administrative oversight.\n\nSecurity considerations: Only privileged operators should access another user’s status history. The authorization model therefore limits this operation to system administrators, aligning with the schema’s role assignment model (todo_app_systemadmins) and business requirements that administrators manage account governance. Client implementations should ensure that request filters are validated and that records where deleted_at is populated are excluded from normal responses unless the business logic explicitly permits retention queries.\n\nRelationship to underlying entities: Each status change references a subject account via target_user_id (FK to todo_app_users) and optionally an admin_user_id (FK to todo_app_users) when an administrator performed the change. No private todo content is exposed. Indexes on target_user_id and created_at enable efficient retrieval by user and timeline. The response returns records of the todo_app_account_status_changes entity. For cross-referencing administrative actions, see also historical admin operations in todo_app_admin_actions.\n\nValidation and business rules: Requests may include filters for time windows based on created_at, enumerated or free-form values for previous_status/new_status (as represented in the schema), boolean filtering on has_effect, and optional filtering by the administrator responsible. Sorting defaults to most recent first, and pagination follows standard page/size conventions defined in the IRequest DTO. This is a read-only operation; it does not create or modify status changes.\n\nRelated operations: Administrators may also review user governance artifacts through other audit endpoints (e.g., admin actions and audit logs) to build a complete timeline. For account-level summaries, admins would typically first locate the user (outside the scope of this operation) and then drill into status transitions using this route.\n\nExpected behavior and errors: If the specified userId is not a valid UUID or does not correspond to an existing user, the service should return a validation or not-found error. Authorization failures should return an appropriate access denial. When filters produce no matches, the response returns an empty page with pagination metadata.","summary":"Search account status changes for a user (todo_app_account_status_changes)","parameters":[{"name":"userId","description":"Target user’s ID whose account status changes are being queried","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, sort, and pagination criteria for querying account status changes","typeName":"ITodoAppAccountStatusChange.IRequest"},"responseBody":{"description":"Paginated list of account status change records for the specified user","typeName":"IPageITodoAppAccountStatusChange"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/users/{userId}/accountStatusChanges","method":"patch"},{"specification":"Search and retrieve paginated user rate counter windows across all users and policies. This operation reads from the Prisma table todo_app_user_rate_counters, which aggregates request counts per user for a specific rate limit policy (todo_app_rate_limit_id) over a fixed window (window_started_at → window_ends_at) with fields such as count, last_action_at, and optional blocked_until. Supports filtering by policy, user, window bounds, and whether counters are currently blocking requests. Intended for administrative observability and fairness governance.","description":"This endpoint provides a read/search interface over user rate limit counters stored in todo_app_user_rate_counters. The schema defines references to todo_app_rate_limits (rateLimit relation) and todo_app_users (user relation). Each record captures the counting window (window_started_at/window_ends_at), the current count, last_action_at, and an optional blocked_until timestamp indicating a cooldown in effect. Administrators use this view to investigate throttling behavior, analyze abuse patterns, and tune policies.\n\nSecurity and permissions: Because counters span multiple users and reveal operational throttling information, access is restricted to administrative personnel. The authorization role systemAdmin aligns with the governance role defined by the role-assignment models and business requirements. Implementations should default to excluding records marked for retention via deleted_at unless explicitly requested by policy.\n\nEntity relationships and query shape: Clients may filter by todo_app_rate_limit_id (linking to todo_app_rate_limits), todo_app_user_id (linking to todo_app_users), window date ranges, and whether blocked_until is present or extends beyond the current time. Sorting commonly uses window_started_at descending and then last_action_at. The response returns the ITodoAppUserRateCounter entities wrapped in a paginated structure.\n\nValidation and behavior: The IRequest payload may include pagination (page/size), sorting keys (e.g., window_started_at desc), and filters (policy id, user id, window overlap, blocked state). This is a read-only query operation; it does not mutate counters or policies. For policy definitions themselves, refer to todo_app_rate_limits in administrative configuration surfaces.\n\nRelated operations: To inspect a single counter window, use GET /userRateCounters/{userRateCounterId}. To filter counters for a specific policy, use PATCH /rateLimits/{rateLimitId}/userRateCounters.\n\nErrors and edge cases: Invalid identifiers (non-UUIDs) should return validation errors. Lack of authorization should produce an access denial. Empty result sets return an empty page with pagination metadata.","summary":"Search user rate counters (todo_app_user_rate_counters)","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for user rate counter windows","typeName":"ITodoAppUserRateCounter.IRequest"},"responseBody":{"description":"Paginated list of user rate counters matching the criteria","typeName":"IPageITodoAppUserRateCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/userRateCounters","method":"patch"},{"specification":"Retrieve a single user rate counter window by its identifier. Operates on todo_app_user_rate_counters and returns the full counter record including references to the associated rate limit policy (todo_app_rate_limit_id), the subject user (todo_app_user_id), counting window timestamps, counter value, last action time, and any current block (blocked_until). Intended for administrative diagnostics.","description":"Fetch a single counter record from todo_app_user_rate_counters by ID for precise inspection. The schema provides fields window_started_at, window_ends_at, count, last_action_at, and blocked_until, with relations to todo_app_rate_limits and todo_app_users. This read operation allows administrators to verify if a user is currently blocked under a policy, inspect counts within a window, and confirm the exact time boundaries used for enforcement.\n\nSecurity considerations: The information is sensitive operational metadata across users; therefore, access is restricted to the systemAdmin role. Results omit records that are flagged for retention via deleted_at unless governance tooling explicitly requests them.\n\nDatabase relationships: The counter relates to a single rate limit policy via todo_app_rate_limit_id and to a single user via todo_app_user_id. Additional indices on the table facilitate efficient lookups and time-window queries. This endpoint returns a single ITodoAppUserRateCounter entity.\n\nValidation and error handling: The userRateCounterId path parameter must be a valid UUID. Non-existent identifiers should return a not-found response. Authorization failures return access denied. This is a read-only operation with no side effects.","summary":"Get user rate counter by ID (todo_app_user_rate_counters)","parameters":[{"name":"userRateCounterId","description":"Identifier of the user rate counter window to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed user rate counter window","typeName":"ITodoAppUserRateCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/userRateCounters/{userRateCounterId}","method":"get"},{"specification":"Search and retrieve paginated user rate counters scoped to a specific rate limit policy. This reads from todo_app_user_rate_counters, constrained by a required path parameter rateLimitId (FK to todo_app_rate_limits). Supports additional filtering on user, window ranges, and block state, with sorting and pagination for administrative analysis.","description":"This operation returns user rate counter windows for a particular policy identified by rateLimitId. The underlying Prisma model todo_app_user_rate_counters contains references to todo_app_rate_limits (todo_app_rate_limit_id) and to users (todo_app_user_id), along with window_started_at/window_ends_at, count, last_action_at, and optional blocked_until for cooldowns. Restricting by policy via the path parameter aligns with common admin workflows that examine policy-specific impacts across users.\n\nSecurity and permissions: Access is limited to administrators (systemAdmin) due to the cross-user operational detail exposed. Implementations should exclude records where deleted_at is present by default, consistent with retention handling.\n\nEntity relationships and filtering: The IRequest payload may include pagination, sorting, and additional filters such as userId, window overlap periods, whether blocked_until is set or in the future, and ordering preferences. The service must apply the policy constraint derived from the path parameter in addition to any request body filters.\n\nRelated operations: Use PATCH /userRateCounters for a global search across all policies or GET /userRateCounters/{userRateCounterId} for a single record. Policy configurations themselves are managed via the todo_app_rate_limits entity in separate administrative surfaces.\n\nError handling: Invalid UUID for rateLimitId should cause a validation error. Authorization failures should deny access. An empty result is returned as an empty page with pagination metadata.","summary":"Search user rate counters by policy (todo_app_user_rate_counters)","parameters":[{"name":"rateLimitId","description":"Rate limit policy ID to scope user rate counter results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Additional filters, sorting, and pagination for counters within the policy","typeName":"ITodoAppUserRateCounter.IRequest"},"responseBody":{"description":"Paginated list of user rate counters for the given policy","typeName":"IPageITodoAppUserRateCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}/userRateCounters","method":"patch"},{"specification":"Retrieve a single user-scoped rate counter for a specific rate limit. This operation reads from the Prisma table todo_app_user_rate_counters and validates that the returned counter belongs to the provided rateLimitId. It is designed for administrative diagnostics and governance, allowing operators to inspect throttling windows (window_started_at/window_ends_at), current count, last_action_at, and any active block via blocked_until for a given user under a particular policy (todo_app_rate_limits). No mutation is performed; this is a read-only endpoint aligned with system-managed counters.","authorizationType":null,"description":"Fetch detailed information about a single user rate counter record tied to a specific rate limit policy. The underlying Prisma model todo_app_user_rate_counters stores per-user counters with fields including id (UUID), todo_app_rate_limit_id (link to todo_app_rate_limits), todo_app_user_id (link to todo_app_users), window_started_at, window_ends_at, count, last_action_at, blocked_until, and system timestamps (created_at, updated_at). The schema comment explains this table is used to enforce fair-use and cooldowns and is not directly managed by end users.\n\nSecurity and authorization: Access to user-level counters exposes operational telemetry and must be restricted. Only system administrators should query arbitrary users’ counters for investigations and support. End users do not modify these records; the system updates them as requests are processed. Implementations should ensure that records with archival markers (deleted_at not null) are excluded from normal responses unless an explicit audit mode is used.\n\nData relationships and validation: The returned record references todo_app_rate_limits via todo_app_rate_limit_id to bind the counter to a configured policy (window_seconds, max_requests, scope, category). It also references todo_app_users via todo_app_user_id to identify the subject account. The path requires both rateLimitId and userRateCounterId; providers should verify that the counter’s todo_app_rate_limit_id matches the rateLimitId to prevent cross-policy leakage. If not found or mismatched, return a not-found outcome.\n\nUsage and error handling: Typical use cases include diagnosing throttled users (blocked_until set), verifying counter behavior within a window (window_started_at/window_ends_at), and correlating with admin actions or audit logs. Error scenarios include nonexistent IDs, mismatched parent-child relation (counter not under the specified rate limit), or access without sufficient privileges. As this is a read-only operation, no side effects occur.","summary":"Get a single user rate counter (todo_app_user_rate_counters) under a specific rate limit.","parameters":[{"name":"rateLimitId","description":"Target rate limit policy ID to which the user rate counter must belong.","schema":{"type":"string","format":"uuid"}},{"name":"userRateCounterId","description":"Identifier of the user rate counter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed user rate counter including window, counts, and block status.","typeName":"ITodoAppUserRateCounter"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}/userRateCounters/{userRateCounterId}","method":"get"},{"specification":"Search and paginate over IP-scoped rate counters using rich filters. This operation reads from the Prisma table todo_app_ip_rate_counters and supports administrative exploration across policies and subjects (IPs). It enables filtering by policy, IP value, time window range, throttling status (blocked_until), and ordering, returning summaries suitable for list views. No changes to counters are performed by this endpoint.","authorizationType":null,"description":"Retrieve a filtered, paginated list of IP rate counter records from the todo_app_ip_rate_counters table. The schema describes this table as aggregating requests per IP for a given rate limit policy window. Core fields include id (UUID), todo_app_rate_limit_id (FK to todo_app_rate_limits), ip (string IP address), window_started_at, window_ends_at, count, last_action_at, blocked_until, and system timestamps (created_at, updated_at). The table is system-managed and is intended for abuse mitigation and diagnostics where user identity may be absent or unreliable.\n\nSecurity and access: Because IP counters reveal operational telemetry and potentially sensitive infrastructure insights, access should be restricted to system administrators. End users do not manage these records. Providers should by default exclude records flagged for archival via deleted_at, unless explicitly operating in an audit context.\n\nFiltering, sorting, and pagination: The request body (ITodoAppIpRateCounter.IRequest) can express filters such as policy association (todo_app_rate_limit_id), partial/normalized IP matching, window time range (window_started_at/window_ends_at), presence of a current block (blocked_until > now), and count thresholds. Sorting may include most recent last_action_at, descending count, or window boundaries. Pagination parameters should include page number/size within business defaults (e.g., typical 1–100 per page), returning a paged response of summaries optimized for list rendering.\n\nError handling and related operations: If filters reference a nonexistent policy, the result is simply an empty page. This list endpoint is commonly used with the detail retrieval GET /ipRateCounters/{ipRateCounterId} to drill into a specific record. As a read-only operation, it performs no side effects.","summary":"Search IP rate counters (todo_app_ip_rate_counters) with pagination and filters.","parameters":[],"requestBody":{"description":"Search criteria, sorting, and pagination for IP rate counters.","typeName":"ITodoAppIpRateCounter.IRequest"},"responseBody":{"description":"Paginated IP rate counter summaries matching the search criteria.","typeName":"IPageITodoAppIpRateCounter.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/ipRateCounters","method":"patch"},{"specification":"Retrieve a single IP-scoped rate counter by identifier from the Prisma table todo_app_ip_rate_counters. Designed for administrative diagnostics to inspect a counter’s active window, counts, last action time, and any active block state. Read-only; does not modify counters.","authorizationType":null,"description":"Fetch detailed information for one IP rate counter from todo_app_ip_rate_counters. Per the schema, this table tracks counts per IP for a configured rate limit policy and window, including fields: id (UUID), todo_app_rate_limit_id (FK to todo_app_rate_limits), ip, window_started_at, window_ends_at, count, last_action_at, blocked_until, and creation/update timestamps. These records are updated by system processes that enforce rate limits and are not user-editable.\n\nSecurity and authorization: The endpoint is intended for system administrators to troubleshoot throttling, investigate abuse patterns, or verify policy effectiveness. Access should be restricted accordingly. Implementations typically exclude records with deleted_at set from normal reads to avoid showing archived entries, unless an audit mode is explicitly enabled.\n\nValidation and behavior: The provider should locate the counter by ipRateCounterId. Common uses include checking whether blocked_until is set (indicating an active throttle), reviewing counts within the current window (window_started_at/window_ends_at), and correlating the policy via todo_app_rate_limit_id. Nonexistent IDs should yield a not-found outcome. As a read-only operation, no side effects occur.","summary":"Get a single IP rate counter (todo_app_ip_rate_counters) by ID.","parameters":[{"name":"ipRateCounterId","description":"Identifier of the IP rate counter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed IP rate counter with window, counts, and block status.","typeName":"ITodoAppIpRateCounter"},"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/ipRateCounters/{ipRateCounterId}","method":"get"},{"specification":"Search and paginate IP rate counters under a specific rate limit policy. This reads from todo_app_ip_rate_counters and constrains the result set to records whose todo_app_rate_limit_id matches the supplied rateLimitId. Supports admin diagnostics such as reviewing blocked IPs for a policy, high-traffic windows, and abuse mitigation. Read-only.","authorizationType":null,"description":"Retrieve a filtered, paginated list of IP rate counters from todo_app_ip_rate_counters restricted to a given policy (todo_app_rate_limits) via the path parameter rateLimitId. The underlying schema defines fields including id (UUID), todo_app_rate_limit_id, ip, window_started_at, window_ends_at, count, last_action_at, blocked_until, created_at, and updated_at. These counters are maintained by system processes to enforce throttling and cooldown behavior.\n\nSecurity and access: Because this operation surfaces operational telemetry per policy, it should be limited to system administrators. End users have no direct control over these records. Providers should ignore archival rows where deleted_at is set in normal listings unless explicitly operating in an audit context.\n\nFiltering and pagination: The request body (ITodoAppIpRateCounter.IRequest) can include additional filters such as IP substring match, window ranges, count thresholds, blocked vs. unblocked state, and sorting preferences (e.g., latest last_action_at first). Pagination should observe business defaults and limits for page size and page index. Records must be filtered to the specified rateLimitId regardless of request body content to avoid cross-policy leakage.\n\nRelated operations and errors: Use GET /ipRateCounters/{ipRateCounterId} to drill into a single record after identifying it in this list. If the specified rateLimitId does not exist, the operation should return an empty page. As a read-only search, no side effects occur.","summary":"Search IP rate counters (todo_app_ip_rate_counters) for a specific rate limit policy.","parameters":[{"name":"rateLimitId","description":"Rate limit policy ID used to constrain IP rate counters.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, sorting, and pagination; results are constrained by rateLimitId.","typeName":"ITodoAppIpRateCounter.IRequest"},"responseBody":{"description":"Paginated IP rate counter summaries for the specified policy.","typeName":"IPageITodoAppIpRateCounter.ISummary"},"authorizationRole":"systemAdmin","name":"index","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}/ipRateCounters","method":"patch"},{"specification":"Retrieve a single IP rate counter record associated with a specific rate limit. This operation targets the todo_app_ip_rate_counters table and validates that the requested counter (ipRateCounterId) belongs to the specified rate limit (rateLimitId via foreign key todo_app_rate_limit_id). The response returns the full counter object, including identifiers, window boundaries (window_started_at, window_ends_at), usage count, last action timestamp, any current block (blocked_until), and audit timestamps. Records with a non-null deleted_at are considered deleted and must not be returned in normal responses. The endpoint is intended for administrative observability and troubleshooting of throttling behavior governed by todo_app_rate_limits.","description":"This endpoint retrieves a single IP-based rate counter under a particular rate limit, enabling administrators to inspect throttling state for a given IP within a configured policy window. It operates on the todo_app_ip_rate_counters table, which aggregates request counts per IP and policy window and stores critical fields such as window_started_at, window_ends_at, count, last_action_at, and blocked_until. The parent configuration resides in todo_app_rate_limits, which defines the policy code, scope (e.g., \"ip\"), category (e.g., \"read\", \"write\", \"auth\"), window_seconds, max_requests, and optional burst_size. This endpoint ensures that the counter returned is scoped to the provided rateLimitId through the foreign key todo_app_rate_limit_id.\n\nSecurity and authorization are restricted to system administrators because these counters expose operational details of enforcement and could reveal sensitive patterns about traffic and abuse protection. Only users with the systemAdmin role should have access. Requests must provide valid UUIDs for both rateLimitId and ipRateCounterId. The service must also ensure that the counter’s todo_app_rate_limit_id equals the path rateLimitId; otherwise, the request is treated as not found to avoid leaking cross-scope information.\n\nFrom a data model perspective, the todo_app_ip_rate_counters table tracks per-policy, per-IP counters using a fixed or sliding window as configured by the linked todo_app_rate_limits record (fields include scope, category, window_seconds, max_requests, burst_size, sliding_window, and enabled). Relevant operational timestamps include last_action_at for the most recent contributing request and blocked_until for the cooldown end time when throttling has been applied. Standard lifecycle timestamps created_at and updated_at are system-managed. Records where deleted_at is non-null are considered deleted and should be excluded from normal responses.\n\nValidation and behavior: If either identifier is not a valid UUID, the provider should reject the request. If the ipRateCounterId does not exist, is marked deleted via deleted_at, or exists but is linked to a different rate limit than rateLimitId, the provider should return a not-found outcome. When successful, the response includes the full rate counter entity. This endpoint is read-only and does not modify any counters.\n\nRelated operations that typically appear alongside this one include a list/search endpoint to filter IP rate counters by rateLimitId and time windows (using pagination and sorting), and administrative actions to view user-level counters (todo_app_user_rate_counters). Write operations (creation, modification, or deletion) for counters are not exposed because counters are system-managed and updated automatically by enforcement logic.","summary":"Get an IP rate counter under a rate limit from todo_app_ip_rate_counters","parameters":[{"name":"rateLimitId","description":"Identifier of the rate limit policy (todo_app_rate_limits.id) that owns this counter","schema":{"type":"string","format":"uuid"}},{"name":"ipRateCounterId","description":"Identifier of the IP rate counter record (todo_app_ip_rate_counters.id) to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The IP rate counter associated with the given rate limit","typeName":"ITodoAppIpRateCounter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/todoApp/systemAdmin/rateLimits/{rateLimitId}/ipRateCounters/{ipRateCounterId}","method":"get"}],"components":{"authorization":[{"name":"guestVisitor","description":"Unauthenticated visitor with minimal access: can view public information such as landing, terms, privacy, and can register or log in. No access to any Todo data.","kind":"guest"},{"name":"todoUser","description":"Authenticated user who owns and manages personal todo items. Can create, read, update, complete, and delete own todos; set titles and optional descriptions; set optional due dates; filter and search only own todos; cannot access other users’ data.","kind":"member"},{"name":"systemAdmin","description":"Operational administrator for service governance. Can manage user accounts (suspend/reactivate), view aggregated service metrics, handle content or abuse reports, and manage service-wide configurations. No routine access to private todo content without explicit lawful process.","kind":"admin"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageITodoAppTodo.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppTodo.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppTodoActivity.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppTodoActivity.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppTodoDeletionEvent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppTodoDeletionEvent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppServicePolicy.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppServicePolicy.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppServiceConfiguration.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppServiceConfiguration.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppFeatureFlag.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppFeatureFlag.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppUser.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppUser.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppGuestVisitor.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppGuestVisitor.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppTodoUser.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppTodoUser.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppSystemAdmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppSystemAdmin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppDataExport.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppDataExport.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAccountDeletionRequest.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAccountDeletionRequest.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppPrivacyConsent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppPrivacyConsent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppSession.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppSession.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppRefreshToken.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppRefreshToken.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppLoginAttempt.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppLoginAttempt.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppEmailVerification.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppEmailVerification.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppPasswordReset.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppPasswordReset.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppPrivacyConsent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppPrivacyConsent"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppRateLimit.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppRateLimit.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppEventType.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppEventType.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppBusinessEvent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppBusinessEvent"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppEventCountersDaily":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppEventCountersDaily"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAuditLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAuditLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAdminAction.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAdminAction.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAccountStatusChange.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAccountStatusChange.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAggregatedMetric.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAggregatedMetric.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppDailyStat.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppDailyStat.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppKpiCounter":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppKpiCounter"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAuditLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAdminAction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAdminAction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppAccountStatusChange":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppAccountStatusChange"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppUserRateCounter":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppUserRateCounter"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageITodoAppIpRateCounter.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppIpRateCounter.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"ITodoAppGuestVisitor.IJoin":{"type":"object","properties":{"email":{"oneOf":[{"type":"string","format":"email"},{"type":"null"}],"description":"Optional email to associate with the guest account. If provided, it populates todo_app_users.email.\n\nNo password or actor/system fields are accepted; password hashing and lifecycle fields (status, email_verified, verified_at) are server-managed according to the Actors schema."}},"required":[],"description":"Guest join payload used to create a temporary account and initiate authentication.\n\nReferences Prisma models:\n- todo_app_users: email (optional), password_hash (server-managed), status/email_verified/verified_at timestamps.\n- todo_app_sessions: a session will be created after join.\n- todo_app_refresh_tokens: an initial refresh token entry will be created."},"ITodoAppGuestVisitor.IRefreshRequest":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Opaque refresh token string to rotate.\n\nServer validates against todo_app_refresh_tokens by token_hash, honors expires_at, and enforces single-use via rotated_at."}},"required":["refresh_token"],"description":"Refresh token rotation request for guestVisitor.\n\nReferences Prisma models:\n- todo_app_refresh_tokens: token_hash lookup, issued_at/expires_at, rotated_at/revoked_at.\n- todo_app_sessions: session validity (expires_at) and potential revocation (revoked_at)."},"ITodoAppGuestVisitor.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated subject (guest account id)."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"],"description":"Authorization response for guestVisitor after join/refresh.\n\nContains subject id and authorization token information. No password or secret fields are exposed."},"ITodoAppPasswordReset.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based). Null for service default."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100). Null for service default."},"requested_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for requested_at."},"requested_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for requested_at."},"expires_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for expires_at."},"expires_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for expires_at."},"consumed":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Consumption state filter derived from consumed_at.\n\ntrue ⇒ consumed_at IS NOT NULL; false ⇒ consumed_at IS NULL; null ⇒ no filter."},"email":{"oneOf":[{"type":"string","format":"email"},{"type":"null"}],"description":"Optional filter on email address for the reset request."},"order_by":{"oneOf":[{"const":"requested_at"},{"const":"expires_at"},{"const":"created_at"},{"type":"null"}],"description":"Sort key for results."},"order_dir":{"$ref":"#/components/schemas/ESortDirection","description":"Sort direction for ordered results."}},"required":[],"description":"Search, filter, sort, and paginate password reset records.\n\nMaps to Prisma table todo_app_password_resets. SECURITY: This request type does not accept actor identifiers; ownership is derived from path context or authentication, consistent with business rules."},"ITodoAppPasswordReset.IConfirm":{"type":"object","properties":{"token":{"type":"string","description":"Opaque reset token provided to the user via out-of-band channel.\n\nServer hashes this value and compares it to `todo_app_password_resets.token_hash` to validate. The plaintext token itself is never persisted in the database."},"new_password":{"type":"string","description":"New credential to be applied to the account.\n\nSecurity notice: the server stores only a secure password hash in `todo_app_users.password_hash` (never plaintext). Client requests must not include any actor/user identifiers; ownership is resolved from the reset token context."}},"required":["token","new_password"],"description":"Request payload to confirm a password reset.\n\nThis DTO corresponds to the final step of the reset workflow driven by Prisma model `todo_app_password_resets`. It accepts the opaque `token` and the new credential. It never accepts or exposes sensitive system fields like `token_hash`, and it must not accept actor IDs such as `todo_app_user_id`."},"ITodoAppPasswordReset.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the password reset request."},"email":{"type":"string","format":"email","description":"Email address provided for the request."},"requested_at":{"type":"string","format":"date-time","description":"When the reset was requested."},"expires_at":{"type":"string","format":"date-time","description":"When the reset token expires."},"consumed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When the token was consumed, if applicable."}},"required":["id","email","requested_at","expires_at"],"description":"Summary of a password reset request suitable for list pages.\n\nExcludes all token/token_hash secrets by design and includes only response‑safe metadata."},"ITodoAppEmailVerification.IConfirm":{"type":"object","properties":{"token":{"type":"string","description":"Opaque email verification token delivered to the user.\n\nThe server validates this by hashing and comparing with `todo_app_email_verifications.token_hash`. The plaintext token must never be stored in the database or logged."}},"required":["token"],"description":"Request payload to confirm an email verification.\n\nThis DTO corresponds to the consumption of a verification token tracked in `todo_app_email_verifications`. It accepts only the opaque token and never exposes or accepts sensitive system fields (like `token_hash`) or actor IDs."},"ITodoAppEmailVerification.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Verification record identifier."},"target_email":{"type":"string","format":"email","description":"Email address being verified."},"sent_at":{"type":"string","format":"date-time","description":"When the verification message was sent."},"expires_at":{"type":"string","format":"date-time","description":"When the token expires."},"consumed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When the token was consumed, if applicable."},"failure_count":{"type":"integer","description":"Failed verification attempts count for this token."}},"required":["id","target_email","sent_at","expires_at","failure_count"],"description":"Summary view of an email verification suitable for list pages.\n\nOmits secrets and focuses on lifecycle status and timing."},"ITodoAppEmailVerification.IResendRequest":{"type":"object","description":"Email verification resend request body.\n\nThis request type is used by public verification workflows to create a new verification entry in the Auth domain backed by Prisma model `todo_app_email_verifications`. Providers generate a token, persist only a one-way hash, and deliver the message out-of-band.\n\nSecurity note: this request must not reveal whether the email exists. The server validates the address format and proceeds with a privacy‑preserving acknowledgment.","properties":{"email":{"type":"string","format":"email","description":"Target email address to (re)send a verification message to.\n\nBusiness rule: must be a syntactically valid email address. The underlying verification record will be created in `todo_app_email_verifications` with fields like `token_hash`, `target_email`, `sent_at`, and `expires_at`. The raw token is never persisted."}},"required":["email"]},"ITodoAppSessionRevocation.ICreate":{"type":"object","description":"Session revocation (logout) create request.\n\nThis request maps to recording a revocation in Prisma model `todo_app_session_revocations` and updating the corresponding `todo_app_sessions` row. Client input must never include actor or session identifiers; ownership and session context are derived from authentication.\n\nSecurity: request bodies must not accept `todo_app_user_id` or `todo_app_session_id`. Only an optional human‑readable reason may be supplied.","properties":{"reason":{"type":"string","description":"Optional human‑readable reason for revocation (e.g., \"user_logout\", \"password_change\").\n\nStored in `todo_app_session_revocations.reason` when provided. Providers may normalize or constrain values per policy."}},"required":[]},"ITodoAppSessionRevocation.ISummary":{"type":"object","description":"Summary of a recorded session revocation.\n\nThis response reflects the persisted record in Prisma model `todo_app_session_revocations` and is suitable for acknowledgement after logout. It intentionally contains no token secrets.\n\nFields align to the Auth schema: `id` (revocation id), `todo_app_session_id` (the revoked session), `revoked_at` timestamp, actor category in `revoked_by`, optional `reason`, and standard timestamps for auditability.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the revocation record from `todo_app_session_revocations.id`.\n\nUsed for traceability in audit workflows."},"todo_app_session_id":{"type":"string","format":"uuid","description":"Identifier (UUID) of the revoked session from `todo_app_sessions.id`.\n\nNote: raw `session_token` is never exposed."},"revoked_at":{"type":"string","format":"date-time","description":"Timestamp when the session was revoked (ISO 8601). Maps to `todo_app_session_revocations.revoked_at`."},"revoked_by":{"type":"string","description":"Actor category performing the revocation (e.g., \"user\", \"system\", or \"admin\").\n\nSourced from `todo_app_session_revocations.revoked_by`."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human‑readable reason captured at revocation time. Mirrors `todo_app_session_revocations.reason`."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601). Mirrors `todo_app_session_revocations.created_at`."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp (ISO 8601). Mirrors `todo_app_session_revocations.updated_at`."}},"required":["id","todo_app_session_id","revoked_at","revoked_by","created_at","updated_at"]},"ITodoAppTodoUser.ICreate":{"type":"object","description":"Todo user registration (member) create request.\n\nThis input maps to creating a new account in Prisma model `todo_app_users` (Actors namespace). The server persists `email` and derives `password_hash` from the provided plaintext `password`. Fields such as `status`, `email_verified`, `verified_at`, and temporal columns are managed server‑side.\n\nSecurity: request must not accept actor IDs or system‑managed timestamps. The plaintext `password` appears only in transit and is never stored; only a secure hash is saved in `todo_app_users.password_hash`.","properties":{"email":{"type":"string","format":"email","description":"Unique email address used for sign‑in. Maps to `todo_app_users.email` (unique).\n\nBusiness rule: must be a valid email address."},"password":{"type":"string","minLength":8,"maxLength":64,"description":"Plaintext password to be hashed server‑side into `todo_app_users.password_hash`.\n\nBusiness rule: length 8–64 characters as per MVP policy. Providers may enforce additional complexity controls."}},"required":["email","password"]},"ITodoAppTodoUserLogin.IRequest":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Login identifier corresponding to todo_app_users.email (Prisma).\n\nMust be a syntactically valid email address. The value is used only for authentication lookups and is not modified by this request."},"password":{"type":"string","minLength":8,"maxLength":64,"description":"Plain text credential supplied by the user to be verified against todo_app_users.password_hash (Prisma).\n\nSecurity: never persisted; only a transient input to verify the existing hash. Business policy recommends 8–64 characters."},"keep_me_signed_in":{"type":"boolean","description":"Convenience hint allowing the server to choose a longer refresh token validity (policy dependent).\n\nNot persisted directly in the database; affects token issuance behavior only."}},"required":["email","password"],"description":"Login payload for authenticating a member (todoUser).\n\nMaps to authentication checks on the Actors/Auth schema: email is verified against todo_app_users.email; password is verified against todo_app_users.password_hash. This request never accepts actor IDs and carries no system-managed fields."},"ITodoAppTodoUserRefresh.IRequest":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Opaque refresh token presented by the client. On the server side, this is looked up via a one-way hash against todo_app_refresh_tokens.token_hash (Prisma).\n\nSecurity: never store this plaintext value; persist and compare only the hash."}},"required":["refresh_token"],"description":"Refresh token rotation request for a member (todoUser).\n\nThe server validates the token against todo_app_refresh_tokens (issued_at, expires_at, rotated_at, revoked_at) and its session in todo_app_sessions before issuing new credentials. This request intentionally excludes actor IDs and other system-managed fields."},"ITodoAppTodoUserEmailVerification.IConsume":{"type":"object","properties":{"token":{"type":"string","description":"Opaque email verification token presented by the client. The service validates it by hashing and comparing to todo_app_email_verifications.token_hash within the expiry window.\n\nOn success, todo_app_users.email_verified is set to true and verified_at is stamped according to policy."}},"required":["token"],"description":"Email verification token consumption payload.\n\nConsumes a record from todo_app_email_verifications (sent_at, expires_at, consumed_at, failure_count) and updates verification flags in todo_app_users without exposing raw tokens."},"ITodoAppUser.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"User identifier.\n\nPrisma: todo_app_users.id (UUID Primary Key)."},"email":{"type":"string","format":"email","description":"Unique email address used for authentication and notifications.\n\nPrisma: todo_app_users.email with @@unique([email])."},"status":{"type":"string","description":"Account lifecycle status (e.g., pending_verification, active, suspended, deactivated).\n\nPrisma: todo_app_users.status."},"email_verified":{"type":"boolean","description":"Email verification flag.\n\nPrisma: todo_app_users.email_verified."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the user record (RFC 3339).\n\nPrisma: todo_app_users.created_at (timestamptz)."},"last_login_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of last successful login, or null when none.\n\nPrisma: todo_app_users.last_login_at (timestamptz, nullable)."}},"required":["id","email","status","email_verified","created_at"],"description":"Summary view of a user for list endpoints.\n\nBased on Prisma model Actors.todo_app_users. Shows essential, non-sensitive fields suitable for administrative listings. Excludes credentials (e.g., password_hash) and internal soft-deletion markers."},"ITodoAppTodoUser.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated todoUser."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"],"description":"Authorization response for todoUser (login/join/refresh).\n\nProvides subject id and JWT token information. Response excludes password_hash and any secret material."},"ITodoAppEmailVerification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the email verification record.\n\nPrisma: todo_app_email_verifications.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner user's identifier.\n\nPrisma: todo_app_email_verifications.todo_app_user_id (FK to todo_app_users.id)."},"target_email":{"type":"string","format":"email","description":"Email address subject to verification.\n\nPrisma: todo_app_email_verifications.target_email."},"sent_at":{"type":"string","format":"date-time","description":"Timestamp when the verification message was sent.\n\nPrisma: todo_app_email_verifications.sent_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when the verification token expires.\n\nPrisma: todo_app_email_verifications.expires_at (timestamptz)."},"consumed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the token was consumed.\n\nPrisma: todo_app_email_verifications.consumed_at (nullable timestamptz)."},"failure_count":{"type":"integer","description":"Number of failed verification attempts associated with this token.\n\nPrisma: todo_app_email_verifications.failure_count (int)."},"consumed_by_ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client IP (text) from which the token was consumed, if available.\n\nPrisma: todo_app_email_verifications.consumed_by_ip (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_email_verifications.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_email_verifications.updated_at (timestamptz)."}},"required":["id","todo_app_user_id","target_email","sent_at","expires_at","failure_count","created_at","updated_at"],"description":"Email verification record for account activation or email change.\n\nSECURITY: Sensitive token/token_hash fields from Prisma are intentionally excluded from response types. This schema exposes only metadata fields necessary for clients to evaluate verification status and timing."},"ITodoAppTodoUserPasswordReset.IRequest":{"type":"object","description":"Password reset initiation request for a member user (todoUser). This request is privacy-preserving and MUST NOT include actor IDs. The server records the request in todo_app_password_resets (email, token_hash, requested_at, expires_at) without revealing whether the email maps to an existing account.\n\nSource reference: Prisma model todo_app_password_resets — supports privacy-preserving requests by email only, with optional user linkage via todo_app_user_id.","properties":{"email":{"type":"string","format":"email","description":"Email address to receive reset instructions. Business validation applies to format only; existence is not disclosed."}},"required":["email"],"x-tags":["Auth","Actors"]},"ITodoAppPasswordReset.IRequested":{"type":"object","description":"Acknowledgment response after accepting a password reset request. This response intentionally avoids exposing secret token values. Fields reflect workflow timestamps and echo the submitted email while preserving privacy (does not confirm account existence).\n\nRelated storage: todo_app_password_resets (requested_at, expires_at); tokens are stored only as secure hashes and never returned.","properties":{"requested_at":{"type":"string","format":"date-time","description":"Timestamp when the reset request was accepted (maps to todo_app_password_resets.requested_at)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when the reset request expires (maps to todo_app_password_resets.expires_at)."},"email":{"type":"string","format":"email","description":"Echo of the submitted email. This value does not confirm whether an account exists (privacy-preserving)."},"note":{"type":"string","description":"Optional human-readable message providing next-step guidance or throttling information."}},"required":["requested_at","expires_at","email"],"x-tags":["Auth"]},"ITodoAppTodoUserPasswordReset.IConfirm":{"type":"object","description":"Password reset confirmation payload for a member user (todoUser). Clients submit the opaque reset token and a new password. The server validates against todo_app_password_resets (by token_hash, expiry, single-use) and updates todo_app_users.password_hash upon success. Never accept or expose actor IDs in this request.\n\nSecurity notes: Do not store plaintext tokens; store only token_hash. Enforce password policy (e.g., 8–64 characters) at validation time.","properties":{"token":{"type":"string","description":"Opaque reset token delivered out-of-band (email). The server verifies it by comparing its hash to todo_app_password_resets.token_hash, enforcing expiry and single-use semantics."},"new_password":{"type":"string","minLength":8,"maxLength":64,"description":"New password string to set for the account. Policy per NFR: minimum 8 and maximum 64 characters; additional composition rules may apply at service level."}},"required":["token","new_password"],"x-tags":["Auth"]},"ITodoAppPasswordReset.ICompleted":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Password reset record identifier.\n\nReferences Prisma table todo_app_password_resets.id. This is the authoritative identifier for the reset request and its lifecycle."},"email":{"type":"string","format":"email","description":"Email address associated with the reset request.\n\nReferences Prisma column todo_app_password_resets.email. This value is safe to expose and helps the caller confirm the subject of the completed reset."},"requestedAt":{"type":"string","format":"date-time","description":"Timestamp when the reset was requested.\n\nMaps to todo_app_password_resets.requested_at (timestamptz). Use ISO 8601 format with timezone."},"expiresAt":{"type":"string","format":"date-time","description":"Timestamp when the reset token was scheduled to expire.\n\nMaps to todo_app_password_resets.expires_at (timestamptz). Provided for audit and UX messaging."},"consumedAt":{"type":"string","format":"date-time","description":"Timestamp when the reset token was consumed to apply the new credential.\n\nMaps to todo_app_password_resets.consumed_at (timestamptz). Presence here confirms completion."}},"required":["id","email","requestedAt","expiresAt","consumedAt"],"description":"Completion result for a password reset operation.\n\nThis DTO discloses only safe metadata derived from the Prisma model todo_app_password_resets. It never exposes security-sensitive fields such as token or token_hash and contains no passwords. It is returned only for successfully completed resets."},"ITodoAppTodoUserPassword.IChange":{"type":"object","properties":{"currentPassword":{"type":"string","minLength":8,"maxLength":64,"format":"password","description":"Current password for verification.\n\nSecurity: plaintext is accepted only in transit for verification and NEVER persisted. Server verifies against todo_app_users.password_hash and immediately discards the plaintext."},"newPassword":{"type":"string","minLength":8,"maxLength":64,"format":"password","description":"New password to be applied.\n\nSecurity: plaintext is accepted only in transit and will be hashed into todo_app_users.password_hash. Do not log or persist the plaintext."},"revokeOtherSessions":{"type":"boolean","description":"If true, the server will revoke other active sessions (todo_app_sessions) and their refresh chains after the password change.\n\nMaps to operational behavior that writes todo_app_session_revocations and sets revoked_at on the affected sessions. Defaults are policy-dependent."}},"required":["currentPassword","newPassword"],"description":"Request payload for an authenticated todoUser to change their password.\n\nThis request maps to the Prisma model todo_app_users, where the new credential is stored only as a password_hash. The server validates the provided currentPassword against the existing hash and, if correct, persists the new password by computing a fresh password_hash. Plaintext passwords must never be persisted or logged.\n\nSecurity constraints: The payload must not include any actor identifiers (e.g., userId) or system-managed fields. Implementations are expected to enforce password policy limits (e.g., 8–64 characters) and, when requested via revokeOtherSessions, revoke other sessions in todo_app_sessions and related refresh tokens. This endpoint affects only the caller’s account and should be handled over secure transport."},"ITodoAppPasswordChange":{"type":"object","properties":{"success":{"type":"boolean","description":"Indicates whether the password change completed successfully."},"changedAt":{"type":"string","format":"date-time","description":"Server timestamp when the password change took effect (ISO 8601, timestamptz)."},"revokedOtherSessions":{"type":"boolean","description":"True if other active sessions were revoked as part of the operation.\n\nOperationally ties to updates on todo_app_sessions.revoked_at and inserts into todo_app_session_revocations."},"message":{"type":"string","description":"Optional human-readable message about post-change actions or next steps.\n\nNo secrets or hashes are ever included."}},"required":["success","changedAt"],"description":"Response for a successful password change request.\n\nContains only safe metadata for UX and audit surfaces. No password or hash material is ever exposed. Operational details may include whether other sessions were revoked."},"ITodoAppSession.IRevokeOthers":{"type":"object","properties":{"include_current":{"type":"boolean","description":"If true, include the current authenticated session in the revocation set.\n\nDefault behavior is to exclude the current session so the caller remains signed in unless explicitly requested."},"reason":{"type":"string","description":"Human-readable reason recorded with each session revocation.\n\nPersists to todo_app_session_revocations.reason when creating revocation entries (no secrets)."},"issued_before":{"type":"string","format":"date-time","description":"Revoke sessions issued before this timestamp.\n\nFilters by todo_app_sessions.issued_at (timestamptz)."},"expires_before":{"type":"string","format":"date-time","description":"Revoke sessions that expire before this timestamp.\n\nFilters by todo_app_sessions.expires_at (timestamptz)."},"ip":{"type":"string","description":"Optional IP filter to target sessions created from a specific client IP address.\n\nMatches against todo_app_sessions.ip (text)."},"user_agent":{"type":"string","description":"Optional user-agent substring filter to target sessions from specific devices/browsers.\n\nMatches against todo_app_sessions.user_agent (text)."}},"required":[],"description":"Request to revoke other active sessions for the authenticated user (self-service security operation).\n\nThis DTO never accepts user identifiers or system-managed fields; ownership is derived from authentication. Filters reference Prisma Auth schema columns (todo_app_sessions.*) and record the revocation reason via todo_app_session_revocations."},"ITodoAppSystemAdminJoin.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Login identifier and notification address for the system administrator.\n\nMaps to todo_app_users.email (Actors schema). Must be unique across all users. Value is validated as an email address and is persisted on the user record upon successful registration."},"password":{"type":"string","minLength":8,"maxLength":64,"description":"Plaintext password submitted by the client and never stored directly. The service derives todo_app_users.password_hash from this value and persists only the hash.\n\nBusiness policy: minimum 8 and maximum 64 characters; stronger composition rules may be enforced server-side. This field is only accepted on join/login flows and is not returned in responses."},"ip":{"type":"string","description":"Optional client IP address captured for security analytics and audit.\n\nNot persisted directly on the user record; providers may store it on the new session (todo_app_sessions.ip) created during registration."},"user_agent":{"type":"string","description":"Optional client user agent string captured at registration time for diagnostics and device recognition.\n\nNot stored on the user record; providers may persist it on the session (todo_app_sessions.user_agent) created for the administrator."}},"required":["email","password"],"description":"System administrator registration payload.\n\nThis request creates a new administrative identity in todo_app_users and typically inserts a role grant in todo_app_systemadmins. Only business inputs are accepted: email and password. Client context (ip, user_agent) may be captured and associated to the initial session in todo_app_sessions.\n\nSecurity: Do not accept or echo sensitive system fields like id, created_at, updated_at, or actor identifiers. Password is hashed server-side and never persisted in plaintext."},"ITodoAppSystemAdminLogin.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address used to authenticate a system administrator.\n\nCorresponds to todo_app_users.email (Actors schema)."},"password":{"type":"string","minLength":8,"maxLength":64,"description":"Plaintext credential to be verified against todo_app_users.password_hash.\n\nNever logged or persisted in plaintext; compliant with policy constraints (min 8, max 64)."},"ip":{"type":"string","description":"Optional client IP for security analytics; may be stored with the issued session at todo_app_sessions.ip."},"user_agent":{"type":"string","description":"Optional client user agent captured at login; may be stored with the issued session at todo_app_sessions.user_agent."}},"required":["email","password"],"description":"Login payload for authenticating a system administrator.\n\nOn success, the service issues a session in todo_app_sessions and a refresh token in todo_app_refresh_tokens. This request accepts only business inputs (email/password) and optional client context (ip/user_agent)."},"ITodoAppSystemAdminRefresh.ICreate":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Opaque refresh token provided by the client. The server validates it by matching a one-way token_hash in todo_app_refresh_tokens and enforces rotation/expiry semantics."},"ip":{"type":"string","description":"Optional client IP captured for anomaly detection and recorded on the renewed session if applicable (todo_app_sessions.ip)."},"user_agent":{"type":"string","description":"Optional client user agent string captured at refresh time (todo_app_sessions.user_agent) for diagnostics."}},"required":["refresh_token"],"description":"Refresh request for system administrators.\n\nThe server validates the provided refresh_token against todo_app_refresh_tokens (by token_hash), rotates the chain, and returns renewed credentials. Optional client context may be recorded in the session for audit and security analytics."},"ITodoAppSystemAdmin.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated system administrator."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"],"description":"Authorization response for systemAdmin (login/join/refresh).\n\nIncludes only the admin id and token per security requirements."},"ITodoAppSystemAdminEmailVerification.ICreate":{"type":"object","properties":{"token":{"type":"string","description":"Opaque email verification token provided by the client for consumption.\n\nValidation and persistence are performed against todo_app_email_verifications.token_hash (one-way hash) with expiry enforced by todo_app_email_verifications.expires_at. The raw token MUST NOT be stored server-side per schema guidance."}},"required":["token"],"description":"Email verification token consumption payload (System Admin flow).\n\nThis request corresponds to consuming a record in the Prisma model todo_app_email_verifications. The server validates the provided token against token_hash, ensures it has not expired (expires_at) and has not already been consumed (consumed_at is null). Upon success, it updates todo_app_users by setting email_verified=true and verified_at to the current time.\n\nSecurity: Do not accept actor IDs (user_id) in this request. Do not echo or persist raw token values. Client metadata (IP, user agent) may be captured by the server for auditing per schema fields like consumed_by_ip, but are not part of this request body."},"ITodoAppSystemAdminEmailVerificationResult":{"type":"object","properties":{"email_verified":{"type":"boolean","description":"Indicates whether the user's email is now verified.\n\nMaps to todo_app_users.email_verified and reflects the authoritative verification state after processing."},"verified_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the user was verified.\n\nMaps to todo_app_users.verified_at. Returned as an RFC 3339 date-time string when verification has completed; otherwise null when not applicable or unchanged."},"token_consumed":{"type":"boolean","description":"Indicates whether the provided token has been marked as used.\n\nMaps to todo_app_email_verifications.consumed_at (true when non-null). Ensures single-use semantics for verification tokens."}},"required":["email_verified","token_consumed"],"description":"Verification result for the System Admin email confirmation flow.\n\nThis response summarizes the outcome of validating and consuming a token from todo_app_email_verifications (consumed_at) and applying the verification flags on todo_app_users (email_verified, verified_at). The server must never return raw token or token_hash values. This type contains only safe, public-facing fields suitable for clients."},"ITodoAppSystemAdminEmailVerificationResend.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Target email address to receive a new verification message.\n\nThe server will create a new row in todo_app_email_verifications setting target_email, token_hash, sent_at, and expires_at per policy. Responses MUST be privacy-preserving and SHOULD NOT reveal whether the email exists."}},"required":["email"],"description":"Resend verification request payload (System Admin flow).\n\nCreates a new verification entry in todo_app_email_verifications (target_email, token_hash, sent_at, expires_at). The server must not disclose user existence in its response. No actor IDs are accepted in this request."},"ITodoAppSystemAdminEmailVerificationResendResult":{"type":"object","properties":{"acknowledged":{"type":"boolean","description":"Indicates whether the resend request has been accepted for processing.\n\nPrivacy-preserving acknowledgment; does not assert whether a matching user exists."},"sent_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the verification message was (or will be) sent.\n\nMaps to todo_app_email_verifications.sent_at. May be null if the provider does not disclose scheduling details."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Expiration timestamp for the newly issued verification token.\n\nMaps to todo_app_email_verifications.expires_at. May be null if the provider does not disclose expiry details."}},"required":["acknowledged"],"description":"Acknowledgment result for verification resend (System Admin flow).\n\nWhen a resend is enqueued, a new todo_app_email_verifications row is created (sent_at, expires_at, token_hash). This response confirms acceptance without revealing account existence, aligning with privacy-preserving behavior described in the schema comments."},"ITodoAppSystemAdminPasswordResetRequest.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Administrator's email address to receive password reset instructions.\n\nThis is the login identifier stored in todo_app_users.email. The confirmation workflow is modeled by todo_app_password_resets with columns email and optional todo_app_user_id for privacy-preserving initiation. The server MUST NOT disclose whether the submitted email maps to an existing account.\n\nValidation: syntactically valid email string; business policies may enforce additional constraints (e.g., corporate domains) without changing the schema."}},"required":["email"],"description":"Create payload to initiate an administrator password reset request.\n\nBusiness context: Inserts a row in todo_app_password_resets with fields such as email, token_hash (derived from an opaque token), requested_at, and expires_at. No user identifiers are accepted from clients; identity linkage is resolved by the server using todo_app_password_resets.todo_app_user_id when applicable.\n\nSecurity: Never expose raw tokens or any credential in responses. Avoid user enumeration by returning generic acknowledgments regardless of account existence."},"ITodoAppSystemAdminPasswordResetRequestResult":{"type":"object","properties":{"accepted":{"type":"boolean","description":"True when the password reset request has been accepted for processing.\n\nThis acknowledgment corresponds to creating a todo_app_password_resets record (email, token_hash, requested_at, expires_at) without disclosing whether a user exists."},"message":{"type":"string","description":"Optional human-readable message for UX guidance.\n\nDoes not disclose whether the email maps to an account. Content may reflect high-level next steps (e.g., \"If an account exists, you'll receive an email with instructions shortly.\")"}},"required":["accepted"],"description":"Acknowledgment response for an administrator password reset request.\n\nPrivacy: Does not reveal whether the email exists in todo_app_users. Aligns with the design of todo_app_password_resets to prevent user enumeration.\n\nNo secrets (tokens, hashes) are ever returned."},"ITodoAppSystemAdminPasswordResetConfirm.ICreate":{"type":"object","properties":{"token":{"type":"string","description":"One-time opaque reset token delivered via an out-of-band channel.\n\nServer validates this by computing/looking up todo_app_password_resets.token_hash and enforcing expiry via expires_at. The raw token is never stored in the database and MUST NOT be logged."},"new_password":{"type":"string","minLength":8,"maxLength":64,"description":"New password for the administrator account.\n\nOn success, the server updates todo_app_users.password_hash and may revoke active sessions/refresh chains per policy. Policy guidance in requirements specifies a minimum length of 8 and maximum of 64 characters."}},"required":["token","new_password"],"description":"Confirmation payload to complete an administrator password reset.\n\nBusiness flow: Validates token against todo_app_password_resets.token_hash and expiry (expires_at), marks consumed_at, and updates todo_app_users.password_hash. May revoke sessions in todo_app_sessions and refresh tokens in todo_app_refresh_tokens according to policy.\n\nSecurity: Never return sensitive data; never accept user identifiers in the body."},"ITodoAppSystemAdminPasswordResetConfirmResult":{"type":"object","properties":{"success":{"type":"boolean","description":"True when the password has been successfully updated.\n\nServer-side effects may include revoking other sessions (todo_app_sessions) and related refresh tokens (todo_app_refresh_tokens) per security policy."},"message":{"type":"string","description":"Optional human-readable message providing high-level outcome and next steps (e.g., \"You can now sign in with your new password.\")"}},"required":["success"],"description":"Result of password reset confirmation for an administrator.\n\nNo secrets are returned. This response confirms whether the reset operation succeeded, without exposing any internal token values or credential details."},"ITodoAppSystemAdminPassword.IUpdate":{"type":"object","properties":{"current_password":{"type":"string","minLength":8,"maxLength":64,"format":"password","description":"Current password of the authenticated administrator, submitted for verification.\n\nSecurity note: compared against todo_app_users.password_hash (Prisma model: Actors.todo_app_users). Policy requires 8–64 characters. Never stored or logged in plaintext."},"new_password":{"type":"string","minLength":8,"maxLength":64,"format":"password","description":"New password to be applied to the administrator account.\n\nSecurity note: becomes the new todo_app_users.password_hash after hashing (Prisma model: Actors.todo_app_users). Must comply with MVP policy (min 8, max 64). Do not echo this value back in any response."}},"required":["current_password","new_password"],"description":"Change-password request body for an authenticated system administrator.\n\nMaps to authentication data stored in Prisma Actors.todo_app_users (fields: password_hash, updated_at). The server validates current_password against the existing hash and replaces the hash with a hash of new_password upon success. Ownership/actor identity comes from authentication context; request must not accept user/account IDs."},"ITodoAppSystemAdminPasswordChangeResult":{"type":"object","properties":{"success":{"type":"boolean","description":"Indicates whether the password change operation completed successfully.\n\nIf false, no credential was updated and no session revocations were applied."},"revoked_other_sessions":{"type":"boolean","description":"Whether other active sessions (besides the current one) were revoked as a consequence of the password change.\n\nIf present and true, related rows in Auth.todo_app_sessions gained revoked_at and a corresponding record in Auth.todo_app_session_revocations may have been inserted."},"revoked_sessions_count":{"type":"integer","format":"int32","minimum":0,"description":"Total number of sessions revoked by policy during this password change.\n\nCounts records updated in Auth.todo_app_sessions (Prisma model) excluding logically deleted rows. Does not expose any token secrets."},"message":{"type":"string","description":"Optional human-readable message describing notable outcomes (e.g., \"Password updated; 2 other sessions revoked\")."}},"required":["success"],"description":"Result payload following a system administrator password change.\n\nDoes not contain any secret values. May summarize session revocations (Prisma Auth models: todo_app_sessions, todo_app_session_revocations) triggered by the change. Primary credential update targets Actors.todo_app_users.password_hash."},"ITodoAppSystemAdminSessionRevocation.ICreate":{"type":"object","properties":{"revoke_current":{"type":"boolean","description":"When true, revoke the current authenticated session as well as other sessions.\n\nDefault behavior typically revokes only other active sessions. This flag allows self-termination of the current session too (Prisma Auth.todo_app_sessions)."},"reason":{"type":"string","maxLength":1000,"description":"Optional human-readable reason to record with revocation audit trails.\n\nCan be stored in Auth.todo_app_session_revocations.reason for each revoked session. Avoid sensitive secrets."}},"required":[],"description":"Request body to revoke sessions for the authenticated system administrator.\n\nTargets Auth.todo_app_sessions by user, creating one record per session in Auth.todo_app_session_revocations (unique per session). Ownership is derived from the authenticated principal; client must not provide user or session IDs."},"ITodoAppSystemAdminSessionRevocationResult":{"type":"object","properties":{"success":{"type":"boolean","description":"Whether the revocation workflow completed without errors across targeted sessions."},"revoked_sessions_count":{"type":"integer","format":"int32","minimum":0,"description":"Number of session rows updated with revoked_at in Auth.todo_app_sessions.\n\nEach should have a corresponding Auth.todo_app_session_revocations row (unique per session)."},"revoked_session_ids":{"type":"array","items":{"type":"string","format":"uuid"},"description":"Optional list of revoked session identifiers (UUIDs) for the caller's reference.\n\nNever includes raw session_token or refresh token secret values."},"revoked_refresh_tokens_count":{"type":"integer","format":"int32","minimum":0,"description":"Number of Auth.todo_app_refresh_tokens rows marked with revoked_at due to session revocation.\n\nUsed for summary only; secrets are never included."},"message":{"type":"string","description":"Optional human-readable message explaining the result (e.g., counts or policy notes)."}},"required":["success","revoked_sessions_count"],"description":"Summary response for system administrator session revocation.\n\nReflects updates in Prisma Auth models: todo_app_sessions, todo_app_session_revocations, and todo_app_refresh_tokens (revoked chains). Never exposes token secrets or password-like values."},"ETodoStatus":{"oneOf":[{"const":"open","description":"Enumerated lifecycle status for a Todo item.\n\nDerived from business-level expectations in Prisma model todo_app_todos.status with allowed values 'open' or 'completed'. Use 'open' for active/incomplete items and 'completed' when the item has been marked done."},{"const":"completed","description":"Enumerated lifecycle status for a Todo item.\n\nDerived from business-level expectations in Prisma model todo_app_todos.status with allowed values 'open' or 'completed'. Use 'open' for active/incomplete items and 'completed' when the item has been marked done."}],"description":"Enumerated lifecycle status for a Todo item.\n\nDerived from business-level expectations in Prisma model todo_app_todos.status with allowed values 'open' or 'completed'. Use 'open' for active/incomplete items and 'completed' when the item has been marked done."},"ITodoAppTodo":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nMaps to todo_app_todos.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner user's id.\n\nMaps to todo_app_todos.todo_app_user_id referencing todo_app_users.id. Read-only; used to enforce ownership and isolation."},"title":{"type":"string","description":"Required short text title of the todo.\n\nMaps to todo_app_todos.title. Business rule: 1–120 characters after trimming; must include at least one non-whitespace character."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional longer description of the todo.\n\nMaps to todo_app_todos.description. Typical policy limit 0–1000 (or up to 2000) characters."},"due_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional due date/time interpreted in the owner’s timezone.\n\nMaps to todo_app_todos.due_at (timestamptz). Used for overdue/today/future filters."},"status":{"type":"string","description":"Lifecycle status of the todo, expected values 'open' or 'completed' per business model.\n\nMaps to todo_app_todos.status."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp recorded when the todo is marked completed; cleared when reopened.\n\nMaps to todo_app_todos.completed_at."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (system-managed).\n\nMaps to todo_app_todos.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (system-managed).\n\nMaps to todo_app_todos.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp; non-null indicates exclusion from normal listings.\n\nMaps to todo_app_todos.deleted_at."}},"required":["id","todo_app_user_id","title","status","created_at","updated_at"],"description":"Primary Todo entity managed by end users.\n\nRepresents rows from Prisma model todo_app_todos with ownership, core fields, due date, status, completion timestamp, and lifecycle timestamps.\n\nSecurity: Ownership is enforced by the provider using todo_app_user_id; client requests must not set or change ownership through create/update operations."},"ITodoAppTodo.TStatusFilter":{"oneOf":[{"const":"open","description":"Filter for list views to select which todo statuses to include.\n\n- open: only open todos\n- completed: only completed todos\n- all: open and completed (deleted items excluded)"},{"const":"completed","description":"Filter for list views to select which todo statuses to include.\n\n- open: only open todos\n- completed: only completed todos\n- all: open and completed (deleted items excluded)"},{"const":"all","description":"Filter for list views to select which todo statuses to include.\n\n- open: only open todos\n- completed: only completed todos\n- all: open and completed (deleted items excluded)"}],"description":"Filter for list views to select which todo statuses to include.\n\n- open: only open todos\n- completed: only completed todos\n- all: open and completed (deleted items excluded)"},"ITodoAppTodo.TDueFilter":{"oneOf":[{"const":"overdue","description":"Due-window filter applied to list views.\n\n- overdue: due_at before now and not completed\n- today: due_at matches the user's current local calendar date and not completed\n- future: due_at after today (user's timezone) and not completed"},{"const":"today","description":"Due-window filter applied to list views.\n\n- overdue: due_at before now and not completed\n- today: due_at matches the user's current local calendar date and not completed\n- future: due_at after today (user's timezone) and not completed"},{"const":"future","description":"Due-window filter applied to list views.\n\n- overdue: due_at before now and not completed\n- today: due_at matches the user's current local calendar date and not completed\n- future: due_at after today (user's timezone) and not completed"}],"description":"Due-window filter applied to list views.\n\n- overdue: due_at before now and not completed\n- today: due_at matches the user's current local calendar date and not completed\n- future: due_at after today (user's timezone) and not completed"},"ITodoAppTodo.TSortField":{"oneOf":[{"const":"created_at","description":"Sortable fields for list views.\n\n- created_at (default): newest first\n- due_at: ascending by due date (items without due_at appear last)"},{"const":"due_at","description":"Sortable fields for list views.\n\n- created_at (default): newest first\n- due_at: ascending by due date (items without due_at appear last)"}],"description":"Sortable fields for list views.\n\n- created_at (default): newest first\n- due_at: ascending by due date (items without due_at appear last)"},"ITodoAppTodo.TSortDirection":{"oneOf":[{"const":"asc","description":"Sort direction for list views.\n\nDefault is desc for created_at sorting."},{"const":"desc","description":"Sort direction for list views.\n\nDefault is desc for created_at sorting."}],"description":"Sort direction for list views.\n\nDefault is desc for created_at sorting."},"ITodoAppTodo.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size (1–100). Default 20."},"status":{"oneOf":[{"const":"open"},{"const":"completed"},{"const":"all"},{"type":"null"}],"description":"Status filter: open, completed, or all (excluding deleted)."},"due_filter":{"oneOf":[{"const":"overdue"},{"const":"today"},{"const":"future"},{"type":"null"}],"description":"Due window filter relative to user’s timezone: overdue, today, future."},"sort":{"oneOf":[{"const":"created_at"},{"const":"due_at"},{"type":"null"}],"description":"Sort key. Default created_at."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction. Default desc."},"search":{"oneOf":[{"type":"string","maxLength":100},{"type":"null"}],"description":"Case-insensitive substring match across title and description. Empty/whitespace ignored."}},"required":[],"description":"Search/filter/pagination request for listing the caller’s Todos.\n\nMaps to business rules: default sort by created_at desc; supports status and due-window filters and keyword search."},"ITodoAppSystemAdminLogout.ICreate":{"type":"object","properties":{"reason":{"oneOf":[{"type":"string","maxLength":500},{"type":"null"}],"description":"Optional human-readable reason for logout to be recorded in session revocation.\n\nMaps to todo_app_session_revocations.reason where applicable."}},"required":[],"description":"Admin self-logout request body.\n\nContains only optional context fields. SECURITY: Must NOT include any actor/session IDs; the server derives these from the authenticated context."},"ITodoAppSystemAdminLogoutResult":{"type":"object","properties":{"session_id":{"type":"string","format":"uuid","description":"Identifier of the revoked session.\n\nMaps to todo_app_sessions.id and todo_app_session_revocations.todo_app_session_id."},"revoked_at":{"type":"string","format":"date-time","description":"Timestamp when the session was revoked.\n\nMaps to todo_app_sessions.revoked_at and todo_app_session_revocations.revoked_at."},"revoked_by":{"type":"string","description":"Actor category that performed the revocation (e.g., 'admin', 'user', or 'system').\n\nMaps to todo_app_session_revocations.revoked_by."},"reason":{"oneOf":[{"type":"string","maxLength":500},{"type":"null"}],"description":"Optional reason for revocation.\n\nMaps to todo_app_session_revocations.reason."},"message":{"type":"string","description":"Optional acknowledgment or user-facing message indicating the logout outcome."}},"required":["session_id","revoked_at","revoked_by"],"description":"Result of an admin self-logout operation.\n\nSummarizes the revocation of the current session using fields aligned with todo_app_session_revocations and todo_app_sessions. Contains no secrets or token values."},"EActivityType":{"oneOf":[{"const":"create","description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."},{"const":"update","description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."},{"const":"complete","description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."},{"const":"reopen","description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."},{"const":"delete","description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."}],"description":"Enumerated activity types for Todo history records.\n\nBased on Prisma model todo_app_todo_activities.activity_type and domain events. Represents append-only audit activities recorded for todos, including creation, content updates, completion, reopening, and deletion actions."},"ESortOrder":{"oneOf":[{"const":"asc","description":"Sort direction for list endpoints.\n\nAllowed values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request sort configurations such as ITodoAppEventType.IRequest.Sort. This is a generic enumeration applicable across list/search endpoints."},{"const":"desc","description":"Sort direction for list endpoints.\n\nAllowed values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request sort configurations such as ITodoAppEventType.IRequest.Sort. This is a generic enumeration applicable across list/search endpoints."}],"description":"Sort direction for list endpoints.\n\nAllowed values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request sort configurations such as ITodoAppEventType.IRequest.Sort. This is a generic enumeration applicable across list/search endpoints."},"IPage.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Desired page number (1-based). When null or omitted, defaults to the service policy (commonly 1).\n\nApplied uniformly across list/search endpoints as the standard page selector."},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Requested page size. Typical allowed range is 1–100 with a conventional default of 20.\n\nWhen null or omitted, the service applies its default page size."}},"required":[],"description":"Standard pagination request parameters used by list/search operations.\n\nBoth fields are optional and may be null to accept service defaults, ensuring consistent pagination input across endpoints."},"ITodoAppTodo.ICreate":{"type":"object","properties":{"title":{"type":"string","minLength":1,"maxLength":120,"description":"Title of the todo (required). Trimming and validation applied server-side.\n\nSecurity: Client cannot set ownership; server assigns owner from auth context."},"description":{"oneOf":[{"type":"string","maxLength":2000},{"type":"null"}],"description":"Optional longer description (0–1000/2000 chars by policy)."},"due_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional due date/time (ISO 8601). Interpreted in user’s timezone."}},"required":["title"],"description":"Create payload for a Todo (todo_app_todos).\n\nProhibitions: Do not accept actor IDs (todo_app_user_id), system fields (id/created_at/updated_at/completed_at/deleted_at), or status (server initializes to 'open')."},"ITodoAppTodo.IUpdate":{"type":"object","properties":{"title":{"oneOf":[{"type":"string","minLength":1,"maxLength":120},{"type":"null"}],"description":"Optional updated title; trimmed server-side and validated (1–120)."},"description":{"oneOf":[{"type":"string","maxLength":2000},{"type":"null"}],"description":"Optional updated description."},"due_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional updated due date/time (ISO 8601)."},"status":{"oneOf":[{"const":"open"},{"const":"completed"},{"type":"null"}],"description":"Optional status transition. 'completed' sets completed_at; 'open' clears completed_at."}},"required":[],"description":"Update payload for a Todo (todo_app_todos).\n\nAll fields optional (Partial<T>) and validated. Security: Do not accept ownership changes or system timestamps."},"ITodoAppTodoActivity.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100)."},"activity_types":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/EActivityType"}},{"type":"null"}],"description":"Filter by one or more activity types."},"occurred_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive lower bound for occurred_at."},"occurred_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive upper bound for occurred_at."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring filter over details/changed_fields (provider dependent)."},"sort":{"oneOf":[{"const":"occurred_at"},{"const":"created_at"},{"type":"null"}],"description":"Primary sort key (default occurred_at)."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction (default desc)."}},"required":[],"description":"List/search request for Todo activities.\n\nSecurity: Does not accept actor IDs; ownership is enforced by controller using authenticated context."},"ITodoAppTodoActivity":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nMaps to todo_app_todo_activities.id"},"todo_app_todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Target todo id (nullable to preserve audit history).\n\nMaps to todo_app_todo_activities.todo_app_todo_id"},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Actor user id (nullable to preserve history when user is purged).\n\nMaps to todo_app_todo_activities.todo_app_user_id"},"activity_type":{"type":"string","description":"Type of activity: 'create', 'update', 'complete', 'reopen', 'delete'.\n\nMaps to todo_app_todo_activities.activity_type."},"details":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable details (no secrets)."},"changed_fields":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional list of changed field names (comma-separated or structured text)."},"previous_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional prior status value when applicable."},"next_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional next status value when applicable."},"occurred_at":{"type":"string","format":"date-time","description":"Business-event timestamp when activity occurred.\n\nMaps to todo_app_todo_activities.occurred_at."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nMaps to todo_app_todo_activities.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Record update timestamp.\n\nMaps to todo_app_todo_activities.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for exceptional redaction.\n\nMaps to todo_app_todo_activities.deleted_at."}},"required":["id","activity_type","occurred_at","created_at","updated_at"],"description":"Activity record for a Todo (todo_app_todo_activities).\n\nAppend-only audit trail of Todo lifecycle events including optional details and status transitions. Security: does not store private todo text beyond the details field per policy."},"ITodoAppServicePolicy":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the policy record.\n\nPrisma column: todo_app_service_policies.id"},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Administrative owner/creator reference (optional).\n\nPrisma column: todo_app_service_policies.todo_app_user_id\n\nWhen present, it references todo_app_users.id; can be null for system-owned entries."},"namespace":{"type":"string","description":"Logical grouping for the policy (e.g., \"auth\", \"security\", \"privacy\").\n\nPrisma column: todo_app_service_policies.namespace"},"code":{"type":"string","description":"Globally unique policy code used by services to look up the policy.\n\nPrisma column: todo_app_service_policies.code\n\nUniqueness: @@unique([code])"},"name":{"type":"string","description":"Human-readable name of the policy.\n\nPrisma column: todo_app_service_policies.name"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed business description and operational guidance for this policy.\n\nPrisma column: todo_app_service_policies.description"},"value":{"type":"string","description":"Policy value stored as raw string; consumers interpret using value_type.\n\nPrisma column: todo_app_service_policies.value"},"value_type":{"type":"string","description":"Type hint indicating how to interpret value (e.g., \"string\", \"int\", \"double\", \"boolean\", \"datetime\", \"uri\").\n\nPrisma column: todo_app_service_policies.value_type"},"active":{"type":"boolean","description":"Whether this policy is currently in effect.\n\nPrisma column: todo_app_service_policies.active"},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional activation start time (inclusive) for the policy in business terms.\n\nPrisma column: todo_app_service_policies.effective_from"},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end time (exclusive) after which the policy is not in effect.\n\nPrisma column: todo_app_service_policies.effective_to"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the policy record.\n\nPrisma column: todo_app_service_policies.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the policy record.\n\nPrisma column: todo_app_service_policies.updated_at"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp used to logically archive the policy.\n\nPrisma column: todo_app_service_policies.deleted_at\n\nRecords with non-null deleted_at are excluded from normal flows."}},"required":["id","namespace","code","name","value","value_type","active","created_at","updated_at"],"description":"Service Policy entity reflecting Prisma model todo_app_service_policies.\n\nThis object describes governance policies controlling application behavior, rate limits, retention, and other constraints. It directly maps to the system table with the same name and includes administrative metadata.\n\nAll properties correspond to columns in the Prisma schema; nullable columns are expressed via oneOf with null.\n\nSecurity note: Although this is an administrative entity, avoid exposing secrets beyond what is modeled in this table. The value field is a raw string and should be interpreted using value_type at runtime."},"ITodoAppServicePolicy.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based).\n\nSee IPage.IRequest.page."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size (1–100).\n\nSee IPage.IRequest.limit."},"namespace":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by policy namespace.\n\nMaps to todo_app_service_policies.namespace."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by exact policy code.\n\nMaps to todo_app_service_policies.code (unique)."},"name_contains":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring match against name.\n\nLeverages trigram index on name when available."},"description_contains":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring match against description.\n\nLeverages trigram index on description when available."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by active flag.\n\nMaps to todo_app_service_policies.active."},"effective_from_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for effective_from.\n\nMaps to todo_app_service_policies.effective_from."},"effective_from_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for effective_from.\n\nMaps to todo_app_service_policies.effective_from."},"effective_to_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for effective_to.\n\nMaps to todo_app_service_policies.effective_to."},"effective_to_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for effective_to.\n\nMaps to todo_app_service_policies.effective_to."},"sort":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"const":"code"},{"const":"name"},{"const":"effective_from"},{"type":"null"}],"description":"Primary sort key for results.\n\nDefaults to created_at when omitted."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction for the chosen sort field.\n\nDefaults to desc when omitted."}},"required":[],"description":"Search and pagination request for Service Policies.\n\nThis request type aggregates common administrative filters over the todo_app_service_policies table along with standard pagination and sorting controls.\n\nSecurity: Do not accept or infer actor/user identifiers from this payload; administrative identity must come from the authenticated context."},"ITodoAppTodoDeletionEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nMaps to todo_app_todo_deletion_events.id."},"todo_app_todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Deleted todo’s id (nullable to preserve audit history).\n\nMaps to todo_app_todo_deletion_events.todo_app_todo_id."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Deleting actor’s user id (nullable for history).\n\nMaps to todo_app_todo_deletion_events.todo_app_user_id."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable reason; no secrets.\n\nMaps to todo_app_todo_deletion_events.reason."},"occurred_at":{"type":"string","format":"date-time","description":"Business-event timestamp when deletion occurred.\n\nMaps to todo_app_todo_deletion_events.occurred_at."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nMaps to todo_app_todo_deletion_events.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Record update timestamp.\n\nMaps to todo_app_todo_deletion_events.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp used only for administrative redaction.\n\nMaps to todo_app_todo_deletion_events.deleted_at."}},"required":["id","occurred_at","created_at","updated_at"],"description":"Deletion audit entry for a Todo (todo_app_todo_deletion_events).\n\nCaptures who deleted the Todo and when, with optional reason. Foreign keys are nullable to preserve audit history."},"ITodoAppTodoDeletionEvent.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100)."},"occurred_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive lower bound for occurred_at."},"occurred_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive upper bound for occurred_at."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring search over reason (provider dependent)."},"sort":{"oneOf":[{"const":"occurred_at"},{"const":"created_at"},{"type":"null"}],"description":"Primary sort field (default occurred_at)."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction (default desc)."}},"required":[],"description":"List/search request for Todo deletion events.\n\nSecurity: Does not accept actor IDs; ownership enforced via authenticated context."},"EConfigValueType":{"oneOf":[{"const":"string","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},{"const":"int","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},{"const":"double","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},{"const":"boolean","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},{"const":"datetime","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},{"const":"uri","description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."}],"description":"Type hint for interpreting raw string values stored in configuration/policy tables.\n\nAccepted values map to consumer-side parsers and must reflect the intended primitive or semantic type:\n- string: opaque text\n- int: 32/64-bit integer depending on consumer\n- double: IEEE 754 double-precision number\n- boolean: true/false\n- datetime: ISO 8601 date-time (timestamptz) representation\n- uri: RFC 3986 URI string\n\nReferenced by: todo_app_service_configurations.value_type and todo_app_service_policies.value_type."},"EServiceConfigurationOrderBy":{"oneOf":[{"const":"created_at","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"updated_at","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"namespace","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"environment","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"key","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"active","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"value_type","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"effective_from","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"effective_to","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},{"const":"id","description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."}],"description":"Sortable columns of todo_app_service_configurations for administrative listing.\n\nValues correspond to Prisma columns:\n- id: todo_app_service_configurations.id\n- namespace: .namespace\n- environment: .environment\n- key: .key\n- value_type: .value_type\n- active: .active\n- effective_from: .effective_from\n- effective_to: .effective_to\n- created_at: .created_at\n- updated_at: .updated_at\n\nUse with ESortOrder to form ORDER BY semantics."},"ITodoAppServicePolicy.ICreate":{"type":"object","properties":{"namespace":{"type":"string","description":"Logical grouping (e.g., \"auth\", \"privacy\")."},"code":{"type":"string","description":"Globally unique policy code."},"name":{"type":"string","description":"Human-readable policy name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description and operational guidance."},"value":{"type":"string","description":"Raw policy value interpreted by value_type."},"value_type":{"type":"string","description":"Hint for interpreting value (e.g., string, int, double, boolean, datetime, uri)."},"active":{"type":"boolean","description":"Whether the policy is enabled on creation."},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional activation start timestamp (inclusive)."},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional deactivation timestamp (exclusive)."}},"required":["namespace","code","name","value","value_type","active"],"description":"Creation payload for Service Policy.\n\nSecurity: Does not accept actor IDs or system-managed fields (id/created_at/updated_at/deleted_at)."},"ITodoAppServicePolicy.IUpdate":{"type":"object","properties":{"namespace":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Logical grouping."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Globally unique policy code."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Display name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description and notes."},"value":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Raw policy value."},"value_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Type hint for interpreting value."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Enable/disable policy."},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Activation start (inclusive)."},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Deactivation time (exclusive)."}},"required":[],"description":"Update payload for Service Policy. All fields optional (Partial semantics).\n\nSecurity: Does not accept system-managed fields or actor IDs."},"ITodoAppServiceConfiguration.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Page number (1-based index). Unsigned paging semantics; values < 1 are invalid. Suggested default is 1."},{"type":"null"}],"description":"Page number (1-based index)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100,"description":"Page size (items per page). Business rule: 1–100; common default is 20."},{"type":"null"}],"description":"Page size limit (records per page)."},"q":{"oneOf":[{"type":"string","minLength":1,"description":"Keyword for case-insensitive search over key and description via trigram indexes."},{"type":"null"}],"description":"Free-text search over key/description."},"namespace":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by .namespace (e.g., \"core\", \"auth\", \"billing\")."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by .environment (e.g., \"prod\", \"staging\", \"dev\")."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by .active state."},"value_type":{"oneOf":[{"$ref":"#/components/schemas/EConfigValueType"},{"type":"null"}],"description":"Filter by .value_type. Uses EConfigValueType."},"effective_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Instant to test effectivity window intersection against .effective_from/.effective_to."},"orderBy":{"oneOf":[{"$ref":"#/components/schemas/EServiceConfigurationOrderBy"},{"type":"null"}],"description":"Order by column for todo_app_service_configurations (see enum)."},"order":{"oneOf":[{"$ref":"#/components/schemas/ESortOrder"},{"type":"null"}],"description":"Sort direction to apply with orderBy."}},"required":[],"description":"Search/filter request for Service Configurations (todo_app_service_configurations).\n\nIncludes pagination (page, limit), keyword search (q) leveraging trigram indexes, domain filters (namespace, environment, active, value_type), an effectivity instant (effective_at), and sorting controls (orderBy/order). All fields are optional; null explicitly indicates omission.\n\nSecurity: Read-only filter structure. Do not include actor IDs (todo_app_user_id) or system fields (id/created_at/updated_at/deleted_at) in client requests; policy scoping is enforced by the route or server authorization."},"ITodoAppServiceConfiguration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nMaps to todo_app_service_configurations.id (UUID)."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid","description":"Administrative actor who created/updated this configuration.\n\nFK to todo_app_users.id (nullable)."},{"type":"null"}],"description":"Optional reference to the administrative user responsible for this record."},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional governing policy for this configuration.\n\nFK to todo_app_service_policies.id (nullable)."},{"type":"null"}],"description":"Optional linkage to a governing Service Policy that contextualizes evaluation."},"namespace":{"type":"string","description":"Logical grouping for configuration keys (e.g., \"core\", \"auth\", \"billing\").\n\nMaps to .namespace."},"environment":{"oneOf":[{"type":"string","description":"Optional environment discriminator (e.g., \"prod\", \"staging\", \"dev\")."},{"type":"null"}],"description":"Environment scope limiting when/where this configuration applies; null means global."},"key":{"type":"string","description":"Business key unique within (namespace, environment).\n\nMaps to .key with unique constraint @@unique([namespace, key, environment])."},"value":{"type":"string","description":"Stored configuration value in raw string form. Consumers interpret according to value_type.\n\nMaps to .value."},"value_type":{"$ref":"#/components/schemas/EConfigValueType","description":"Type hint for interpreting the stored value (e.g., \"string\", \"int\", \"double\", \"boolean\", \"datetime\", \"uri\")."},"is_secret":{"type":"boolean","description":"Whether this value is sensitive and should be redacted in logs and listings.\n\nMaps to .is_secret."},"description":{"oneOf":[{"type":"string","description":"Human-readable description and operational notes for this configuration key."},{"type":"null"}],"description":"Optional description for administrators; avoid including secrets here."},"active":{"type":"boolean","description":"Whether this configuration is currently enabled for evaluation.\n\nMaps to .active."},"effective_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional activation start time (timestamptz)."},{"type":"null"}],"description":"Optional start of effectivity window for this configuration (inclusive)."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional deactivation time (timestamptz)."},{"type":"null"}],"description":"Optional end of effectivity window for this configuration (inclusive)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for this configuration record.\n\nMaps to .created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for this configuration record.\n\nMaps to .updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Null indicates the record is active/not deleted."},{"type":"null"}],"description":"Logical deletion timestamp used to exclude records from normal flows."}},"required":["id","namespace","key","value","value_type","is_secret","active","created_at","updated_at"],"description":"Service Configuration entity (todo_app_service_configurations).\n\nThis response type corresponds to the Prisma model and includes core attributes and lifecycle timestamps. Sensitive values are flagged by is_secret; providers may choose to redact value in list summaries for secrets, but full details are available to authorized administrators.\n\nSecurity guidance: This type does not include raw credentials or tokens. Actor and policy FK fields are nullable and are read-only in API responses."},"ESortDirection":{"oneOf":[{"const":"asc","description":"Sort direction for ordered query results.\n\nAccepted values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request types that support sorting, including ITodoAppUserRateCounter.IRequest.order_dir and other list/search DTOs across the service. This is a shared, reusable enum for consistency."},{"const":"desc","description":"Sort direction for ordered query results.\n\nAccepted values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request types that support sorting, including ITodoAppUserRateCounter.IRequest.order_dir and other list/search DTOs across the service. This is a shared, reusable enum for consistency."}],"description":"Sort direction for ordered query results.\n\nAccepted values:\n- \"asc\": ascending order\n- \"desc\": descending order\n\nUsed by request types that support sorting, including ITodoAppUserRateCounter.IRequest.order_dir and other list/search DTOs across the service. This is a shared, reusable enum for consistency."},"EFeatureFlagSortBy":{"oneOf":[{"const":"created_at","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"updated_at","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"code","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"name","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"rollout_percentage","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"start_at","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},{"const":"end_at","description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."}],"description":"Sortable fields for Feature Flag listings.\n\nThese values correspond to columns in the Prisma model todo_app_feature_flags and common administrative sort keys."},"ITodoAppServiceConfiguration.ICreate":{"type":"object","properties":{"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy reference (FK → todo_app_service_policies.id).\n\nFrom Prisma model todo_app_service_configurations.todo_app_service_policy_id. When the API path already scopes by policy, omit or pass null."},"namespace":{"type":"string","description":"Logical grouping for the configuration keys (e.g., \"core\", \"auth\", \"billing\").\n\nPrisma column: todo_app_service_configurations.namespace."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional environment discriminator (e.g., \"prod\", \"staging\", \"dev\"). Null indicates environment-agnostic.\n\nPrisma column: todo_app_service_configurations.environment."},"key":{"type":"string","description":"Business key name unique within (namespace, environment).\n\nPrisma column: todo_app_service_configurations.key. Uniqueness is enforced with @@unique([namespace, key, environment])."},"value":{"type":"string","description":"Raw string value. Interpreted according to value_type.\n\nPrisma column: todo_app_service_configurations.value."},"value_type":{"type":"string","description":"Type hint for interpreting the stored value (e.g., \"string\", \"int\", \"double\", \"boolean\", \"datetime\", \"uri\").\n\nPrisma column: todo_app_service_configurations.value_type."},"is_secret":{"type":"boolean","description":"Whether the value is sensitive and should be redacted in logs and list views.\n\nPrisma column: todo_app_service_configurations.is_secret."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable description and operational notes for this configuration key.\n\nPrisma column: todo_app_service_configurations.description."},"active":{"type":"boolean","description":"Whether this configuration is currently enabled for evaluation.\n\nPrisma column: todo_app_service_configurations.active."},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional activation start time in business terms (RFC 3339 date-time).\n\nPrisma column: todo_app_service_configurations.effective_from."},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional deactivation time after which the configuration is not applied (RFC 3339 date-time).\n\nPrisma column: todo_app_service_configurations.effective_to."}},"required":["namespace","key","value","value_type","is_secret","active"],"description":"Creation payload for Systematic configuration records (todo_app_service_configurations).\n\nThis request excludes system-managed fields like id, created_at, updated_at, and deleted_at, and does not accept actor identifiers (todo_app_user_id). It may optionally link a governing policy via todo_app_service_policy_id depending on the endpoint design.\n\nReferences: Prisma model todo_app_service_configurations and its column descriptions in the provided schema."},"ITodoAppServiceConfiguration.IUpdate":{"type":"object","properties":{"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy reference (FK → todo_app_service_policies.id). May be changed by administrators as permitted by policy."},"namespace":{"type":"string","description":"Logical grouping name. Changing this may affect the uniqueness tuple (namespace, key, environment)."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional environment discriminator. Null indicates environment-agnostic."},"key":{"type":"string","description":"Business key name. Changing this must respect uniqueness with (namespace, environment)."},"value":{"type":"string","description":"Raw string value. Interpreted by value_type."},"value_type":{"type":"string","description":"Type hint for interpreting the stored value (e.g., \"string\", \"int\", \"double\", \"boolean\", \"datetime\", \"uri\")."},"is_secret":{"type":"boolean","description":"If true, the value should be redacted in logs and list views."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable notes or description."},"active":{"type":"boolean","description":"Whether this configuration is currently enabled for evaluation."},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Activation start time in RFC 3339 date-time."},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Deactivation time in RFC 3339 date-time."}},"required":[],"description":"Update payload for Systematic configuration records (todo_app_service_configurations).\n\nAll properties are optional to support partial updates. System-managed fields (id, created_at, updated_at, deleted_at) and actor identifiers (todo_app_user_id) are intentionally excluded from client input.\n\nReferences: Prisma model todo_app_service_configurations."},"ITodoAppFeatureFlag.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based). When null or omitted, service default applies."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit (1–100). When null or omitted, service default applies."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring search applied to code, name, and description where supported by indexes."},"namespace":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by namespace."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by environment (e.g., \"prod\", \"staging\")."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by exact code or use with search for substring matching."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by exact name or use with search for substring matching."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by active state."},"rollout_min":{"oneOf":[{"type":"integer","minimum":0,"maximum":100},{"type":"null"}],"description":"Minimum rollout percentage (0–100) inclusive."},"rollout_max":{"oneOf":[{"type":"integer","minimum":0,"maximum":100},{"type":"null"}],"description":"Maximum rollout percentage (0–100) inclusive."},"effective_now_only":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"When true, restrict to flags considered effective now (active=true and within start/end window when provided)."},"start_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound for start_at (RFC 3339)."},"start_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound for start_at (RFC 3339)."},"end_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound for end_at (RFC 3339)."},"end_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound for end_at (RFC 3339)."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound for created_at (RFC 3339)."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound for created_at (RFC 3339)."},"updated_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound for updated_at (RFC 3339)."},"updated_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound for updated_at (RFC 3339)."},"order_by":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"const":"code"},{"const":"name"},{"const":"rollout_percentage"},{"const":"start_at"},{"const":"end_at"},{"type":"null"}],"description":"Field to order by. Defaults to created_at when omitted."},"order_dir":{"oneOf":[{"$ref":"#/components/schemas/EOrderDirection"},{"type":"null"}],"description":"Sort direction for order_by. Defaults to \"desc\" when omitted."}},"required":[],"description":"List/search request for Feature Flags.\n\nProvides pagination, sorting, and rich filters aligned with Prisma columns on todo_app_feature_flags. No actor IDs are accepted; server derives authentication context."},"ITodoAppFeatureFlag":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID).\n\nPrisma: todo_app_feature_flags.id"},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy reference (FK → todo_app_service_policies.id).\n\nPrisma: todo_app_feature_flags.todo_app_service_policy_id"},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Administrative owner/creator user reference (FK → todo_app_users.id).\n\nPrisma: todo_app_feature_flags.todo_app_user_id"},"namespace":{"type":"string","description":"Logical grouping for the feature flag (e.g., \"ui\", \"payments\", \"sync\").\n\nPrisma: todo_app_feature_flags.namespace"},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deployment environment for the flag (e.g., \"prod\", \"staging\", \"dev\"). Null indicates environment-agnostic.\n\nPrisma: todo_app_feature_flags.environment"},"code":{"type":"string","description":"Unique flag code within (namespace, environment). Used for evaluation.\n\nPrisma: todo_app_feature_flags.code (unique in combination with namespace and environment)."},"name":{"type":"string","description":"Human-readable name of the feature flag.\n\nPrisma: todo_app_feature_flags.name"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business description, rollout plan, and guardrail notes.\n\nPrisma: todo_app_feature_flags.description"},"active":{"type":"boolean","description":"Whether the flag is enabled for evaluation.\n\nPrisma: todo_app_feature_flags.active"},"rollout_percentage":{"type":"integer","minimum":0,"maximum":100,"description":"Percentage-based rollout for progressive exposure (0–100).\n\nPrisma: todo_app_feature_flags.rollout_percentage"},"target_audience":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description of intended audience/segmentation in business terms.\n\nPrisma: todo_app_feature_flags.target_audience"},"start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional start time when the flag begins evaluation (RFC 3339 date-time).\n\nPrisma: todo_app_feature_flags.start_at"},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end time after which the flag is no longer evaluated (RFC 3339 date-time).\n\nPrisma: todo_app_feature_flags.end_at"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for this feature flag record.\n\nPrisma: todo_app_feature_flags.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for this feature flag record.\n\nPrisma: todo_app_feature_flags.updated_at"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. When non-null, the flag is considered removed from normal flows.\n\nPrisma: todo_app_feature_flags.deleted_at"}},"required":["id","namespace","code","name","active","rollout_percentage","created_at","updated_at"],"description":"Feature Flag entity mapped to Prisma model todo_app_feature_flags.\n\nContains administrative and lifecycle fields including rollout controls and optional evaluation windows. Nullable foreign keys are expressed with oneOf null patterns to preserve JSON Schema compliance."},"EOrderDirection":{"oneOf":[{"const":"asc","description":"Sort direction for ordered result sets.\n\nThis standard enumeration is used across request types where sorting applies. Values:\n- asc: ascending order\n- desc: descending order"},{"const":"desc","description":"Sort direction for ordered result sets.\n\nThis standard enumeration is used across request types where sorting applies. Values:\n- asc: ascending order\n- desc: descending order"}],"description":"Sort direction for ordered result sets.\n\nThis standard enumeration is used across request types where sorting applies. Values:\n- asc: ascending order\n- desc: descending order"},"ITodoAppFeatureFlag.ICreate":{"type":"object","properties":{"namespace":{"type":"string","description":"Logical grouping for the feature flag, e.g., \"ui\", \"payments\", or \"sync\".\n\nPrisma column: todo_app_feature_flags.namespace — groups flags by domain."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional deployment environment for the flag such as \"prod\", \"staging\", or \"dev\". When null or omitted, the flag is environment-agnostic.\n\nPrisma column: todo_app_feature_flags.environment (nullable)."},"code":{"type":"string","description":"Unique feature flag code within (namespace, environment). Used by services to evaluate features.\n\nPrisma column: todo_app_feature_flags.code with @@unique([namespace, code, environment])."},"name":{"type":"string","description":"Human-readable name for the feature flag.\n\nPrisma column: todo_app_feature_flags.name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business description, rollout plan, or guardrail notes for this flag.\n\nPrisma column: todo_app_feature_flags.description (nullable)."},"active":{"type":"boolean","description":"Whether the flag is enabled for evaluation.\n\nPrisma column: todo_app_feature_flags.active."},"rollout_percentage":{"type":"integer","minimum":0,"maximum":100,"description":"Percentage-based rollout (0–100) for progressive exposure when active.\n\nPrisma column: todo_app_feature_flags.rollout_percentage (integer)."},"target_audience":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional audience description or segmentation notes in business terms.\n\nPrisma column: todo_app_feature_flags.target_audience (nullable)."},"start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional start timestamp (ISO 8601 date-time) when flag begins evaluation.\n\nPrisma column: todo_app_feature_flags.start_at (timestamptz, nullable)."},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end timestamp (ISO 8601 date-time) after which flag is no longer evaluated.\n\nPrisma column: todo_app_feature_flags.end_at (timestamptz, nullable)."},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy reference (UUID). When using a policy-scoped endpoint, the server binds the policy from the path and may ignore this value.\n\nPrisma column: todo_app_feature_flags.todo_app_service_policy_id (nullable FK to todo_app_service_policies.id)."}},"required":["namespace","code","name","active","rollout_percentage"],"description":"Creation payload for a feature flag.\n\nThis DTO maps to Prisma model todo_app_feature_flags (Systematic namespace). Server controls system fields (id, created_at, updated_at, deleted_at) and actor bindings (todo_app_user_id). Security: do not include actor IDs in requests. Policy linkage may be provided here for general creation endpoints, but policy-scoped endpoints will override it from the path."},"ITodoAppFeatureFlag.IUpdate":{"type":"object","properties":{"namespace":{"type":"string","description":"Logical grouping for the feature flag, e.g., \"ui\", \"payments\", or \"sync\".\n\nPrisma column: todo_app_feature_flags.namespace."},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional deployment environment for the flag such as \"prod\", \"staging\", or \"dev\".\n\nPrisma column: todo_app_feature_flags.environment (nullable)."},"code":{"type":"string","description":"Feature flag code within (namespace, environment). Must remain unique per Prisma constraint.\n\nPrisma column: todo_app_feature_flags.code."},"name":{"type":"string","description":"Human-readable name for the feature flag.\n\nPrisma column: todo_app_feature_flags.name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business description, rollout plan, or guardrail notes for this flag.\n\nPrisma column: todo_app_feature_flags.description (nullable)."},"active":{"type":"boolean","description":"Whether the flag is enabled for evaluation.\n\nPrisma column: todo_app_feature_flags.active."},"rollout_percentage":{"type":"integer","minimum":0,"maximum":100,"description":"Percentage-based rollout (0–100) for progressive exposure when active.\n\nPrisma column: todo_app_feature_flags.rollout_percentage (integer)."},"target_audience":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional audience description or segmentation notes in business terms.\n\nPrisma column: todo_app_feature_flags.target_audience (nullable)."},"start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional start timestamp (ISO 8601 date-time) when the flag begins evaluation.\n\nPrisma column: todo_app_feature_flags.start_at (timestamptz, nullable)."},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end timestamp (ISO 8601 date-time) after which the flag is no longer evaluated.\n\nPrisma column: todo_app_feature_flags.end_at (timestamptz, nullable)."},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy reference (UUID). Under policy-scoped endpoints, servers may ignore this field and keep association to the path policy.\n\nPrisma column: todo_app_feature_flags.todo_app_service_policy_id (nullable FK)."}},"required":[],"description":"Update payload for a feature flag.\n\nAll fields are optional. System-managed fields (id, created_at, updated_at, deleted_at, todo_app_user_id) are not accepted. Under policy-scoped endpoints, changing policy linkage is not permitted."},"ITodoAppUser":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the user.\n\nPrisma column: todo_app_users.id (UUID PK)."},"email":{"type":"string","format":"email","description":"Unique email address used for authentication and notifications.\n\nPrisma column: todo_app_users.email with @@unique([email])."},"status":{"type":"string","description":"Account lifecycle status (e.g., pending_verification, active, suspended, deactivated).\n\nPrisma column: todo_app_users.status."},"email_verified":{"type":"boolean","description":"Indicates whether the user's email has been verified.\n\nPrisma column: todo_app_users.email_verified."},"verified_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when email verification succeeded; null until verified.\n\nPrisma column: todo_app_users.verified_at (timestamptz, nullable)."},"last_login_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the last successful login; null when none.\n\nPrisma column: todo_app_users.last_login_at (timestamptz, nullable)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the user record.\n\nPrisma column: todo_app_users.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the user record.\n\nPrisma column: todo_app_users.updated_at (timestamptz)."}},"required":["id","email","status","email_verified","created_at","updated_at"],"description":"User entity for administrative views without sensitive secrets.\n\nBased on Prisma model todo_app_users (Actors namespace). SECURITY: Do not expose password_hash, session/refresh tokens, or other sensitive credentials. Deleted users are excluded from normal reads and not represented here."},"ITodoAppUser.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Page number for pagination (1-based). Defaults per service policy when omitted."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Page size limit (1–100). Defaults to 20 when omitted."},"search":{"type":"string","description":"Case-insensitive substring search over email. Whitespace-only values are ignored."},"status":{"type":"array","items":{"type":"string"},"description":"Filter by one or more lifecycle statuses, e.g., [\"pending_verification\",\"active\",\"suspended\",\"deactivated\"]."},"email_verified":{"type":"boolean","description":"Filter by email verification flag (true/false)."},"created_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) of created_at time window (ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) of created_at time window (ISO 8601)."},"last_login_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) of last_login_at time window (ISO 8601)."},"last_login_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) of last_login_at time window (ISO 8601)."},"order_by":{"oneOf":[{"const":"created_at","description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."},{"const":"updated_at","description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."},{"const":"email","description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."},{"const":"last_login_at","description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."},{"const":"status","description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."}],"description":"Sort field for listing users. Allowed values reflect Prisma columns used in administration queries."},"order_direction":{"$ref":"#/components/schemas/EOrderDirection","description":"Sort direction for ordering results (asc or desc)."},"ids":{"type":"array","items":{"type":"string","format":"uuid"},"description":"Optional filter by specific user IDs (UUID array)."}},"required":[],"description":"Admin search/list request for user accounts based on Prisma model todo_app_users.\n\nSECURITY: For admin-only use. This request contains only filters and paging/sorting parameters; it never accepts actor identifiers for impersonation or any secret material."},"ITodoAppUserProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the user profile (UUID).\n\nPrisma: todo_app_user_profiles.id — Primary Key."},"todo_app_user_id":{"type":"string","format":"uuid","readOnly":true,"description":"Owner user's id linking to todo_app_users.id. Read-only in API; server derives ownership from authenticated context or path.\n\nPrisma: todo_app_user_profiles.todo_app_user_id — FK to todo_app_users enforcing 1:1."},"full_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User's full name for display. Optional and nullable. Trim in business logic; avoid control characters.\n\nPrisma: todo_app_user_profiles.full_name — Optional text."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional nickname/handle for casual display. Nullable.\n\nPrisma: todo_app_user_profiles.nickname — Optional text."},"avatar_uri":{"oneOf":[{"type":"string","format":"uri","maxLength":80000},{"type":"null"}],"description":"Optional URI of the avatar image. If present, MUST be a valid URI string. Max length 80,000 characters as per schema.\n\nPrisma: todo_app_user_profiles.avatar_uri — VarChar(80000), optional."},"created_at":{"type":"string","format":"date-time","readOnly":true,"description":"Creation timestamp of the profile (RFC 3339 date-time).\n\nPrisma: todo_app_user_profiles.created_at — timestamptz."},"updated_at":{"type":"string","format":"date-time","readOnly":true,"description":"Last update timestamp of the profile (RFC 3339 date-time).\n\nPrisma: todo_app_user_profiles.updated_at — timestamptz."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null indicates active record. When set, record is excluded from normal flows.\n\nPrisma: todo_app_user_profiles.deleted_at — timestamptz, optional."}},"required":["id","todo_app_user_id","created_at","updated_at"],"description":"User Profile entity attached 1:1 to a todo_app_users account.\n\nBased on Prisma table Actors.todo_app_user_profiles: stores presentational attributes (full_name, nickname, avatar_uri) and lifecycle timestamps. Ownership is enforced via todo_app_user_id and must NEVER be provided by clients — it is derived from authentication/path context.\n\nUse this type for response payloads. Sensitive credentials do not exist here; system fields are marked readOnly.","x-tags":["Actors","Profile"]},"ITodoAppUserProfile.ICreate":{"type":"object","properties":{"full_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional full name to display. Trimming and validation applied server-side."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional nickname/handle."},"avatar_uri":{"oneOf":[{"type":"string","format":"uri","maxLength":80000},{"type":"null"}],"description":"Optional avatar image URI. If provided, must be a valid URI string."}},"required":[],"description":"Create payload for user profile.\n\nSecurity: Do NOT accept ownership identifiers (todo_app_user_id). Server binds ownership from authenticated user or path. System fields (id, created_at, updated_at, deleted_at) are server-managed and not accepted.\n\nPrisma reference: Actors.todo_app_user_profiles — only user-facing fields are accepted here.","x-tags":["Actors","Profile","Create"]},"ITodoAppUserProfile.IUpdate":{"type":"object","properties":{"full_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional full name to update. Provide null to clear."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional nickname to update. Provide null to clear."},"avatar_uri":{"oneOf":[{"type":"string","format":"uri","maxLength":80000},{"type":"null"}],"description":"Optional avatar image URI to update. Must be a valid URI when provided; null clears the value."}},"required":[],"description":"Update payload for user profile.\n\nSecurity: Does NOT accept ownership (todo_app_user_id) or system-managed fields (id, created_at, updated_at, deleted_at). All fields are optional; nullable columns allow explicit null to clear values.\n\nPrisma reference: Actors.todo_app_user_profiles (full_name, nickname, avatar_uri)."},"ITodoAppUserPreference":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the preferences record (UUID).\n\nPrisma: todo_app_user_preferences.id — Primary Key."},"todo_app_user_id":{"type":"string","format":"uuid","readOnly":true,"description":"Owner user's id (FK to todo_app_users.id). Read-only — server derives from context.\n\nPrisma: todo_app_user_preferences.todo_app_user_id — 1:1 with users."},"timezone":{"type":"string","description":"IANA timezone identifier used to interpret due dates and display times (e.g., \"Asia/Seoul\").\n\nPrisma: todo_app_user_preferences.timezone — String. Business rule: must be a valid IANA tz name."},"locale":{"type":"string","description":"Locale in BCP 47 format controlling language/formatting (e.g., \"en-US\").\n\nPrisma: todo_app_user_preferences.locale — String."},"page_size":{"type":"integer","minimum":1,"maximum":100,"description":"Default pagination size for lists. Business rule: 1–100 (commonly default 20).\n\nPrisma: todo_app_user_preferences.page_size — Integer."},"created_at":{"type":"string","format":"date-time","readOnly":true,"description":"Creation timestamp of the preferences record.\n\nPrisma: todo_app_user_preferences.created_at — timestamptz."},"updated_at":{"type":"string","format":"date-time","readOnly":true,"description":"Last update timestamp of the preferences record.\n\nPrisma: todo_app_user_preferences.updated_at — timestamptz."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for lifecycle governance. Null when active.\n\nPrisma: todo_app_user_preferences.deleted_at — timestamptz, optional."}},"required":["id","todo_app_user_id","timezone","locale","page_size","created_at","updated_at"],"description":"User Preference entity (1:1 with todo_app_users) controlling timezone, locale, and default page size.\n\nBased on Prisma table Actors.todo_app_user_preferences. Ownership is enforced via todo_app_user_id and MUST NOT be accepted from clients. System fields are read-only. Page size follows business constraints 1–100; timezone and locale follow IANA/BCP 47 conventions, respectively.","x-tags":["Actors","Preferences"]},"IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information.\n\nContains numeric indicators for the current page, record limit per page, total records, and total pages. This standard structure is used across list endpoints and does not include business data."},"data":{"type":"array","items":{"type":"object","properties":{},"required":[]},"description":"Array of records for the current page.\n\nIMPORTANT: concrete IPage specializations must specify the precise item schema (e.g., IPageITodoAppGuestVisitor.ISummary). This base schema remains generic in the draft layer."}},"required":["pagination","data"],"description":"A page container.\n\nThis generic pagination wrapper provides page metadata and an array of records. It is used by administrative and user-facing list endpoints throughout the service."},"EGuestVisitorOrderBy":{"oneOf":[{"const":"granted_at","description":"Sortable columns for guestVisitor role assignment listings.\n\nThese correspond to fields on Actors.todo_app_guestvisitors and are supported by indexes: granted_at and created_at. revoked_at is included for completeness when sorting by revocation time."},{"const":"revoked_at","description":"Sortable columns for guestVisitor role assignment listings.\n\nThese correspond to fields on Actors.todo_app_guestvisitors and are supported by indexes: granted_at and created_at. revoked_at is included for completeness when sorting by revocation time."},{"const":"created_at","description":"Sortable columns for guestVisitor role assignment listings.\n\nThese correspond to fields on Actors.todo_app_guestvisitors and are supported by indexes: granted_at and created_at. revoked_at is included for completeness when sorting by revocation time."}],"description":"Sortable columns for guestVisitor role assignment listings.\n\nThese correspond to fields on Actors.todo_app_guestvisitors and are supported by indexes: granted_at and created_at. revoked_at is included for completeness when sorting by revocation time."},"ITodoAppUserPreference.ICreate":{"type":"object","properties":{"timezone":{"type":"string","minLength":3,"maxLength":100,"description":"IANA timezone identifier (e.g., \"Asia/Seoul\").\n\nMaps to Actors.todo_app_user_preferences.timezone. Used to interpret due dates and date-time displays for the user."},"locale":{"type":"string","minLength":2,"maxLength":35,"description":"BCP 47 language tag (e.g., \"en-US\").\n\nMaps to Actors.todo_app_user_preferences.locale. Controls UI text conventions and formatting."},"page_size":{"type":"integer","minimum":1,"maximum":100,"description":"Default pagination size for lists (1–100).\n\nMaps to Actors.todo_app_user_preferences.page_size. Typical default is 20."}},"required":["timezone","locale","page_size"],"description":"Create request for user preferences.\n\nSECURITY: Ownership and system timestamps are server-managed. Do not accept todo_app_user_id, id, created_at, updated_at, or deleted_at in this request.\n\nReferences Prisma model Actors.todo_app_user_preferences."},"ITodoAppUserPreference.IUpdate":{"type":"object","properties":{"timezone":{"oneOf":[{"type":"string","minLength":3,"maxLength":100},{"type":"null"}],"description":"IANA timezone identifier (e.g., \"Asia/Seoul\"). Nullable in request semantics to explicitly clear or reset to defaults when policy permits."},"locale":{"oneOf":[{"type":"string","minLength":2,"maxLength":35},{"type":"null"}],"description":"BCP 47 language tag (e.g., \"en-US\"). Nullable in request semantics to explicitly clear or reset to defaults when policy permits."},"page_size":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Default pagination size for lists (1–100). Nullable to express clearing or deferring to system default when allowed by policy."}},"required":[],"description":"Update request for user preferences (partial).\n\nAll fields are optional. SERVER RULES: Never allow client to set system fields or ownership. The server updates updated_at automatically.\n\nReferences Prisma model Actors.todo_app_user_preferences."},"ITodoAppGuestVisitor.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (uint32). See IPage.IRequest for defaults."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Records per page (uint32). Defaults and bounds follow IPage.IRequest."},"active_only":{"type":"boolean","description":"When true, returns only currently-active assignments (revoked_at IS NULL)."},"granted_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound for granted_at (inclusive). RFC 3339 date-time string."},"granted_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound for granted_at (inclusive). RFC 3339 date-time string."},"revoked_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound for revoked_at (inclusive)."},"revoked_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound for revoked_at (inclusive)."},"order_by":{"$ref":"#/components/schemas/EGuestVisitorOrderBy","description":"Sort key for the result set. Corresponds to sortable columns on todo_app_guestvisitors."},"order_dir":{"$ref":"#/components/schemas/ESortDirection","description":"Sort direction to apply together with order_by."}},"required":[],"description":"Search and pagination request for guestVisitor role assignments.\n\nThis request body is used by administrative endpoints that list role assignment history for a specific user (scoped by path). It never accepts identity fields (e.g., user IDs); the path/user context provides scoping.\n\nReferences Prisma model Actors.todo_app_guestvisitors."},"ITodoAppGuestVisitor":{"type":"object","properties":{"id":{"type":"string","format":"uuid","readOnly":true,"description":"Primary key.\n\nMaps to Actors.todo_app_guestvisitors.id."},"todo_app_user_id":{"type":"string","format":"uuid","readOnly":true,"description":"Owner user's UUID (FK to Actors.todo_app_users.id). Represents which account held the guestVisitor role."},"granted_at":{"type":"string","format":"date-time","readOnly":true,"description":"Timestamp when the guestVisitor role was granted.\n\nMaps to Actors.todo_app_guestvisitors.granted_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the role was revoked; null if currently active.\n\nMaps to Actors.todo_app_guestvisitors.revoked_at."},"created_at":{"type":"string","format":"date-time","readOnly":true,"description":"Record creation timestamp.\n\nMaps to Actors.todo_app_guestvisitors.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","readOnly":true,"description":"Record last update timestamp.\n\nMaps to Actors.todo_app_guestvisitors.updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for retention. When non-null, the record is excluded from normal listings (Actors.todo_app_guestvisitors.deleted_at)."}},"required":["id","todo_app_user_id","granted_at","created_at","updated_at"],"description":"Guest visitor role assignment history record.\n\nRepresents one grant/revoke period for the guestVisitor role as recorded in Prisma model Actors.todo_app_guestvisitors. Multiple rows may exist for a user over time to preserve audit history.\n\nThis type is read-only from client perspective; creation and updates are governed by system workflows."},"ITodoAppTodoUser":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the role assignment history record.\n\nMaps to Prisma column todo_app_todousers.id. Value is a UUID string."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner account identifier.\n\nMaps to Prisma FK todo_app_todousers.todo_app_user_id → todo_app_users.id. Identifies the user who held the todoUser role."},"granted_at":{"type":"string","format":"date-time","description":"Grant timestamp for the todoUser role.\n\nMaps to Prisma column todo_app_todousers.granted_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation timestamp when the role ended, or null when the assignment is currently active.\n\nMaps to Prisma column todo_app_todousers.revoked_at (nullable timestamptz)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nMaps to Prisma column todo_app_todousers.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nMaps to Prisma column todo_app_todousers.updated_at (timestamptz)."}},"required":["id","todo_app_user_id","granted_at","created_at","updated_at"],"description":"todoUser role assignment history entry.\n\nThis type represents a single record from the Prisma model todo_app_todousers (Actors namespace). It captures when a user was granted the todoUser role and, if applicable, when it was revoked. The model preserves multiple grant/revoke cycles for auditability and is not user-editable per schema comments.\n\nSecurity note: This is an administrative/audit-facing entity; avoid exposing internal soft-delete columns (deleted_at) in public responses unless explicitly required by governance tooling."},"ITodoAppTodoUser.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based typical). Optional; when null or absent, service defaults apply."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit. Business rule range 1–100; default commonly 20."},"sort":{"oneOf":[{"const":"granted_at","description":"Sort key among supported columns of todo_app_todousers."},{"const":"revoked_at","description":"Sort key among supported columns of todo_app_todousers."},{"const":"created_at","description":"Sort key among supported columns of todo_app_todousers."},{"const":"updated_at","description":"Sort key among supported columns of todo_app_todousers."}],"description":"Sort key among supported columns of todo_app_todousers."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction corresponding to the chosen sort key."},{"const":"desc","description":"Sort direction corresponding to the chosen sort key."}],"description":"Sort direction corresponding to the chosen sort key."},"activeOnly":{"type":"boolean","description":"When true, returns only currently-active assignments (revoked_at IS NULL)."},"granted_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on granted_at for filtering. ISO 8601, timestamptz."},"granted_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on granted_at for filtering. ISO 8601, timestamptz."},"revoked_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on revoked_at for filtering assignments that have been revoked."},"revoked_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on revoked_at for filtering assignments that have been revoked."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on created_at for audit/timeline filters."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on created_at for audit/timeline filters."},"updated_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on updated_at for audit/timeline filters."},"updated_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on updated_at for audit/timeline filters."}},"required":[],"description":"Request parameters for listing todoUser role assignment history (todo_app_todousers).\n\nThis request type supports pagination, sorting, and time-range filters over granted_at/revoked_at and creation/update timestamps. It intentionally excludes owner identifiers (todo_app_user_id) to comply with security guidance—path parameters provide scoping in administrative endpoints."},"ITodoAppSystemAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the system administrator role assignment history record.\n\nMaps to Prisma column todo_app_systemadmins.id. Value is a UUID string."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner account identifier.\n\nMaps to Prisma FK todo_app_systemadmins.todo_app_user_id → todo_app_users.id. Identifies the user who held the systemAdmin role."},"granted_at":{"type":"string","format":"date-time","description":"Grant timestamp for the systemAdmin role.\n\nMaps to Prisma column todo_app_systemadmins.granted_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation timestamp when the admin role ended, or null when the assignment is currently active.\n\nMaps to Prisma column todo_app_systemadmins.revoked_at (nullable timestamptz)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nMaps to Prisma column todo_app_systemadmins.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nMaps to Prisma column todo_app_systemadmins.updated_at (timestamptz)."}},"required":["id","todo_app_user_id","granted_at","created_at","updated_at"],"description":"systemAdmin role assignment history entry.\n\nThis type represents a single record from the Prisma model todo_app_systemadmins (Actors namespace). It captures when a user was granted system administrator privileges and, if applicable, when the grant was revoked. The model preserves multiple grant/revoke cycles for governance audits and is not user-editable per schema comments.\n\nSecurity note: This is an administrative/audit-facing entity; avoid exposing internal soft-delete columns (deleted_at) in public responses unless explicitly required by governance tooling."},"ITodoAppSystemAdmin.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based typical). Optional; when null or absent, service defaults apply."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit. Business rule range 1–100; default commonly 20."},"sort":{"oneOf":[{"const":"granted_at","description":"Sort key among supported columns of todo_app_systemadmins."},{"const":"revoked_at","description":"Sort key among supported columns of todo_app_systemadmins."},{"const":"created_at","description":"Sort key among supported columns of todo_app_systemadmins."},{"const":"updated_at","description":"Sort key among supported columns of todo_app_systemadmins."}],"description":"Sort key among supported columns of todo_app_systemadmins."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction corresponding to the chosen sort key."},{"const":"desc","description":"Sort direction corresponding to the chosen sort key."}],"description":"Sort direction corresponding to the chosen sort key."},"activeOnly":{"type":"boolean","description":"When true, returns only currently-active assignments (revoked_at IS NULL)."},"granted_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on granted_at for filtering. ISO 8601, timestamptz."},"granted_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on granted_at for filtering. ISO 8601, timestamptz."},"revoked_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on revoked_at for filtering assignments that have been revoked."},"revoked_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on revoked_at for filtering assignments that have been revoked."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on created_at for audit/timeline filters."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on created_at for audit/timeline filters."},"updated_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) on updated_at for audit/timeline filters."},"updated_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) on updated_at for audit/timeline filters."}},"required":[],"description":"Request parameters for listing systemAdmin role assignment history (todo_app_systemadmins).\n\nThis request type supports pagination, sorting, and time-range filters over granted_at/revoked_at and creation/update timestamps. It intentionally excludes owner identifiers (todo_app_user_id) to comply with security guidance—path parameters provide scoping in administrative endpoints."},"IDateRange":{"type":"object","properties":{"from":{"type":"string","format":"date-time","description":"Start of the inclusive time window (ISO 8601, timestamptz).\n\nUsed to filter records occurring at or after this timestamp."},"to":{"type":"string","format":"date-time","description":"End of the inclusive time window (ISO 8601, timestamptz).\n\nUsed to filter records occurring at or before this timestamp."}},"required":[],"description":"Generic date-time range filter expressed in the user's timezone context.\n\nBoth properties are optional; when omitted, the corresponding end of the range is unbounded."},"EDataExportStatus":{"oneOf":[{"const":"requested","description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"},{"const":"processing","description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"},{"const":"completed","description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"},{"const":"failed","description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"},{"const":"expired","description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"}],"description":"Workflow status values for personal data export jobs.\n\nCorresponds to todo_app_data_exports.status in Prisma:\n- requested: job was created and awaits processing\n- processing: job is currently being prepared\n- completed: job finished successfully (download_uri typically available)\n- failed: job ended with an error (status_message may describe)\n- expired: completed link has expired or record treated as expired by policy"},"EDataExportFormat":{"oneOf":[{"const":"json","description":"Supported export formats for personal data export jobs.\n\nPrisma stores export_format as a string; this enum documents common formats used by the application. Additional formats may be enabled by policy even if not listed here."},{"const":"csv","description":"Supported export formats for personal data export jobs.\n\nPrisma stores export_format as a string; this enum documents common formats used by the application. Additional formats may be enabled by policy even if not listed here."}],"description":"Supported export formats for personal data export jobs.\n\nPrisma stores export_format as a string; this enum documents common formats used by the application. Additional formats may be enabled by policy even if not listed here."},"EDataExportOrderBy":{"oneOf":[{"const":"created_at","description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"},{"const":"completed_at","description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"},{"const":"expires_at","description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"},{"const":"status","description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"},{"const":"export_format","description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"}],"description":"Sortable field names for todo_app_data_exports listings.\n\nMaps to columns on the Prisma model todo_app_data_exports and common list semantics:\n- created_at: default recency ordering\n- completed_at: completion timestamp when available\n- expires_at: link expiry timestamp when available\n- status: export workflow status\n- export_format: requested format name"},"IDataExportSort":{"type":"object","properties":{"orderBy":{"$ref":"#/components/schemas/EDataExportOrderBy","description":"Field used for ordering results. Values correspond to sortable columns in todo_app_data_exports."},"direction":{"$ref":"#/components/schemas/ESortDirection","description":"Optional sort direction. If omitted, implementations typically default to descending for timestamp fields."}},"required":["orderBy"],"description":"Sort directive for ITodoAppDataExport listings. Combines a target column with an optional sort direction."},"ITodoAppDataExport":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the export job.\n\nPrisma: todo_app_data_exports.id (UUID primary key)."},"status":{"type":"string","description":"Workflow status of the export job (e.g., requested, processing, completed, failed, expired).\n\nPrisma: todo_app_data_exports.status (String). Values are managed by the system and may evolve per policy; the API treats this as a string label."},"export_format":{"$ref":"#/components/schemas/ETodoAppDataExportFormat","description":"Requested output format for the export artifact.\n\nPrisma: todo_app_data_exports.export_format (String)."},"download_uri":{"oneOf":[{"type":"string","format":"uri"},{"type":"null"}],"description":"Secure download URI when the export is completed; null if not yet available or after expiry.\n\nPrisma: todo_app_data_exports.download_uri (String?, URI semantics)."},"file_size_bytes":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Size of the generated archive in bytes when available; null otherwise.\n\nPrisma: todo_app_data_exports.file_size_bytes (Int?)."},"checksum":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Integrity checksum (e.g., SHA-256) of the archive as a hexadecimal string; null when unavailable.\n\nPrisma: todo_app_data_exports.checksum (String?)."},"status_message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable message for job state or failure reason; null when not applicable.\n\nPrisma: todo_app_data_exports.status_message (String?)."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the export finished successfully; null if incomplete.\n\nPrisma: todo_app_data_exports.completed_at (Timestamptz?)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Time after which the download link is no longer valid; null when not issued.\n\nPrisma: todo_app_data_exports.expires_at (Timestamptz?)."},"request_ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address captured at the time of the export request; null when not captured.\n\nPrisma: todo_app_data_exports.request_ip (String?)."},"request_user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent string captured when the export was requested; null when not captured.\n\nPrisma: todo_app_data_exports.request_user_agent (String?)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (request time).\n\nPrisma: todo_app_data_exports.created_at (Timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp of the export job record.\n\nPrisma: todo_app_data_exports.updated_at (Timestamptz)."}},"required":["id","status","export_format","created_at","updated_at"],"description":"Personal data export job entity aligned to Prisma table todo_app_data_exports.\n\nThis type exposes non-sensitive attributes of an export job, including lifecycle state, format, optional download URI and integrity metadata, and timestamps. Ownership is enforced by the API layer based on authentication (todo_app_user_id) and is not passed from the client. Sensitive credentials or tokens are never included in this entity.\n\nPrisma reference: todo_app_data_exports."},"ITodoAppDataExport.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number (1-based). If null or omitted, service defaults are applied.","examples":{"v0":1}},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page size (allowed range 1–100). If null or omitted, service defaults apply.","examples":{"v0":20}},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional status filter (e.g., requested, processing, completed, failed, expired)."},"from_created_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound for created_at (inclusive), RFC 3339."},"to_created_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound for created_at (inclusive), RFC 3339."},"from_completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound for completed_at (inclusive), RFC 3339."},"to_completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound for completed_at (inclusive), RFC 3339."},"export_format":{"oneOf":[{"$ref":"#/components/schemas/ETodoAppDataExportFormat"},{"type":"null"}],"description":"Optional filter by export format."},"q":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional case-insensitive substring search (e.g., over status_message). Empty or whitespace-only strings are ignored."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort key: one of created_at, completed_at, expires_at. Defaults to created_at."},"order_dir":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort direction: asc or desc. Defaults to desc."}},"required":[],"description":"Search/filter request model for listing personal data export jobs.\n\nContains only query parameters; does not accept actor IDs or system-managed fields. Pagination semantics align with IPage containers.\n\nBacked by Prisma: todo_app_data_exports."},"EAccountDeletionRequestStatus":{"oneOf":[{"const":"pending_confirmation","description":"Workflow status values for account deletion requests.\n\nPrisma: todo_app_account_deletion_requests.status.\n\nThese values reflect business lifecycle states used by UI and processing jobs."},{"const":"scheduled","description":"Workflow status values for account deletion requests.\n\nPrisma: todo_app_account_deletion_requests.status.\n\nThese values reflect business lifecycle states used by UI and processing jobs."},{"const":"canceled","description":"Workflow status values for account deletion requests.\n\nPrisma: todo_app_account_deletion_requests.status.\n\nThese values reflect business lifecycle states used by UI and processing jobs."},{"const":"completed","description":"Workflow status values for account deletion requests.\n\nPrisma: todo_app_account_deletion_requests.status.\n\nThese values reflect business lifecycle states used by UI and processing jobs."}],"description":"Workflow status values for account deletion requests.\n\nPrisma: todo_app_account_deletion_requests.status.\n\nThese values reflect business lifecycle states used by UI and processing jobs."},"EAccountDeletionRequestOrderBy":{"oneOf":[{"const":"created_at","description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."},{"const":"scheduled_purge_at","description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."},{"const":"confirmed_at","description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."},{"const":"processed_at","description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."},{"const":"status","description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."}],"description":"Sortable fields for account deletion requests.\n\nMaps to columns on todo_app_account_deletion_requests and supports administrative or user-facing list ordering."},"IAccountDeletionRequestSort":{"type":"object","properties":{"orderBy":{"$ref":"#/components/schemas/EAccountDeletionRequestOrderBy","description":"Field used for ordering results."},"direction":{"$ref":"#/components/schemas/ESortDirection","description":"Optional sort direction. Default commonly desc for time-based fields."}},"required":["orderBy"],"description":"Sort directive for account deletion request listings."},"ITodoAppAccountDeletionRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_account_deletion_requests.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner user's identifier.\n\nPrisma: todo_app_account_deletion_requests.todo_app_user_id → todo_app_users.id.\n\nRead-only in API models; not accepted in request types."},"status":{"type":"string","description":"Deletion workflow status (e.g., pending_confirmation, scheduled, canceled, completed).\n\nPrisma: todo_app_account_deletion_requests.status."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable reason or note for the deletion request.\n\nPrisma: todo_app_account_deletion_requests.reason (nullable)."},"confirmed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the deletion request was confirmed by the user, if applicable.\n\nPrisma: confirmed_at (nullable timestamptz)."},"scheduled_purge_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Scheduled start time for purge operations per policy.\n\nPrisma: scheduled_purge_at (nullable timestamptz)."},"processed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when deletion processing completed for the account.\n\nPrisma: processed_at (nullable timestamptz)."},"canceled_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the deletion request was canceled or withdrawn.\n\nPrisma: canceled_at (nullable timestamptz)."},"request_ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address captured at request time for traceability.\n\nPrisma: request_ip (nullable)."},"request_user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent at request time for traceability.\n\nPrisma: request_user_agent (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the deletion request record.\n\nPrisma: created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the deletion request record.\n\nPrisma: updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp; when set, the record is excluded from normal flows.\n\nPrisma: deleted_at (nullable timestamptz)."}},"required":["id","todo_app_user_id","status","created_at","updated_at"],"description":"Account deletion request entity mapped to Prisma model todo_app_account_deletion_requests.\n\nThis model represents a user-initiated workflow to delete their account and associated personal data. It captures lifecycle timestamps (confirmation, scheduling, processing, cancellation) and request context (IP and user-agent) for governance and audit.\n\nOwnership is enforced via todo_app_user_id; request DTOs must never accept this field from clients. System-managed fields (id, created_at, updated_at, deleted_at) are read-only in responses."},"ITodoAppAccountDeletionRequest.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number to retrieve (min 1)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size (1–100)."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by workflow status (e.g., pending_confirmation, scheduled, canceled, completed)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: created_at from (inclusive)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: created_at to (inclusive)."},"scheduled_purge_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: scheduled_purge_at from (inclusive)."},"scheduled_purge_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: scheduled_purge_at to (inclusive)."},"processed_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: processed_at from (inclusive)."},"processed_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: processed_at to (inclusive)."},"canceled_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: canceled_at from (inclusive)."},"canceled_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: canceled_at to (inclusive)."},"q":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search over reason (policy-dependent)."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort field (e.g., created_at or scheduled_purge_at)."},"order_dir":{"oneOf":[{"$ref":"#/components/schemas/ESortDirection"},{"type":"null"}],"description":"Sort direction (asc or desc)."}},"required":[],"description":"Search, filtering, and pagination parameters for listing account deletion requests.\n\nSecurity: The server must constrain results to the authenticated owner (todo_app_user_id) and ignore any client attempt to scope by user identity."},"ITodoAppPrivacyConsent.EOrderBy":{"oneOf":[{"const":"granted_at","description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"},{"const":"revoked_at","description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"},{"const":"expires_at","description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"},{"const":"created_at","description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"},{"const":"updated_at","description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"}],"description":"Sortable fields for ITodoAppPrivacyConsent listings.\n\nFields map to Prisma columns on todo_app_privacy_consents:\n- granted_at: Timestamp when consent was granted\n- revoked_at: Timestamp when consent was revoked (nullable)\n- expires_at: Optional expiry timestamp\n- created_at: Row creation time\n- updated_at: Row last update time"},"ITodoAppSession.EOrderBy":{"oneOf":[{"const":"issued_at","description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"},{"const":"expires_at","description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"},{"const":"created_at","description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"},{"const":"updated_at","description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"},{"const":"revoked_at","description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"}],"description":"Sortable column keys for authentication sessions.\n\nBacked by Prisma model todo_app_sessions columns:\n- issued_at: Session issuance time (timestamptz)\n- expires_at: Session expiry time (timestamptz)\n- created_at: Record creation time (timestamptz)\n- updated_at: Record last update time (timestamptz)\n- revoked_at: Revocation time if the session has been revoked (nullable timestamptz)"},"ITodoAppSession.EStatus":{"oneOf":[{"const":"active","description":"Derived status filter for sessions in list operations.\n\nSemantics (implementation-level):\n- active: revoked_at is null and expires_at > now\n- expired: expires_at <= now (regardless of revoked_at)\n- revoked: revoked_at is not null\n- all: no status filtering applied"},{"const":"expired","description":"Derived status filter for sessions in list operations.\n\nSemantics (implementation-level):\n- active: revoked_at is null and expires_at > now\n- expired: expires_at <= now (regardless of revoked_at)\n- revoked: revoked_at is not null\n- all: no status filtering applied"},{"const":"revoked","description":"Derived status filter for sessions in list operations.\n\nSemantics (implementation-level):\n- active: revoked_at is null and expires_at > now\n- expired: expires_at <= now (regardless of revoked_at)\n- revoked: revoked_at is not null\n- all: no status filtering applied"},{"const":"all","description":"Derived status filter for sessions in list operations.\n\nSemantics (implementation-level):\n- active: revoked_at is null and expires_at > now\n- expired: expires_at <= now (regardless of revoked_at)\n- revoked: revoked_at is not null\n- all: no status filtering applied"}],"description":"Derived status filter for sessions in list operations.\n\nSemantics (implementation-level):\n- active: revoked_at is null and expires_at > now\n- expired: expires_at <= now (regardless of revoked_at)\n- revoked: revoked_at is not null\n- all: no status filtering applied"},"ITodoAppPrivacyConsent.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Items per page (1–100)."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search over purpose_name."},"purpose_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by purpose_code."},"granted":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by granted flag."},"granted_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound of granted_at (inclusive)."},"granted_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound of granted_at (inclusive)."},"revoked_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound of revoked_at."},"revoked_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound of revoked_at."}},"required":[],"description":"Search/filter parameters for listing privacy consents belonging to the authenticated user with pagination."},"ITodoAppPrivacyConsent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_privacy_consents.id."},"purpose_code":{"type":"string","description":"System code for the consent purpose.\n\nPrisma: todo_app_privacy_consents.purpose_code."},"purpose_name":{"type":"string","description":"Human-readable purpose name.\n\nPrisma: todo_app_privacy_consents.purpose_name."},"granted":{"type":"boolean","description":"Whether consent was granted (true) or withdrawn/denied (false).\n\nPrisma: todo_app_privacy_consents.granted."},"granted_at":{"type":"string","format":"date-time","description":"Timestamp when the consent action occurred.\n\nPrisma: todo_app_privacy_consents.granted_at."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when a previously granted consent was revoked.\n\nPrisma: todo_app_privacy_consents.revoked_at (nullable)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional expiry timestamp governed by policy.\n\nPrisma: todo_app_privacy_consents.expires_at (nullable)."},"policy_version":{"type":"string","description":"Policy/notice version at the time of consent.\n\nPrisma: todo_app_privacy_consents.policy_version."},"source":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Where/how consent was captured (web, mobile, settings page).\n\nPrisma: todo_app_privacy_consents.source (nullable)."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address captured at consent time.\n\nPrisma: todo_app_privacy_consents.ip (nullable)."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent captured at consent time.\n\nPrisma: todo_app_privacy_consents.user_agent (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_privacy_consents.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_privacy_consents.updated_at."}},"required":["id","purpose_code","purpose_name","granted","granted_at","policy_version","created_at","updated_at"],"description":"Privacy consent event mapped to Prisma model todo_app_privacy_consents. Exposes user-facing consent timeline metadata; does not include any authentication secrets."},"ITodoAppSession.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based). Default commonly 1."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit. Allowed range 1–100; default commonly 20."},"orderBy":{"oneOf":[{"$ref":"#/components/schemas/ITodoAppSession.EOrderBy"},{"type":"null"}],"description":"Field to sort by. See ITodoAppSession.EOrderBy."},"direction":{"oneOf":[{"$ref":"#/components/schemas/ESortDirection"},{"type":"null"}],"description":"Sort direction. Defaults to desc when omitted."},"status":{"oneOf":[{"$ref":"#/components/schemas/ITodoAppSession.EStatus"},{"type":"null"}],"description":"Derived session status filter (active/expired/revoked/all)."},"issued_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for issued_at in ISO 8601."},"issued_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for issued_at in ISO 8601."},"expires_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for expires_at in ISO 8601."},"expires_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for expires_at in ISO 8601."},"revoked_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for revoked_at in ISO 8601."},"revoked_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for revoked_at in ISO 8601."},"ip":{"oneOf":[{"type":"string","minLength":1,"maxLength":100},{"type":"null"}],"description":"Filter by client IP (substring or exact match per implementation)."},"user_agent":{"oneOf":[{"type":"string","minLength":1,"maxLength":500},{"type":"null"}],"description":"Filter by user agent string (substring match)."},"include_archived":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Include rows with deleted_at set. Default is false (exclude)."}},"required":[],"description":"Search/filter request for listing authentication sessions owned by the caller.\n\nTargets Prisma model todo_app_sessions. Security note: this request type does not accept actor IDs or system-managed fields."},"ITodoAppSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_sessions.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner user's UUID.\n\nPrisma FK: todo_app_sessions.todo_app_user_id → todo_app_users.id."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client IP observed at session creation or last use.\n\nPrisma: ip (nullable)."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client user-agent captured for security analytics/device recognition.\n\nPrisma: user_agent (nullable)."},"issued_at":{"type":"string","format":"date-time","description":"Session issuance timestamp.\n\nPrisma: issued_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Session expiry timestamp.\n\nPrisma: expires_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation timestamp, if the session has been revoked.\n\nPrisma: revoked_at (nullable timestamptz)."},"revoked_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable revocation reason (e.g., user logout, password change).\n\nPrisma: revoked_reason (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation time.\n\nPrisma: created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update time.\n\nPrisma: updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion time used for logical removal.\n\nPrisma: deleted_at (nullable timestamptz)."}},"required":["id","todo_app_user_id","issued_at","expires_at","created_at","updated_at"],"description":"Authentication session entity aligned with Prisma model todo_app_sessions.\n\nSecurity: The sensitive column session_token is intentionally omitted from this response type and must never be exposed in API responses."},"ERefreshTokenSortBy":{"oneOf":[{"const":"issued_at","description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"},{"const":"expires_at","description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"},{"const":"rotated_at","description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"},{"const":"revoked_at","description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"},{"const":"created_at","description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"}],"description":"Sortable field keys for refresh token listings.\n\nValues correspond to columns in Prisma model todo_app_refresh_tokens:\n- issued_at: token issuance time\n- expires_at: token expiration time\n- rotated_at: when this token was superseded by a child token (nullable)\n- revoked_at: explicit revocation time (nullable)\n- created_at: record creation time"},"ELoginAttemptSortBy":{"oneOf":[{"const":"occurred_at","description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."},{"const":"created_at","description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."},{"const":"ip","description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."},{"const":"email","description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."},{"const":"success","description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."}],"description":"Sort key for login attempt listings.\n\nMaps to columns on Prisma model todo_app_login_attempts:\n- occurred_at (event time)\n- created_at (record time)\n- ip (client address)\n- email (attempted email)\n- success (boolean outcome)\n\nDefault is typically occurred_at in descending order."},"ITodoAppSessionRevocation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the revocation record.\n\nPrisma: todo_app_session_revocations.id (UUID)."},"todo_app_session_id":{"type":"string","format":"uuid","description":"Target session identifier that was revoked.\n\nPrisma: todo_app_session_revocations.todo_app_session_id referencing todo_app_sessions.id."},"revoked_at":{"type":"string","format":"date-time","description":"Timestamp when the session was revoked.\n\nPrisma: todo_app_session_revocations.revoked_at (timestamptz)."},"revoked_by":{"type":"string","description":"Actor category performing the revocation (e.g., \"user\", \"system\", \"admin\").\n\nPrisma: todo_app_session_revocations.revoked_by."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable reason for revocation.\n\nPrisma: todo_app_session_revocations.reason (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ingest time).\n\nPrisma: todo_app_session_revocations.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_session_revocations.updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp for retention workflows.\n\nPrisma: todo_app_session_revocations.deleted_at (nullable)."}},"required":["id","todo_app_session_id","revoked_at","revoked_by","created_at","updated_at"],"description":"Session revocation record captured for audit and traceability.\n\nBased on Prisma model todo_app_session_revocations in schema-03-auth.prisma. Each record enforces a one-to-one association with a session via todo_app_session_id and stores who revoked the session (revoked_by), when it happened (revoked_at), and optional reason. Lifecycle timestamps created_at/updated_at are system-managed. Records may be soft-deleted via deleted_at for retention without hard removal.\n\nSecurity note: This type contains no secrets and can be safely returned to the authenticated session owner or administrators depending on endpoint context."},"ITodoAppRefreshToken":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the refresh token record.\n\nPrisma: todo_app_refresh_tokens.id (UUID)."},"todo_app_session_id":{"type":"string","format":"uuid","description":"Identifier of the parent session to which this refresh token belongs.\n\nPrisma: todo_app_refresh_tokens.todo_app_session_id referencing todo_app_sessions.id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Parent refresh token in the rotation chain. Null for the first token in a chain.\n\nPrisma: todo_app_refresh_tokens.parent_id (nullable self-reference)."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp when this refresh token was issued.\n\nPrisma: todo_app_refresh_tokens.issued_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when this refresh token expires.\n\nPrisma: todo_app_refresh_tokens.expires_at (timestamptz)."},"rotated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this token was rotated (superseded) by a child token.\n\nPrisma: todo_app_refresh_tokens.rotated_at (nullable)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this token was revoked, if applicable.\n\nPrisma: todo_app_refresh_tokens.revoked_at (nullable)."},"revoked_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable reason for revocation when applicable (e.g., password change).\n\nPrisma: todo_app_refresh_tokens.revoked_reason (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_refresh_tokens.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_refresh_tokens.updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp used for archival without hard delete.\n\nPrisma: todo_app_refresh_tokens.deleted_at (nullable)."}},"required":["id","todo_app_session_id","issued_at","expires_at","created_at","updated_at"],"description":"Refresh token metadata for a session with rotation and revocation lifecycle fields.\n\nDerived from Prisma model todo_app_refresh_tokens (schema-03-auth.prisma). SECURITY: This response intentionally omits sensitive columns `token` and `token_hash` and never exposes raw token material. Only non-secret metadata required for account security views is included.\n\nUse cases include GET-by-id details and list views where filters on rotation/revocation state are applied."},"ITodoAppRefreshToken.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based). When null or omitted, service default applies."},"limit":{"oneOf":[{"type":"integer","format":"int32","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100). When null or omitted, service default applies (commonly 20)."},"issued_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include tokens with issued_at >= this timestamp."},"issued_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include tokens with issued_at <= this timestamp."},"expires_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include tokens with expires_at >= this timestamp."},"expires_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include tokens with expires_at <= this timestamp."},"rotated":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by rotation status. true = rotated_at IS NOT NULL; false = rotated_at IS NULL."},"revoked":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by revocation status. true = revoked_at IS NOT NULL; false = revoked_at IS NULL."},"sort_by":{"$ref":"#/components/schemas/ERefreshTokenSortBy","description":"Sort key for results. Default: issued_at."},"sort_dir":{"$ref":"#/components/schemas/ESortDirection","description":"Sort direction for results. Default: desc."}},"required":[],"description":"Search, filtering, and pagination parameters for listing refresh tokens of a session.\n\nThis request type maps to the read-only list endpoint for Prisma model todo_app_refresh_tokens and supports filters over issued_at/expires_at windows and rotation/revocation state. Pagination controls (page, limit) follow service-wide conventions. Sorting uses stable column names defined by ERefreshTokenSortBy.\n\nSECURITY: This request never contains raw tokens, token hashes, or actor identifiers. The owning session identifier is taken from the path parameter, not the body."},"ITodoAppLoginAttempt.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based). When null or omitted, service default applies."},"limit":{"oneOf":[{"type":"integer","format":"int32","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100). When null or omitted, service default applies (commonly 20)."},"success":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by success state of the attempt. true = succeeded; false = failed."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Substring filter applied to the failure_reason column (e.g., \"invalid_credentials\")."},"email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Substring filter applied to the email column (as entered during the attempt)."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Substring filter applied to the ip column (client IP as text)."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Substring filter applied to the user_agent column."},"occurred_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include attempts with occurred_at >= this timestamp."},"occurred_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter: include attempts with occurred_at <= this timestamp."},"sort_by":{"$ref":"#/components/schemas/ELoginAttemptSortBy","description":"Sort key for results. Default: occurred_at."},"sort_dir":{"$ref":"#/components/schemas/ESortDirection","description":"Sort direction for results. Default: desc."}},"required":[],"description":"Search, filtering, and pagination parameters for listing authentication attempts.\n\nMaps to Prisma model todo_app_login_attempts in schema-03-auth.prisma. Supports filters on success state, textual attributes (email, ip, user_agent, failure_reason), and occurred_at windows. Pagination and sorting follow administrative and self-service security view patterns.\n\nSECURITY: The body does not accept user or actor identifiers; ownership scoping is derived from path parameters or authenticated context."},"ITodoAppLoginAttempt":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the login attempt.\n\nReferences Prisma model todo_app_login_attempts.id. UUID string uniquely identifying this authentication attempt record."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Resolved user's identifier if the attempted email maps to an account.\n\nPrisma: todo_app_login_attempts.todo_app_user_id (nullable FK to todo_app_users.id). Null when the email did not match a known account or when privacy-preserving flows avoid linking."},"email":{"type":"string","format":"email","description":"Email address used for the login attempt as entered by the client.\n\nPrisma: todo_app_login_attempts.email. Used for audit and rate limiting; does not imply the account exists."},"success":{"type":"boolean","description":"Outcome of the login attempt.\n\nPrisma: todo_app_login_attempts.success. true for successful authentication; false for failures."},"ip":{"type":"string","description":"Client IP address captured for the attempt (IPv4 or IPv6 in text form).\n\nPrisma: todo_app_login_attempts.ip. Used for security analytics and brute-force protection."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional client user-agent string.\n\nPrisma: todo_app_login_attempts.user_agent (nullable)."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional reason for failure (e.g., \"invalid_credentials\", \"suspended\").\n\nPrisma: todo_app_login_attempts.failure_reason (nullable)."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when the attempt occurred (business event time).\n\nPrisma: todo_app_login_attempts.occurred_at (timestamptz)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_login_attempts.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the attempt record.\n\nPrisma: todo_app_login_attempts.updated_at (timestamptz)."}},"required":["id","email","success","ip","occurred_at","created_at","updated_at"],"description":"Authentication attempt record for security analytics and brute‑force protection.\n\nThis schema maps to Prisma table todo_app_login_attempts and captures per‑attempt outcomes with actor linkage when available. Sensitive secrets are never stored here; only metadata such as email used, success flag, IP, and user agent are recorded."},"ITodoAppEmailVerification.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination (uint32 in business terms). When null, service default is applied."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum records per page (1–100 typical). When null, service default is applied."},"sent_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound (inclusive) for sent_at.\n\nPrisma: todo_app_email_verifications.sent_at."},"sent_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound (inclusive) for sent_at.\n\nPrisma: todo_app_email_verifications.sent_at."},"expires_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter lower bound (inclusive) for expires_at.\n\nPrisma: todo_app_email_verifications.expires_at."},"expires_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter upper bound (inclusive) for expires_at.\n\nPrisma: todo_app_email_verifications.expires_at."},"consumed":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Consumption state filter derived from consumed_at.\n\ntrue ⇒ consumed_at IS NOT NULL; false ⇒ consumed_at IS NULL; null ⇒ no filter."},"failure_count_min":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum failure_count (inclusive) filter.\n\nPrisma: todo_app_email_verifications.failure_count."},"failure_count_max":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum failure_count (inclusive) filter.\n\nPrisma: todo_app_email_verifications.failure_count."},"target_email":{"oneOf":[{"type":"string","format":"email"},{"type":"null"}],"description":"Optional target email filter.\n\nPrisma: todo_app_email_verifications.target_email."},"order_by":{"oneOf":[{"const":"sent_at"},{"const":"expires_at"},{"const":"created_at"},{"const":"failure_count"},{"type":"null"}],"description":"Sort key for results. Defaults are implementation-defined; common default is sent_at desc."},"order_dir":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction for order_by.\n\nAllowed values: asc | desc."}},"required":[],"description":"Search, filter, sort, and paginate email verification records.\n\nMaps to Prisma table todo_app_email_verifications. All fields here are request-only filters and do not correspond to persisted columns except where explicitly noted (e.g., sent_at, expires_at, failure_count)."},"ITodoAppPasswordReset":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the password reset request.\n\nPrisma: todo_app_password_resets.id (UUID)."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Related user's identifier when resolvable; null for privacy-preserving requests.\n\nPrisma: todo_app_password_resets.todo_app_user_id (nullable FK to todo_app_users.id)."},"email":{"type":"string","format":"email","description":"Email address provided for the reset request.\n\nPrisma: todo_app_password_resets.email. Note: Token secrets are never exposed in responses."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when the reset was requested.\n\nPrisma: todo_app_password_resets.requested_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when the reset token expires.\n\nPrisma: todo_app_password_resets.expires_at (timestamptz)."},"consumed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the reset token was used, if applicable.\n\nPrisma: todo_app_password_resets.consumed_at (nullable timestamptz)."},"requested_by_ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client IP captured at request time (IPv4/IPv6 text).\n\nPrisma: todo_app_password_resets.requested_by_ip (nullable string)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_password_resets.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_password_resets.updated_at (timestamptz)."}},"required":["id","email","requested_at","expires_at","created_at","updated_at"],"description":"Password reset record metadata (response-safe).\n\nThis schema maps to Prisma table todo_app_password_resets and intentionally omits sensitive fields such as token/token_hash. It exposes only non-secret metadata suitable for end-user display and administrative review within privacy constraints."},"ETodoAppDataExportFormat":{"oneOf":[{"const":"json","description":"Enumerated export formats for personal data exports.\n\nThis enumeration constrains the todo_app_data_exports.export_format column to values supported by the API contract. Typical formats for MVP are \"json\" and \"csv\". Services validate this field during job creation and persist the chosen value as a raw string in the Prisma table.\n\nPrisma reference: todo_app_data_exports.export_format (String)."},{"const":"csv","description":"Enumerated export formats for personal data exports.\n\nThis enumeration constrains the todo_app_data_exports.export_format column to values supported by the API contract. Typical formats for MVP are \"json\" and \"csv\". Services validate this field during job creation and persist the chosen value as a raw string in the Prisma table.\n\nPrisma reference: todo_app_data_exports.export_format (String)."}],"description":"Enumerated export formats for personal data exports.\n\nThis enumeration constrains the todo_app_data_exports.export_format column to values supported by the API contract. Typical formats for MVP are \"json\" and \"csv\". Services validate this field during job creation and persist the chosen value as a raw string in the Prisma table.\n\nPrisma reference: todo_app_data_exports.export_format (String)."},"ITodoAppDataExport.ICreate":{"type":"object","properties":{"export_format":{"$ref":"#/components/schemas/ETodoAppDataExportFormat","description":"Requested output format for the data export job.\n\nPrisma target: todo_app_data_exports.export_format. The server will validate and persist this value while other lifecycle fields are system-managed."}},"required":["export_format"],"description":"Creation request for a personal data export job.\n\nThis request body maps to Prisma table todo_app_data_exports. Only business fields that the client is allowed to set are included (export_format). System-managed fields such as status, download_uri, file_size_bytes, checksum, completed_at, and expires_at are not accepted in the request."},"ERateLimitScope":{"oneOf":[{"const":"user","description":"Scope of rate limiting subject as defined in Prisma model todo_app_rate_limits.scope.\n\n- user: per authenticated account (todo_app_users.id)\n- ip: per client IP address string\n- global: system-wide throttling with no subject-specific dimension"},{"const":"ip","description":"Scope of rate limiting subject as defined in Prisma model todo_app_rate_limits.scope.\n\n- user: per authenticated account (todo_app_users.id)\n- ip: per client IP address string\n- global: system-wide throttling with no subject-specific dimension"},{"const":"global","description":"Scope of rate limiting subject as defined in Prisma model todo_app_rate_limits.scope.\n\n- user: per authenticated account (todo_app_users.id)\n- ip: per client IP address string\n- global: system-wide throttling with no subject-specific dimension"}],"description":"Scope of rate limiting subject as defined in Prisma model todo_app_rate_limits.scope.\n\n- user: per authenticated account (todo_app_users.id)\n- ip: per client IP address string\n- global: system-wide throttling with no subject-specific dimension"},"ERateLimitCategory":{"oneOf":[{"const":"read","description":"Functional category for rate limiting aligned with Prisma model todo_app_rate_limits.category.\n\nTypical groupings:\n- read: read/list/search operations\n- write: create/update/delete operations\n- auth: authentication and session-related flows"},{"const":"write","description":"Functional category for rate limiting aligned with Prisma model todo_app_rate_limits.category.\n\nTypical groupings:\n- read: read/list/search operations\n- write: create/update/delete operations\n- auth: authentication and session-related flows"},{"const":"auth","description":"Functional category for rate limiting aligned with Prisma model todo_app_rate_limits.category.\n\nTypical groupings:\n- read: read/list/search operations\n- write: create/update/delete operations\n- auth: authentication and session-related flows"}],"description":"Functional category for rate limiting aligned with Prisma model todo_app_rate_limits.category.\n\nTypical groupings:\n- read: read/list/search operations\n- write: create/update/delete operations\n- auth: authentication and session-related flows"},"ERateLimitOrderBy":{"oneOf":[{"const":"created_at","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"updated_at","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"code","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"scope","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"category","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"window_seconds","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},{"const":"max_requests","description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."}],"description":"Sortable fields for rate limit listings.\n\nValues align with ITodoAppRateLimit properties for consistent ordering. Use together with ESortDirection for ascending or descending order."},"ITodoAppRateLimit":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_rate_limits.id"},"code":{"type":"string","description":"Unique business code for this policy.\n\nPrisma: todo_app_rate_limits.code (unique)"},"name":{"type":"string","description":"Human-readable name.\n\nPrisma: todo_app_rate_limits.name"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional administrative description/notes.\n\nPrisma: todo_app_rate_limits.description (nullable)"},"scope":{"$ref":"#/components/schemas/ERateLimitScope","description":"Subject dimension (user, ip, global).\n\nPrisma: todo_app_rate_limits.scope"},"category":{"$ref":"#/components/schemas/ERateLimitCategory","description":"Action category (read, write, auth).\n\nPrisma: todo_app_rate_limits.category"},"window_seconds":{"type":"integer","description":"Fixed window duration in seconds.\n\nPrisma: todo_app_rate_limits.window_seconds"},"max_requests":{"type":"integer","description":"Maximum allowed requests within the window.\n\nPrisma: todo_app_rate_limits.max_requests"},"burst_size":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional token bucket burst size.\n\nPrisma: todo_app_rate_limits.burst_size (nullable)"},"sliding_window":{"type":"boolean","description":"True for sliding window approximation; false for fixed window.\n\nPrisma: todo_app_rate_limits.sliding_window"},"enabled":{"type":"boolean","description":"Administrative toggle to enable/disable enforcement.\n\nPrisma: todo_app_rate_limits.enabled"},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_rate_limits.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_rate_limits.updated_at"}},"required":["id","code","name","scope","category","window_seconds","max_requests","sliding_window","enabled","created_at","updated_at"],"description":"Administrative rate limit policy mapped to Prisma model todo_app_rate_limits.\n\nRepresents throttling configuration used by enforcement counters and governance tooling. Sensitive system internals (e.g., deleted_at) are intentionally omitted from the response type."},"ITodoAppRateLimit.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number (1-based). When null or omitted, defaults per system policy.\n\nStandard pagination request."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Items per page (allowed 1–100). When null or omitted, defaults per policy."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search across code/name/description."},"scope":{"oneOf":[{"$ref":"#/components/schemas/ERateLimitScope"},{"type":"null"}],"description":"Filter by scope (user, ip, global)."},"category":{"oneOf":[{"$ref":"#/components/schemas/ERateLimitCategory"},{"type":"null"}],"description":"Filter by category (read, write, auth)."},"enabled":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by enforcement state."},"sliding_window":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by window algorithm type."},"window_seconds_min":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum window_seconds filter."},"window_seconds_max":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum window_seconds filter."},"max_requests_min":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum max_requests filter."},"max_requests_max":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum max_requests filter."}},"required":[],"description":"Search/filter parameters for listing todo_app_rate_limits policies with pagination. Only non-persistent query parameters are included."},"ITodoAppAccountDeletionRequest.ICreate":{"type":"object","properties":{"reason":{"type":"string","description":"Optional user-provided reason or context for the deletion request.\n\nPrisma: todo_app_account_deletion_requests.reason.\n\nSECURITY: Server sets ownership (todo_app_user_id), status, and timestamps. Client must NOT provide system fields."}},"required":[],"description":"Request body for creating a new account deletion request.\n\nOnly accepts user-supplied reason. All system/ownership and lifecycle fields are assigned by the server."},"ITodoAppPrivacyConsent.ICreate":{"type":"object","properties":{"purpose_code":{"type":"string","description":"System code for the consent purpose (e.g., analytics, marketing_email).\n\nMaps to todo_app_privacy_consents.purpose_code and is required to classify the consent."},"purpose_name":{"type":"string","description":"Human-readable purpose name.\n\nMaps to todo_app_privacy_consents.purpose_name."},"granted":{"type":"boolean","description":"Whether consent is granted (true) or denied/withdrawn (false) at event time.\n\nMaps to todo_app_privacy_consents.granted."},"policy_version":{"type":"string","description":"Policy or notice version identifier effective at the time of consent.\n\nMaps to todo_app_privacy_consents.policy_version."},"granted_at":{"type":"string","format":"date-time","description":"Timestamp when the consent event occurred. If omitted, the server records current time.\n\nMaps to todo_app_privacy_consents.granted_at."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when a previously granted consent was revoked. Provide when recording a withdrawal event.\n\nMaps to todo_app_privacy_consents.revoked_at."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional expiry timestamp governed by policy.\n\nMaps to todo_app_privacy_consents.expires_at."},"source":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Where/how the consent was captured (e.g., web, mobile, settings_page).\n\nMaps to todo_app_privacy_consents.source."}},"required":["purpose_code","purpose_name","granted","policy_version"],"description":"Append-only creation payload for privacy consent events.\n\nSecurity: Do not accept actor identifiers in the request; ownership is derived from authentication. System-managed fields (id, created_at, updated_at) are excluded by design. Optional timestamps allow backfilling when permitted by policy."},"ITodoAppRateLimit.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique business code for the new policy (e.g., \"write_per_minute\"). Must be unique across all policies."},"name":{"type":"string","description":"Human-readable name for consoles and documentation."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional administrative description and notes."},"scope":{"$ref":"#/components/schemas/ERateLimitScope","description":"Subject dimension for enforcement (user, ip, or global)."},"category":{"$ref":"#/components/schemas/ERateLimitCategory","description":"Functional category of actions affected by this policy (read, write, auth)."},"window_seconds":{"type":"integer","minimum":1,"description":"Window duration in seconds. Must be >= 1."},"max_requests":{"type":"integer","minimum":1,"description":"Maximum allowed requests within the window. Must be >= 1."},"burst_size":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Optional burst size allowing temporary spikes; null to disable burst."},"sliding_window":{"type":"boolean","description":"True for sliding window approximation; false for fixed window."},"enabled":{"type":"boolean","description":"Whether this policy is enforced upon creation."}},"required":["code","name","scope","category","window_seconds","max_requests","sliding_window","enabled"],"description":"Create request body for a rate limit policy (todo_app_rate_limits).\n\nSecurity: Does not accept system-generated fields (id, created_at, updated_at, deleted_at) or actor identifiers."},"ITodoAppRateLimit.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Updated unique code. Must remain unique.\n\nPrisma: non-nullable; omit property to leave unchanged."},"name":{"type":"string","description":"Updated display name.\n\nPrisma: non-nullable; omit to leave unchanged."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated description; null removes value (column is nullable)."},"scope":{"$ref":"#/components/schemas/ERateLimitScope","description":"Updated scope.\n\nPrisma: non-nullable; omit to leave unchanged."},"category":{"$ref":"#/components/schemas/ERateLimitCategory","description":"Updated category.\n\nPrisma: non-nullable; omit to leave unchanged."},"window_seconds":{"type":"integer","minimum":1,"description":"Updated window duration in seconds.\n\nPrisma: non-nullable; omit to leave unchanged."},"max_requests":{"type":"integer","minimum":1,"description":"Updated max requests per window.\n\nPrisma: non-nullable; omit to leave unchanged."},"burst_size":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Updated burst size; null removes burst (column is nullable)."},"sliding_window":{"type":"boolean","description":"Updated sliding-window flag.\n\nPrisma: non-nullable; omit to leave unchanged."},"enabled":{"type":"boolean","description":"Updated enabled flag.\n\nPrisma: non-nullable; omit to leave unchanged."}},"required":[],"description":"Update request for todo_app_rate_limits.\n\nAll fields are optional. Only columns that are nullable support explicit null; others must be omitted when unchanged."},"ITodoAppEventType":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the event type.\n\nPrisma: todo_app_event_types.id (UUID)."},"code":{"type":"string","description":"Stable machine-readable identifier (e.g., \"todo.created\"). Must remain stable for classification.\n\nPrisma: todo_app_event_types.code with @@unique([code])."},"name":{"type":"string","description":"Human-readable title of the event type for administration and reporting.\n\nPrisma: todo_app_event_types.name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description explaining when and why this event type is emitted.\n\nPrisma: todo_app_event_types.description (nullable)."},"active":{"type":"boolean","description":"Whether this event type is currently enabled for emission in the system.\n\nPrisma: todo_app_event_types.active."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_event_types.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_event_types.updated_at (timestamptz)."}},"required":["id","code","name","active","created_at","updated_at"],"description":"Business event taxonomy entity mapped to Prisma model todo_app_event_types.\n\nDefines stable codes used by append-only event logs and analytics. The response excludes any password or token secrets (not present on this model)."},"ITodoAppEventType.ESortKey":{"oneOf":[{"const":"created_at","description":"Allowed sort keys for ITodoAppEventType.IRequest list queries.\n\nBased on todo_app_event_types columns: created_at, updated_at, code, name."},{"const":"updated_at","description":"Allowed sort keys for ITodoAppEventType.IRequest list queries.\n\nBased on todo_app_event_types columns: created_at, updated_at, code, name."},{"const":"code","description":"Allowed sort keys for ITodoAppEventType.IRequest list queries.\n\nBased on todo_app_event_types columns: created_at, updated_at, code, name."},{"const":"name","description":"Allowed sort keys for ITodoAppEventType.IRequest list queries.\n\nBased on todo_app_event_types columns: created_at, updated_at, code, name."}],"description":"Allowed sort keys for ITodoAppEventType.IRequest list queries.\n\nBased on todo_app_event_types columns: created_at, updated_at, code, name."},"ITodoAppEventType.IRequest.Sort":{"type":"object","properties":{"key":{"$ref":"#/components/schemas/ITodoAppEventType.ESortKey","description":"Primary field to order results by."},"order":{"$ref":"#/components/schemas/ESortOrder","description":"Sort direction. Defaults to \"desc\" if omitted by provider policy."}},"required":["key"],"description":"Sort configuration for ITodoAppEventType.IRequest.\n\nEncapsulates the sort key and order to avoid inline object definitions in request types."},"ITodoAppEventType.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Page number (1-based)."},{"type":"null"}],"description":"Page number for pagination. Must be >= 1; null to let server default."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100,"description":"Page size (items per page). Range: 1–100."},{"type":"null"}],"description":"Page size (items per page). Allowed range 1–100; null to use server default."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by enablement state (true/false). Null to ignore filter."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by code (exact or substring per provider implementation)."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by name (exact or substring per provider implementation)."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search applied to code/name/description, leveraging trigram indexes where available."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for created_at in ISO 8601 format."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for created_at in ISO 8601 format."},"sort":{"oneOf":[{"$ref":"#/components/schemas/ITodoAppEventType.IRequest.Sort"},{"type":"null"}],"description":"Sorting configuration. Defaults may be applied server-side if omitted."}},"required":[],"description":"List/search request body for event types (todo_app_event_types).\n\nIncludes pagination, filters (active, code, name, search), optional created_at window, and a structured sort clause. Pagination follows business rules: page >= 1; limit 1–100. Uses explicit nulls to disable filters where applicable."},"ITodoAppEventType.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Stable machine-readable identifier (e.g., \"todo.created\"). Must be unique.\n\nPrisma: todo_app_event_types.code (unique)."},"name":{"type":"string","description":"Human-readable title.\n\nPrisma: todo_app_event_types.name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description for administrative use.\n\nPrisma: todo_app_event_types.description (nullable)."},"active":{"type":"boolean","description":"Whether this event type is enabled for emission.\n\nPrisma: todo_app_event_types.active."}},"required":["code","name","active"],"description":"Creation payload for event taxonomy (todo_app_event_types). Excludes system-generated fields and never accepts IDs from client."},"ITodoAppEventType.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"New machine-readable code for the event type. Must remain globally unique if changed.\n\nMaps to todo_app_event_types.code. Note: Many deployments keep this immutable; if change is allowed, enforce uniqueness."},"name":{"type":"string","description":"New human-readable name for the event type.\n\nMaps to todo_app_event_types.name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated description; set to null to clear.\n\nMaps to todo_app_event_types.description."},"active":{"type":"boolean","description":"Toggle for enabling/disabling the event type.\n\nMaps to todo_app_event_types.active."}},"required":[],"description":"Update payload for the Business Event Taxonomy entity (todo_app_event_types).\n\nAll properties are optional to support partial updates. System-managed fields (id, created_at, updated_at) are not accepted here. Be mindful that changing the code can impact downstream producers and consumers; business policy should govern whether this is allowed."},"ITodoAppBusinessEvent.ESortKey":{"oneOf":[{"const":"occurred_at","description":"Sortable column keys supported by business event listings.\n\n- occurred_at: Domain time when the event actually occurred.\n- created_at: Ingestion time when the record was persisted."},{"const":"created_at","description":"Sortable column keys supported by business event listings.\n\n- occurred_at: Domain time when the event actually occurred.\n- created_at: Ingestion time when the record was persisted."}],"description":"Sortable column keys supported by business event listings.\n\n- occurred_at: Domain time when the event actually occurred.\n- created_at: Ingestion time when the record was persisted."},"ITodoAppBusinessEvent.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Page number for pagination. Unsigned 32-bit integer semantics are expected by business rules.\n\nThis parameter does not exist in the database; it's an API-level control."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Maximum number of records per page. Business defaults commonly 20, allowed range 1–100.\n\nAPI-level control, not a database column."},"sort":{"$ref":"#/components/schemas/ITodoAppBusinessEvent.ESortKey","description":"Primary sort key for listing. Defaults to occurred_at when not provided."},"direction":{"$ref":"#/components/schemas/EOrderDirection","description":"Sort direction paired with the sort key. Defaults to desc when not provided."},"todo_app_event_type_id":{"type":"string","format":"uuid","description":"Filter by classification: FK to todo_app_event_types.id.\n\nMatches Prisma column todo_app_business_events.todo_app_event_type_id."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by actor user: FK to todo_app_users.id.\n\nMatches Prisma column todo_app_business_events.todo_app_user_id."},"todo_app_todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by target Todo: FK to todo_app_todos.id.\n\nMatches Prisma column todo_app_business_events.todo_app_todo_id."},"todo_app_session_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by session: FK to todo_app_sessions.id.\n\nMatches Prisma column todo_app_business_events.todo_app_session_id."},"occurred_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive lower bound for occurred_at filter (ISO 8601 date-time, UTC or with timezone).\n\nOccurs in API only; not a stored column."},"occurred_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive upper bound for occurred_at filter (ISO 8601 date-time, UTC or with timezone).\n\nAPI-only filter; not a stored column."},"source":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by emitter/source identifier (e.g., \"web\", \"api\", \"job\").\n\nMaps to todo_app_business_events.source."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by IP address (text). May include IPv4 or IPv6 string forms.\n\nMaps to todo_app_business_events.ip."},"message_q":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Case-insensitive substring search term applied to message.\n\nLeverages GIN trigram index on message as declared in Prisma (todo_app_business_events)."}},"required":[],"description":"Search and filtering request for Business Events (todo_app_business_events).\n\nThe properties map to filterable dimensions and pagination/sorting controls. No database writes occur via this structure. Ownership and role-based access are enforced at the controller/service layers.\n\nImportant: This request must not include credentials, tokens, or secrets; it strictly contains search criteria."},"ITodoAppBusinessEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the business event record.\n\nMaps to todo_app_business_events.id."},"todo_app_event_type_id":{"type":"string","format":"uuid","description":"Classification reference for this event.\n\nMaps to todo_app_business_events.todo_app_event_type_id (FK to todo_app_event_types.id)."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Actor user when available.\n\nMaps to todo_app_business_events.todo_app_user_id (nullable FK to todo_app_users.id)."},"todo_app_todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Target Todo when applicable.\n\nMaps to todo_app_business_events.todo_app_todo_id (nullable FK to todo_app_todos.id)."},"todo_app_session_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Session context when applicable.\n\nMaps to todo_app_business_events.todo_app_session_id (nullable FK to todo_app_sessions.id)."},"occurred_at":{"type":"string","format":"date-time","description":"Domain timestamp when the event occurred.\n\nMaps to todo_app_business_events.occurred_at."},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable message describing the event in business terms.\n\nMaps to todo_app_business_events.message."},"source":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional emitter or subsystem identifier (e.g., \"web\", \"api\", \"job\").\n\nMaps to todo_app_business_events.source."},"external_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional external/upstream event identifier for idempotency/deduplication.\n\nMaps to todo_app_business_events.external_id."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional best-effort client IP captured at event time.\n\nMaps to todo_app_business_events.ip."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional user-agent string captured at event time for diagnostics and analytics.\n\nMaps to todo_app_business_events.user_agent."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ingestion time).\n\nMaps to todo_app_business_events.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp (system-managed).\n\nMaps to todo_app_business_events.updated_at."}},"required":["id","todo_app_event_type_id","occurred_at","created_at","updated_at"],"description":"Business Event entity mirrored from Prisma model todo_app_business_events.\n\nThis representation exposes classification, optional actor/target/session references as UUIDs, domain and ingestion timestamps, and optional descriptive metadata such as message, source, ip, and user_agent. Sensitive authentication secrets are never included. Access is restricted to authorized administrative contexts according to service policy."},"ITodoAppEventCountersDaily":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the daily counter row.\n\nPrisma column: todo_app_event_counters_daily.id (UUID)."},"todo_app_event_type_id":{"type":"string","format":"uuid","description":"Classified event type identifier referenced by this counter snapshot.\n\nPrisma column: todo_app_event_counters_daily.todo_app_event_type_id → todo_app_event_types.id (FK)."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional actor user dimension for the daily count.\n\nPrisma column: todo_app_event_counters_daily.todo_app_user_id → todo_app_users.id (nullable)."},"todo_app_todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional target Todo dimension for the daily count.\n\nPrisma column: todo_app_event_counters_daily.todo_app_todo_id → todo_app_todos.id (nullable)."},"bucket_date":{"type":"string","format":"date-time","description":"Start of the calendar day (00:00:00) in the chosen reference timezone representing the counting bucket.\n\nPrisma column: todo_app_event_counters_daily.bucket_date (timestamptz)."},"count":{"type":"integer","minimum":0,"description":"Total number of events observed for the specified dimensions within the bucket day.\n\nPrisma column: todo_app_event_counters_daily.count (integer)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma column: todo_app_event_counters_daily.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma column: todo_app_event_counters_daily.updated_at (timestamptz)."}},"required":["id","todo_app_event_type_id","bucket_date","count","created_at","updated_at"],"description":"Daily business event counters per dimensions.\n\nThis schema represents the Prisma model todo_app_event_counters_daily, which stores per‑day counts of business events keyed by event type and optional user/todo dimensions. It preserves time‑series history for analytics and governance.\n\nColumns include bucket_date (day start), count (integer), and optional dimension references. History is append‑only and read‑oriented for KPI queries."},"ITodoAppEventCountersDaily.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based). Defaults are service-defined.\n\nDerived from standard pagination patterns (1..n)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit (1–100). Typical default is 20.\n\nBusiness rule derived from listing conventions."},"event_type_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by classified event type (FK to todo_app_event_types.id)."},"user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter by actor user dimension (FK to todo_app_users.id).\n\nAdministrative analytics only."},"todo_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter by target Todo dimension (FK to todo_app_todos.id).\n\nAdministrative analytics only."},"bucket_date_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive lower bound for bucket_date (start-of-day). ISO 8601 date-time."},"bucket_date_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive upper bound for bucket_date (start-of-day). ISO 8601 date-time."},"sort_by":{"oneOf":[{"const":"bucket_date"},{"const":"count"},{"const":"created_at"},{"const":"updated_at"},{"type":"null"}],"description":"Sort key for results. Supported fields: bucket_date, count, created_at, updated_at."},"sort_dir":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction for ordering results."}},"required":[],"description":"Request payload for searching and paginating daily event counters.\n\nThis DTO targets the Prisma model todo_app_event_counters_daily and supports administrative analytics: pagination, optional dimension filters (event type, user, todo), date range constraints, and sorting."},"ITodoAppAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the audit log entry.\n\nPrisma column: todo_app_audit_logs.id (UUID)."},"actor_user_id":{"type":"string","format":"uuid","description":"Acting user's identifier for attribution and accountability.\n\nPrisma column: todo_app_audit_logs.actor_user_id → todo_app_users.id (FK)."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional target user's identifier when the action involves a specific account.\n\nPrisma column: todo_app_audit_logs.target_user_id → todo_app_users.id (nullable FK)."},"action":{"type":"string","description":"Business action identifier (e.g., \"login\", \"logout\", \"suspend_account\", \"data_export_request\").\n\nPrisma column: todo_app_audit_logs.action (text)."},"resource_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Domain resource category or model name associated with the action (e.g., \"todo_app_todos\", \"todo_app_sessions\").\n\nPrisma column: todo_app_audit_logs.resource_type (text, nullable)."},"resource_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Identifier of the resource related to this event when applicable. String-typed to accommodate non-UUID external identifiers.\n\nPrisma column: todo_app_audit_logs.resource_id (text, nullable)."},"success":{"type":"boolean","description":"Whether the attempted action succeeded (true) or failed (false).\n\nPrisma column: todo_app_audit_logs.success (boolean)."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Origin IP address captured at the time of the event.\n\nPrisma column: todo_app_audit_logs.ip (text, nullable)."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client user-agent string captured at the time of the event.\n\nPrisma column: todo_app_audit_logs.user_agent (text, nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (event capture time).\n\nPrisma column: todo_app_audit_logs.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp (operational correction/audit enrichment time).\n\nPrisma column: todo_app_audit_logs.updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for retention workflows. Null means active/retained.\n\nPrisma column: todo_app_audit_logs.deleted_at (timestamptz, nullable)."}},"required":["id","actor_user_id","action","success","created_at","updated_at"],"description":"Append-only audit trail capturing sensitive operations.\n\nThis schema models the Prisma table todo_app_audit_logs, which records security-relevant actions with actor/target references, resource context, outcomes, and client metadata. Private todo text is never stored here, aligning with the model comments.\n\nUse for governance reviews, incident investigation, and compliance reporting."},"ITodoAppAuditLog.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size limit (1–100). Typical default is 20."},"actor_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter for actions performed by a specific actor user (admin-only analytics)."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter for actions targeting a specific user (admin-only analytics)."},"action":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by action identifier (exact or substring per implementation)."},"resource_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by resource category/model name."},"resource_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by resource identifier (may be non-UUID)."},"success":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by outcome: true for succeeded actions, false for failed attempts."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by origin IP address (text)."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by client user-agent (substring matches permitted by implementation)."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive lower bound for created_at (ISO 8601)."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Inclusive upper bound for created_at (ISO 8601)."},"sort_by":{"oneOf":[{"const":"created_at"},{"const":"action"},{"const":"success"},{"type":"null"}],"description":"Sort key for results. Supported fields: created_at (default), action, success."},"sort_dir":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction for ordering results."}},"required":[],"description":"Request payload for searching and paginating audit logs.\n\nThis DTO targets the Prisma model todo_app_audit_logs and supports administrative governance: pagination, flexible filters across action/resource/outcome, time windows, and ordering."},"ITodoAppAdminAction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the administrative action.\n\nMaps to Prisma column todo_app_admin_actions.id (UUID). This value uniquely identifies a privileged administrative operation captured for governance review."},"admin_user_id":{"type":"string","format":"uuid","description":"Administrator actor's user identifier.\n\nMaps to Prisma column todo_app_admin_actions.admin_user_id referencing todo_app_users.id. Indicates who performed the privileged action for auditability."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional target user's identifier affected by the administrative action.\n\nMaps to Prisma column todo_app_admin_actions.target_user_id (nullable FK to todo_app_users.id). Null when the action is service-wide or not tied to a specific account."},"action":{"type":"string","description":"Administrative action key.\n\nMaps to Prisma column todo_app_admin_actions.action. Examples: \"suspend_account\", \"reactivate_account\", \"revoke_sessions\", \"update_service_config\". Used for governance classification and search."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business reason provided by the administrator.\n\nMaps to Prisma column todo_app_admin_actions.reason (nullable). Human-readable context; must not include private Todo content."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Operational notes associated with the action.\n\nMaps to Prisma column todo_app_admin_actions.notes (nullable). Free-form admin comments without private Todo text."},"success":{"type":"boolean","description":"Outcome of the administrative action.\n\nMaps to Prisma column todo_app_admin_actions.success (boolean). True when the operation completed successfully; false otherwise."},"idempotency_key":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional idempotency token for the admin operation.\n\nMaps to Prisma column todo_app_admin_actions.idempotency_key (unique, nullable). Used to guard against accidental duplicate execution."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (action capture time).\n\nMaps to Prisma column todo_app_admin_actions.created_at (timestamptz). Represents when this audit row was created."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nMaps to Prisma column todo_app_admin_actions.updated_at (timestamptz). Typically updated for operational correction or audit enrichment."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp for retention workflows.\n\nMaps to Prisma column todo_app_admin_actions.deleted_at (nullable timestamptz). When not null, the record is considered archived and excluded from normal flows."}},"required":["id","admin_user_id","action","success","created_at","updated_at"],"description":"Administrative action entity for governance audit.\n\nThis schema represents rows from Prisma model todo_app_admin_actions, which stores privileged administrative operations performed by system administrators. Properties align directly with the table columns, referencing user actors and optional targets via foreign keys to todo_app_users.\n\nThe entity contains no private Todo content. Text fields such as reason and notes are intended for human-readable context and must not contain secrets. Timestamps support audit timelines and retention policies."},"ITodoAppAdminAction.EOrderBy":{"oneOf":[{"const":"created_at","description":"Order-by fields supported by administrative action searches.\n\nValues correspond to sortable columns in todo_app_admin_actions. Use with ESortDirection to control sort direction.\n\n- created_at: chronological ordering for recent-first/oldest-first views\n- action: lexical ordering by action key\n- success: boolean outcome ordering (implementation-defined secondary sorts)"},{"const":"action","description":"Order-by fields supported by administrative action searches.\n\nValues correspond to sortable columns in todo_app_admin_actions. Use with ESortDirection to control sort direction.\n\n- created_at: chronological ordering for recent-first/oldest-first views\n- action: lexical ordering by action key\n- success: boolean outcome ordering (implementation-defined secondary sorts)"},{"const":"success","description":"Order-by fields supported by administrative action searches.\n\nValues correspond to sortable columns in todo_app_admin_actions. Use with ESortDirection to control sort direction.\n\n- created_at: chronological ordering for recent-first/oldest-first views\n- action: lexical ordering by action key\n- success: boolean outcome ordering (implementation-defined secondary sorts)"}],"description":"Order-by fields supported by administrative action searches.\n\nValues correspond to sortable columns in todo_app_admin_actions. Use with ESortDirection to control sort direction.\n\n- created_at: chronological ordering for recent-first/oldest-first views\n- action: lexical ordering by action key\n- success: boolean outcome ordering (implementation-defined secondary sorts)"},"ITodoAppAdminAction.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based).\n\nOptional. When null or omitted, the service may use a default of 1."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Maximum records per page.\n\nOptional. When null or omitted, defaults follow policy (commonly 20). The allowed range is 1–100."},"orderBy":{"oneOf":[{"$ref":"#/components/schemas/ITodoAppAdminAction.EOrderBy"},{"type":"null"}],"description":"Column to sort by for the result set.\n\nOptional. Defaults to created_at when unspecified."},"orderDirection":{"oneOf":[{"$ref":"#/components/schemas/ESortDirection"},{"type":"null"}],"description":"Sort direction to apply with orderBy.\n\nOptional. Defaults to \"desc\" for recent-first lists when unspecified."},"admin_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by administrator actor (todo_app_users.id).\n\nOptional filter limiting results to actions performed by a specific admin."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by affected target user (todo_app_users.id).\n\nOptional filter limiting results to actions affecting a specific user."},"action":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by exact administrative action key.\n\nExamples: \"suspend_account\", \"reactivate_account\"."},"success":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by outcome.\n\nTrue for successful operations; false for failed attempts."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start of creation timestamp range filter (inclusive).\n\nISO 8601 date-time (UTC or with timezone)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End of creation timestamp range filter (inclusive).\n\nISO 8601 date-time (UTC or with timezone)."},"q":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search term applied to reason and/or notes fields.\n\nCase-insensitive substring search aligned with GIN trigram indexes on notes and reason per Prisma schema."}},"required":[],"description":"Administrative action search request.\n\nThis DTO expresses pagination, sorting, and filters over todo_app_admin_actions for governance and operations consoles. It does not mutate ownership or create records; it only shapes a read query.\n\nAll properties are optional. When null, a property is ignored by the server-side filter builder. Page and limit follow service defaults if omitted."},"ITodoAppAccountStatusChange":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the status transition record.\n\nMaps to Prisma column todo_app_account_status_changes.id (UUID)."},"target_user_id":{"type":"string","format":"uuid","description":"Subject account identifier undergoing the status change.\n\nMaps to Prisma column todo_app_account_status_changes.target_user_id referencing todo_app_users.id."},"admin_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Administrator actor responsible for the change when manual.\n\nMaps to Prisma column todo_app_account_status_changes.admin_user_id (nullable FK). Null for automated/system-triggered transitions."},"previous_status":{"type":"string","description":"Previous account status value before the transition.\n\nMaps to Prisma column todo_app_account_status_changes.previous_status. Examples: \"pending_verification\", \"active\", \"suspended\", \"deactivated\"."},"new_status":{"type":"string","description":"New account status value after the transition.\n\nMaps to Prisma column todo_app_account_status_changes.new_status. Examples: \"active\", \"suspended\", \"deactivated\"."},"business_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business rationale provided for the transition.\n\nMaps to Prisma column todo_app_account_status_changes.business_reason (nullable). Human-readable; must not include private Todo content."},"has_effect":{"type":"boolean","description":"Indicates whether the transition changed the stored status.\n\nMaps to Prisma column todo_app_account_status_changes.has_effect (boolean). False for no-op attempts."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (transition capture time).\n\nMaps to Prisma column todo_app_account_status_changes.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp (audit enrichment time).\n\nMaps to Prisma column todo_app_account_status_changes.updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp for retention workflows.\n\nMaps to Prisma column todo_app_account_status_changes.deleted_at (nullable timestamptz). Non-null indicates archival; such rows are excluded from normal flows."}},"required":["id","target_user_id","previous_status","new_status","has_effect","created_at","updated_at"],"description":"Account lifecycle status change entity for governance oversight.\n\nRepresents rows from Prisma model todo_app_account_status_changes, which records point-in-time transitions of a user account’s status. It includes optional administrator attribution, rationale text, and audit timestamps.\n\nThis entity contains no private Todo content. It exists solely for lifecycle governance and incident investigation."},"ITodoAppAccountStatusChange.EOrderBy":{"oneOf":[{"const":"created_at","description":"Order-by fields supported by status change searches.\n\nValues correspond to sortable columns in todo_app_account_status_changes. Use with ESortDirection to control sort direction."},{"const":"new_status","description":"Order-by fields supported by status change searches.\n\nValues correspond to sortable columns in todo_app_account_status_changes. Use with ESortDirection to control sort direction."},{"const":"has_effect","description":"Order-by fields supported by status change searches.\n\nValues correspond to sortable columns in todo_app_account_status_changes. Use with ESortDirection to control sort direction."}],"description":"Order-by fields supported by status change searches.\n\nValues correspond to sortable columns in todo_app_account_status_changes. Use with ESortDirection to control sort direction."},"ITodoAppAccountStatusChange.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based).\n\nOptional. Defaults to 1 when unspecified."},"limit":{"oneOf":[{"type":"integer","format":"int32","minimum":1,"maximum":100},{"type":"null"}],"description":"Maximum records per page.\n\nOptional. Defaults to service policy (commonly 20). Allowed range 1–100."},"orderBy":{"oneOf":[{"$ref":"#/components/schemas/ITodoAppAccountStatusChange.EOrderBy"},{"type":"null"}],"description":"Column to sort by for the result set.\n\nOptional. Defaults to created_at when unspecified."},"orderDirection":{"oneOf":[{"$ref":"#/components/schemas/ESortDirection"},{"type":"null"}],"description":"Sort direction to apply with orderBy.\n\nOptional. Defaults to \"desc\" for recent-first lists when unspecified."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by subject account (todo_app_users.id).\n\nOptional. Limits results to status transitions for a specific user."},"admin_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by administrator actor (todo_app_users.id) responsible for manual transitions.\n\nOptional."},"previous_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by previous_status value.\n\nOptional. Example values: \"pending_verification\", \"active\", \"suspended\", \"deactivated\"."},"new_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by new_status value.\n\nOptional. Example values: \"active\", \"suspended\", \"deactivated\"."},"has_effect":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by whether the transition had effect.\n\nOptional. True for effective transitions; false for no-op attempts."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start of creation timestamp range filter (inclusive).\n\nISO 8601 date-time."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End of creation timestamp range filter (inclusive).\n\nISO 8601 date-time."},"q":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text search over business_reason.\n\nCase-insensitive substring search aligned with trigram index on business_reason per Prisma schema."}},"required":[],"description":"Account status change search request.\n\nThis DTO expresses pagination, sorting, and filters over todo_app_account_status_changes for administrative governance. It is read-only and does not mutate account ownership or status by itself.\n\nAll properties are optional. When null, a property is ignored by the server-side filter builder. Page and limit follow service defaults if omitted."},"ITodoAppAggregatedMetric":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the aggregated metric snapshot.\n\nPrisma: todo_app_aggregated_metrics.id"},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional owner/user dimension for the snapshot.\n\nPrisma: todo_app_aggregated_metrics.todo_app_user_id (nullable FK to todo_app_users.id)."},"todo_app_event_type_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional event type dimension for the snapshot.\n\nPrisma: todo_app_aggregated_metrics.todo_app_event_type_id (nullable FK to todo_app_event_types.id)."},"metric_key":{"type":"string","description":"Business metric key identifying the measurement (e.g., 'todos.created', 'latency.p95').\n\nPrisma: todo_app_aggregated_metrics.metric_key"},"granularity":{"type":"string","description":"Aggregation granularity of the snapshot (e.g., 'hour', 'day', 'week', 'month').\n\nPrisma: todo_app_aggregated_metrics.granularity"},"period_start":{"type":"string","format":"date-time","description":"Inclusive start timestamp (UTC) of the aggregation window.\n\nPrisma: todo_app_aggregated_metrics.period_start"},"period_end":{"type":"string","format":"date-time","description":"Exclusive end timestamp (UTC) of the aggregation window.\n\nPrisma: todo_app_aggregated_metrics.period_end"},"value":{"type":"number","description":"Aggregated metric value for the specified window.\n\nPrisma: todo_app_aggregated_metrics.value (double precision)."},"unit":{"type":"string","description":"Unit of the aggregated value (e.g., 'count', 'ms', 'hours').\n\nPrisma: todo_app_aggregated_metrics.unit"},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_aggregated_metrics.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_aggregated_metrics.updated_at"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp used to archive records from normal flows.\n\nPrisma: todo_app_aggregated_metrics.deleted_at (nullable)."}},"required":["id","metric_key","granularity","period_start","period_end","value","unit","created_at","updated_at"],"description":"Aggregated metric snapshot (full entity).\n\nRepresents a historical KPI or metric measured over a fixed time window with an explicit granularity, as defined by the Prisma model todo_app_aggregated_metrics. The entity may also be scoped to a user or event type for dimensional analysis.\n\nThis object is read-only to clients and is returned by detail endpoints and internal analytics tooling; it excludes any private todo content."},"ITodoAppAggregatedMetric.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based). Defaults to service policy when null or omitted."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Maximum items per page (1–100). Defaults per service policy when null or omitted."},"metric_key":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by metric key (e.g., 'todos.created'). Case sensitivity per implementation."},"granularity":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by aggregation granularity (e.g., 'day', 'week')."},"period_start_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for period_start."},"period_start_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for period_start."},"period_end_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for period_end."},"period_end_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for period_end."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by owner/user dimension when available."},"todo_app_event_type_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by event type dimension when available."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort key with optional direction, e.g., 'period_start desc', 'created_at desc'.\n\nSupported fields commonly include period_start, period_end, created_at."}},"required":[],"description":"Search and pagination parameters for listing aggregated metric snapshots.\n\nThis request DTO supports filters aligned to columns in todo_app_aggregated_metrics and standard pagination controls. It intentionally excludes ownership actor IDs as inputs to mutable operations and any system-managed timestamps as client-provided values, satisfying security constraints."},"ITodoAppDailyStat":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the daily statistics row.\n\nPrisma: mv_todo_app_daily_stats.id"},"stats_date":{"type":"string","format":"date-time","description":"Calendar day represented as UTC start-of-day timestamp.\n\nPrisma: mv_todo_app_daily_stats.stats_date"},"todos_created":{"type":"integer","description":"Number of todos created on stats_date.\n\nPrisma: mv_todo_app_daily_stats.todos_created"},"todos_completed":{"type":"integer","description":"Number of todos completed on stats_date.\n\nPrisma: mv_todo_app_daily_stats.todos_completed"},"active_users":{"type":"integer","description":"Distinct count of active users on stats_date.\n\nPrisma: mv_todo_app_daily_stats.active_users"},"completion_ratio":{"type":"number","description":"Ratio of completed to created todos for stats_date.\n\nPrisma: mv_todo_app_daily_stats.completion_ratio"},"refreshed_at":{"type":"string","format":"date-time","description":"Timestamp when this MV row was last refreshed from source data.\n\nPrisma: mv_todo_app_daily_stats.refreshed_at"},"created_at":{"type":"string","format":"date-time","description":"Materialized view row creation timestamp in cache.\n\nPrisma: mv_todo_app_daily_stats.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Materialized view row last refresh timestamp in cache.\n\nPrisma: mv_todo_app_daily_stats.updated_at"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp for the MV row if removed from active view.\n\nPrisma: mv_todo_app_daily_stats.deleted_at (nullable)."}},"required":["id","stats_date","todos_created","todos_completed","active_users","completion_ratio","refreshed_at","created_at","updated_at"],"description":"Daily statistics (full entity).\n\nRepresents a denormalized, read-optimized snapshot for a specific calendar date derived from base sources, as described by the Prisma model mv_todo_app_daily_stats. Includes creation/refresh timestamps for cache introspection and excludes private todo content.\n\nReturned by administrative analytics detail endpoints."},"ITodoAppDailyStat.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100)."},"stats_date_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for stats_date (UTC)."},"stats_date_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for stats_date (UTC)."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort expression, e.g., 'stats_date desc' (default), 'todos_created desc'."}},"required":[],"description":"Search and pagination parameters for listing daily statistics from mv_todo_app_daily_stats.\n\nIncludes date-range filters and page controls; excludes any sensitive identifiers or system-managed timestamps as client inputs."},"ITodoAppKpiCounter":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of mv_todo_app_kpi_counters (UUID).\n\nReferenced from Prisma model mv_todo_app_kpi_counters.id."},"window_start":{"type":"string","format":"date-time","description":"Inclusive start of the KPI window.\n\nPrisma column: window_start (timestamptz)."},"window_end":{"type":"string","format":"date-time","description":"Exclusive end of the KPI window.\n\nPrisma column: window_end (timestamptz)."},"todos_created":{"type":"integer","description":"Total number of todos created within the KPI window.\n\nPrisma column: todos_created (integer)."},"todos_completed":{"type":"integer","description":"Total number of todos completed within the KPI window.\n\nPrisma column: todos_completed (integer)."},"active_users":{"type":"integer","description":"Distinct count of active users within the KPI window.\n\nPrisma column: active_users (integer)."},"avg_time_to_complete_hours":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Average time to complete a todo in hours for the KPI window, if available.\n\nPrisma column: avg_time_to_complete_hours (double precision, nullable)."},"p95_completion_time_hours":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"95th percentile time to complete a todo in hours for the KPI window, if available.\n\nPrisma column: p95_completion_time_hours (double precision, nullable)."},"refreshed_at":{"type":"string","format":"date-time","description":"Timestamp when this KPI row was last refreshed from source data.\n\nPrisma column: refreshed_at (timestamptz)."},"created_at":{"type":"string","format":"date-time","description":"Materialized view row creation timestamp in the cache.\n\nPrisma column: created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Materialized view row last refresh/update timestamp in the cache.\n\nPrisma column: updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for MV row if removed from active view logic.\n\nPrisma column: deleted_at (timestamptz, nullable)."}},"required":["id","window_start","window_end","todos_created","todos_completed","active_users","refreshed_at","created_at","updated_at"],"description":"KPI window snapshot entity sourced from Prisma model mv_todo_app_kpi_counters.\n\nThis record aggregates per-window indicators including counts of created/completed todos and active users, plus optional latency aggregates. It is read-only and intended for administrative analytics as described by the Prisma schema comments.\n\nIncludes system timestamps (created_at, updated_at, refreshed_at) and a soft deletion marker (deleted_at) used by governance flows."},"ITodoAppKpiCounter.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","minimum":1},{"type":"null"}],"description":"Page number for pagination (1-based)."},"limit":{"oneOf":[{"type":"integer","format":"int32","minimum":1,"maximum":100},{"type":"null"}],"description":"Page size (1–100). Default commonly 20."},"window_start_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for window_start filter."},"window_start_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for window_start filter."},"window_end_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for window_end filter."},"window_end_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for window_end filter."},"order_by":{"oneOf":[{"$ref":"#/components/schemas/EOrderByITodoAppKpiCounter"},{"type":"null"}],"description":"Sort key for results. Defaults commonly to window_end."},"order_dir":{"oneOf":[{"$ref":"#/components/schemas/EOrderDirection"},{"type":"null"}],"description":"Sort direction for results (asc|desc). Defaults commonly to desc."}},"required":[],"description":"Search, filter, sort, and pagination request for KPI window snapshots from mv_todo_app_kpi_counters.\n\nAll properties are optional; when omitted, service defaults apply (e.g., order_by window_end, order_dir desc, default page and limit). Date-time values must be RFC 3339 strings."},"ITodoAppUserRateCounter":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of todo_app_user_rate_counters (UUID)."},"todo_app_rate_limit_id":{"type":"string","format":"uuid","description":"Associated rate limit policy ID.\n\nPrisma column: todo_app_rate_limit_id (FK to todo_app_rate_limits.id)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Subject user ID to whom this counter applies.\n\nPrisma column: todo_app_user_id (FK to todo_app_users.id)."},"window_started_at":{"type":"string","format":"date-time","description":"Start timestamp of the counting window.\n\nPrisma column: window_started_at (timestamptz)."},"window_ends_at":{"type":"string","format":"date-time","description":"End timestamp of the counting window.\n\nPrisma column: window_ends_at (timestamptz)."},"count":{"type":"integer","description":"Number of actions recorded within the window for this user/policy.\n\nPrisma column: count (integer)."},"last_action_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the most recent contributing action within the window, if any.\n\nPrisma column: last_action_at (timestamptz, nullable)."},"blocked_until":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If throttled, the time until which actions should be blocked. Null when not blocked.\n\nPrisma column: blocked_until (timestamptz, nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma column: created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma column: updated_at (timestamptz)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp used for archival/cleanup without hard delete.\n\nPrisma column: deleted_at (timestamptz, nullable)."}},"required":["id","todo_app_rate_limit_id","todo_app_user_id","window_started_at","window_ends_at","count","created_at","updated_at"],"description":"User-scoped rate counter window from Prisma model todo_app_user_rate_counters.\n\nSummarizes request counts for a particular user under a specific rate limit policy over a fixed window with optional cooldown (blocked_until). Includes system-managed timestamps and an archival marker (deleted_at) per schema comments."},"ITodoAppUserRateCounter.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination (uint32 semantics)."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum records per page (uint32 semantics). Typical defaults 20; allowed 1–100 by policy."},"todo_app_rate_limit_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by rate limit policy ID when querying across policies."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by subject user ID."},"window_started_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound filter for window_started_at (inclusive)."},"window_started_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound filter for window_started_at (inclusive)."},"window_ends_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound filter for window_ends_at (inclusive)."},"window_ends_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound filter for window_ends_at (inclusive)."},"blocked_only":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"When true, include only counters currently blocked (blocked_until is in the future)."},"order_by":{"oneOf":[{"$ref":"#/components/schemas/ESortTodoAppUserRateCounter"},{"type":"null"}],"description":"Sort key for results. Defaults commonly to window_started_at or last_action_at."},"order_dir":{"oneOf":[{"$ref":"#/components/schemas/ESortDirection"},{"type":"null"}],"description":"Sort direction (asc|desc). Defaults commonly to desc."}},"required":[],"description":"Search, filter, sort, and pagination request for user rate counter windows.\n\nUsed by administrative list operations over todo_app_user_rate_counters. All properties are optional; when omitted, service defaults apply."},"ESortTodoAppKpiCounter":{"oneOf":[{"const":"window_end","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"window_start","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"created_at","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"updated_at","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"todos_created","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"todos_completed","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"active_users","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"avg_time_to_complete_hours","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},{"const":"p95_completion_time_hours","description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."}],"description":"Sortable fields for KPI counters.\n\nValues correspond to columns in mv_todo_app_kpi_counters."},"ESortTodoAppUserRateCounter":{"oneOf":[{"const":"window_started_at","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"window_ends_at","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"last_action_at","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"blocked_until","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"created_at","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"updated_at","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},{"const":"count","description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."}],"description":"Sortable fields for user rate counters.\n\nValues correspond to columns in todo_app_user_rate_counters."},"EBlockedStateFilter":{"oneOf":[{"const":"all","description":"Filter mode for blocked state in IP rate counter searches.\n\n- all: do not filter by blocked_until\n- only_blocked: include only rows with blocked_until in the future (active block)\n- only_unblocked: include rows without an active block"},{"const":"only_blocked","description":"Filter mode for blocked state in IP rate counter searches.\n\n- all: do not filter by blocked_until\n- only_blocked: include only rows with blocked_until in the future (active block)\n- only_unblocked: include rows without an active block"},{"const":"only_unblocked","description":"Filter mode for blocked state in IP rate counter searches.\n\n- all: do not filter by blocked_until\n- only_blocked: include only rows with blocked_until in the future (active block)\n- only_unblocked: include rows without an active block"}],"description":"Filter mode for blocked state in IP rate counter searches.\n\n- all: do not filter by blocked_until\n- only_blocked: include only rows with blocked_until in the future (active block)\n- only_unblocked: include rows without an active block"},"EIpRateCounterOrderBy":{"oneOf":[{"const":"window_started_at","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"window_ends_at","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"last_action_at","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"count","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"blocked_until","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"created_at","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},{"const":"updated_at","description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."}],"description":"Sortable fields for IP rate counter listing.\n\nBacked by columns on Prisma model todo_app_ip_rate_counters."},"ITodoAppIpRateCounter":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the IP rate counter row.\n\nPrisma: todo_app_ip_rate_counters.id"},"todo_app_rate_limit_id":{"type":"string","format":"uuid","description":"Associated rate limit policy identifier.\n\nPrisma: todo_app_ip_rate_counters.todo_app_rate_limit_id (FK to todo_app_rate_limits.id)."},"ip":{"type":"string","description":"Subject IP address (IPv4/IPv6 textual representation).\n\nPrisma: todo_app_ip_rate_counters.ip"},"window_started_at":{"type":"string","format":"date-time","description":"Start of the counting window.\n\nPrisma: todo_app_ip_rate_counters.window_started_at"},"window_ends_at":{"type":"string","format":"date-time","description":"End of the counting window.\n\nPrisma: todo_app_ip_rate_counters.window_ends_at"},"count":{"type":"integer","description":"Number of actions recorded within the window under policy.\n\nPrisma: todo_app_ip_rate_counters.count"},"last_action_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the most recent contributing action, if any.\n\nPrisma: todo_app_ip_rate_counters.last_action_at (nullable)."},"blocked_until":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If set, requests from this IP are throttled until this time.\n\nPrisma: todo_app_ip_rate_counters.blocked_until (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_ip_rate_counters.created_at"},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nPrisma: todo_app_ip_rate_counters.updated_at"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical deletion timestamp for archival/cleanup.\n\nPrisma: todo_app_ip_rate_counters.deleted_at (nullable)."}},"required":["id","todo_app_rate_limit_id","ip","window_started_at","window_ends_at","count","created_at","updated_at"],"description":"IP rate counter (full entity).\n\nRepresents per-IP counters for a configured rate limit policy over a fixed window, as modeled by todo_app_ip_rate_counters. Includes usage counts and optional throttle state (blocked_until). Intended for administrative diagnostics; does not expose secrets or tokens."},"ITodoAppIpRateCounter.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number (1-based)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":100},{"type":"null"}],"description":"Items per page (1–100)."},"todo_app_rate_limit_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by associated rate limit policy identifier."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by IP address (exact or substring per implementation)."},"window_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Lower bound (inclusive) for window_started_at."},"window_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Upper bound (inclusive) for window_ends_at."},"blocked_only":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"When true, include only counters with blocked_until in the future."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort expression, e.g., 'window_started_at desc', 'last_action_at desc'."}},"required":[],"description":"Search and pagination parameters for listing IP rate counters from todo_app_ip_rate_counters.\n\nSupports filtering by policy, IP, window bounds, and throttle state without exposing sensitive fields or actor identifiers."},"ITodoAppTodo.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Todo id (UUID)."},"title":{"type":"string","description":"Display title (1–120 chars)."},"status":{"type":"string","description":"Status 'open' or 'completed'."},"due_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional due date/time for list display."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp to support default sort (newest first)."}},"required":["id","title","status","created_at"],"description":"Summary view of a Todo for list displays.\n\nContains essential, safe properties only; excludes large text and internal fields."},"ITodoAppTodoActivity.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Activity id (UUID)."},"activity_type":{"type":"string","description":"Activity type for list views."},"occurred_at":{"type":"string","format":"date-time","description":"When the activity occurred."},"details":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief details for display."}},"required":["id","activity_type","occurred_at"],"description":"Summary view of a Todo activity suitable for list rendering.\n\nContains essential metadata without large or sensitive content."},"ITodoAppTodoDeletionEvent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Deletion event id (UUID)."},"occurred_at":{"type":"string","format":"date-time","description":"When deletion occurred."},"reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional reason (no secrets)."}},"required":["id","occurred_at"],"description":"Summary view of a Todo deletion audit entry for list displays.\n\nProvides essential deletion context without heavy fields."},"ITodoAppServicePolicy.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the policy."},"namespace":{"type":"string","description":"Logical grouping for the policy."},"code":{"type":"string","description":"Globally unique policy code."},"name":{"type":"string","description":"Display name of the policy."},"active":{"type":"boolean","description":"Whether this policy is in effect."},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Activation start (inclusive)."},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Activation end (exclusive)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."}},"required":["id","namespace","code","name","active","created_at"],"description":"Summary projection of a Service Policy for administrative list views.\n\nOmits raw value to reduce list payload size while preserving key governance fields."},"ITodoAppServiceConfiguration.ISummary":{"type":"object","description":"Administrative summary of a service configuration from Prisma model todo_app_service_configurations. Designed for list views with sensitive value redaction: the raw value column is intentionally omitted here to avoid exposing secrets.\n\nConfigurations are namespaced key/value pairs with optional environment scoping and effectivity windows, optionally linked to a governing service policy.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the configuration.\n\nPrisma: id @id @db.Uuid"},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy id if linked.\n\nPrisma: todo_app_service_policy_id String? @db.Uuid"},"namespace":{"type":"string","description":"Domain grouping for the configuration (e.g., \"core\", \"auth\").\n\nPrisma: namespace String"},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional environment discriminator such as \"prod\", \"staging\", or \"dev\".\n\nPrisma: environment String?"},"key":{"type":"string","description":"Business key name unique within (namespace, environment).\n\nPrisma: key String (unique with namespace/environment)"},"value_type":{"type":"string","description":"Type hint for interpreting the stored value (e.g., string, int, double, boolean, datetime, uri).\n\nPrisma: value_type String"},"is_secret":{"type":"boolean","description":"Marks whether the value is sensitive and should be redacted in logs/listings.\n\nPrisma: is_secret Boolean"},"active":{"type":"boolean","description":"Whether this configuration is enabled for evaluation.\n\nPrisma: active Boolean"},"effective_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional activation start time.\n\nPrisma: effective_from DateTime? @db.Timestamptz"},"effective_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional deactivation time.\n\nPrisma: effective_to DateTime? @db.Timestamptz"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of this configuration record.\n\nPrisma: created_at DateTime @db.Timestamptz"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp of this configuration record.\n\nPrisma: updated_at DateTime @db.Timestamptz"}},"required":["id","namespace","key","value_type","is_secret","active","created_at","updated_at"]},"ITodoAppFeatureFlag.ISummary":{"type":"object","description":"Administrative summary of a feature flag derived from Prisma model todo_app_feature_flags. Includes rollout percentage and evaluation window fields for staged rollouts; omits verbose internal notes to keep list views compact.\n\nFeature flags support namespace/environment scoping and may optionally link to a governing service policy and an administrative owner.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the feature flag.\n\nPrisma: id @id @db.Uuid"},"todo_app_service_policy_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional governing policy id if the flag is associated with one.\n\nPrisma: todo_app_service_policy_id String? @db.Uuid"},"namespace":{"type":"string","description":"Logical grouping (e.g., \"ui\", \"payments\", \"sync\").\n\nPrisma: namespace String"},"environment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional environment scope (e.g., \"prod\", \"staging\", \"dev\").\n\nPrisma: environment String?"},"code":{"type":"string","description":"Unique flag code within (namespace, environment).\n\nPrisma: code String (unique with namespace/environment)"},"name":{"type":"string","description":"Human-readable name of the feature flag.\n\nPrisma: name String"},"active":{"type":"boolean","description":"Whether the flag is enabled for evaluation.\n\nPrisma: active Boolean"},"rollout_percentage":{"type":"integer","minimum":0,"maximum":100,"description":"Percentage-based rollout for progressive exposure (0–100).\n\nPrisma: rollout_percentage Int @db.Integer"},"target_audience":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description of intended audience or segmentation.\n\nPrisma: target_audience String?"},"start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional start time when flag begins evaluation.\n\nPrisma: start_at DateTime? @db.Timestamptz"},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end time after which flag is no longer evaluated.\n\nPrisma: end_at DateTime? @db.Timestamptz"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the flag record.\n\nPrisma: created_at DateTime @db.Timestamptz"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the flag record.\n\nPrisma: updated_at DateTime @db.Timestamptz"}},"required":["id","namespace","code","name","active","rollout_percentage","created_at","updated_at"]},"ITodoAppGuestVisitor.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the role assignment history record from Prisma model todo_app_guestvisitors.id.\n\nEach record captures a grant/revoke event for the guestVisitor role."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner user's UUID referencing Prisma todo_app_users.id via todo_app_guestvisitors.todo_app_user_id.\n\nEnforces which account this role history pertains to."},"granted_at":{"type":"string","format":"date-time","description":"Timestamp from Prisma todo_app_guestvisitors.granted_at when the guestVisitor role was granted.\n\nUsed for ordering and audit timelines."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable timestamp from Prisma todo_app_guestvisitors.revoked_at when the role grant ended.\n\nNull indicates the grant is currently active."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp from Prisma todo_app_guestvisitors.created_at.\n\nTypically equals or follows granted_at."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp from Prisma todo_app_guestvisitors.updated_at.\n\nRole assignment records are append‑mostly; updates are uncommon but tracked for governance."}},"required":["id","todo_app_user_id","granted_at","created_at","updated_at"],"description":"Summary of a guestVisitor role assignment based on Prisma model todo_app_guestvisitors.\n\nCaptures grant and optional revoke timestamps without exposing private content. This type is used in administrative list views to audit role membership history."},"ITodoAppTodoUser.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the role assignment history record.\n\nMaps to Prisma column todo_app_todousers.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner account identifier.\n\nMaps to Prisma FK todo_app_todousers.todo_app_user_id → todo_app_users.id."},"granted_at":{"type":"string","format":"date-time","description":"Grant timestamp for the todoUser role.\n\nMaps to Prisma column todo_app_todousers.granted_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation timestamp when the role ended, or null when the assignment is currently active.\n\nMaps to Prisma column todo_app_todousers.revoked_at (nullable timestamptz)."}},"required":["id","todo_app_user_id","granted_at"],"description":"Summary view of a todoUser role assignment record.\n\nThis schema is optimized for list views, containing essential fields only. It corresponds to the Prisma model todo_app_todousers and intentionally omits internal lifecycle fields like deleted_at in responses."},"ITodoAppSystemAdmin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the system administrator role assignment history record.\n\nMaps to Prisma column todo_app_systemadmins.id (UUID)."},"todo_app_user_id":{"type":"string","format":"uuid","description":"Owner account identifier.\n\nMaps to Prisma FK todo_app_systemadmins.todo_app_user_id → todo_app_users.id."},"granted_at":{"type":"string","format":"date-time","description":"Grant timestamp for the systemAdmin role.\n\nMaps to Prisma column todo_app_systemadmins.granted_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation timestamp when the admin role ended, or null when the assignment is currently active.\n\nMaps to Prisma column todo_app_systemadmins.revoked_at (nullable timestamptz)."}},"required":["id","todo_app_user_id","granted_at"],"description":"Summary view of a systemAdmin role assignment record.\n\nThis schema is optimized for list views, containing essential fields only. It corresponds to the Prisma model todo_app_systemadmins and intentionally omits internal lifecycle fields like deleted_at in responses."},"ITodoAppDataExport.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the export job.\n\nPrisma: todo_app_data_exports.id."},"status":{"type":"string","description":"Workflow status label for the export job, suitable for list views.\n\nPrisma: todo_app_data_exports.status."},"export_format":{"$ref":"#/components/schemas/ETodoAppDataExportFormat","description":"Output format of the export artifact.\n\nPrisma: todo_app_data_exports.export_format."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Completion time for finished jobs; null when not yet completed.\n\nPrisma: todo_app_data_exports.completed_at."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Download link expiry time when applicable; null if unavailable.\n\nPrisma: todo_app_data_exports.expires_at."}},"required":["id","status","export_format"],"description":"Summary projection of a personal data export job for list/search views.\n\nContains essential display fields and omits larger or sensitive details. Backed by todo_app_data_exports."},"ITodoAppAccountDeletionRequest.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the deletion request."},"status":{"type":"string","description":"Workflow status for quick display."},"scheduled_purge_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Scheduled purge time when applicable; used for timeline displays."},"processed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Completion time when the deletion has finished."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for ordering and list views."}},"required":["id","status","created_at"],"description":"Summary projection of the account deletion request for list views.\n\nContains essential properties (id, status, key timestamps) and omits verbose fields to keep listings compact."},"ITodoAppPrivacyConsent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_privacy_consents.id."},"purpose_code":{"type":"string","description":"Consent purpose code.\n\nPrisma: purpose_code."},"purpose_name":{"type":"string","description":"Consent purpose name.\n\nPrisma: purpose_name."},"granted":{"type":"boolean","description":"Grant state.\n\nPrisma: granted."},"granted_at":{"type":"string","format":"date-time","description":"Event time.\n\nPrisma: granted_at."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Revocation time if withdrawn.\n\nPrisma: revoked_at (nullable)."}},"required":["id","purpose_code","purpose_name","granted","granted_at"],"description":"Summary projection of privacy consent suitable for list views. Omits secondary metadata (ip, user_agent) for brevity."},"ITodoAppSession.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the authentication session.\n\nMapped from Prisma column todo_app_sessions.id (UUID)."},"ip":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client IP address (IPv4/IPv6 textual form) observed when the session was established or last used.\n\nMapped from Prisma column todo_app_sessions.ip."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Client user agent string captured at session creation for security analytics and device recognition.\n\nMapped from Prisma column todo_app_sessions.user_agent."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp when the session was issued.\n\nMapped from Prisma column todo_app_sessions.issued_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when the session expires.\n\nMapped from Prisma column todo_app_sessions.expires_at (timestamptz)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the session was revoked, if applicable.\n\nMapped from Prisma column todo_app_sessions.revoked_at (timestamptz)."},"revoked_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable reason for revocation, if any (e.g., user logout, password change, admin action).\n\nMapped from Prisma column todo_app_sessions.revoked_reason."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nMapped from Prisma column todo_app_sessions.created_at (timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nMapped from Prisma column todo_app_sessions.updated_at (timestamptz)."}},"required":["id","issued_at","expires_at","created_at","updated_at"],"description":"Summary projection of an authentication session suitable for account security pages and administrative overviews.\n\nThis schema intentionally omits the raw session_token per security best practices described in the Prisma model comments. It presents only safe metadata like issuance/expiry, revocation state, client IP, and user agent."},"ITodoAppRefreshToken.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the refresh token record.\n\nPrisma reference: todo_app_refresh_tokens.id (UUID primary key)."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp when this refresh token was issued.\n\nPrisma reference: todo_app_refresh_tokens.issued_at (timestamptz)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp when this refresh token expires and becomes invalid.\n\nPrisma reference: todo_app_refresh_tokens.expires_at (timestamptz)."},"rotated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this token was rotated (replaced) by a child token, if applicable.\n\nPrisma reference: todo_app_refresh_tokens.rotated_at (timestamptz, nullable)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this token was revoked, if applicable.\n\nPrisma reference: todo_app_refresh_tokens.revoked_at (timestamptz, nullable)."},"revoked_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable reason for revocation when available (e.g., password change, security event).\n\nPrisma reference: todo_app_refresh_tokens.revoked_reason (text, nullable)."}},"required":["id","issued_at","expires_at"],"description":"Summary DTO of a refresh token used in authentication flows.\n\nThis type intentionally excludes sensitive token secrets. It maps to the Auth schema model todo_app_refresh_tokens, which stores rotation and revocation lifecycle for refresh tokens. Use this summary for list and audit views without exposing `token` or `token_hash`.\n\nSecurity: Do NOT include raw token or token_hash in any response. Only lifecycle metadata (issued_at, expires_at, rotated_at, revoked_at, revoked_reason) is exposed."},"ITodoAppLoginAttempt.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the login attempt.\n\nPrisma: todo_app_login_attempts.id (UUID)."},"email":{"type":"string","format":"email","description":"Email address used for the login attempt.\n\nPrisma: todo_app_login_attempts.email."},"success":{"type":"boolean","description":"Outcome of the login attempt.\n\nPrisma: todo_app_login_attempts.success."},"ip":{"type":"string","description":"Client IP address (text form IPv4/IPv6) captured at attempt time.\n\nPrisma: todo_app_login_attempts.ip."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional client user agent string.\n\nPrisma: todo_app_login_attempts.user_agent (nullable)."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when the attempt occurred.\n\nPrisma: todo_app_login_attempts.occurred_at (timestamptz)."}},"required":["id","email","success","ip","occurred_at"],"description":"Summary view of a login attempt suited for list pages.\n\nIncludes only essential, non‑secret fields for display and sorting. Backed by Prisma table todo_app_login_attempts."},"ITodoAppRateLimit.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_rate_limits.id"},"code":{"type":"string","description":"Unique business code.\n\nPrisma: todo_app_rate_limits.code"},"name":{"type":"string","description":"Display name.\n\nPrisma: todo_app_rate_limits.name"},"scope":{"$ref":"#/components/schemas/ERateLimitScope","description":"Scope dimension.\n\nPrisma: todo_app_rate_limits.scope"},"category":{"$ref":"#/components/schemas/ERateLimitCategory","description":"Action category.\n\nPrisma: todo_app_rate_limits.category"},"window_seconds":{"type":"integer","description":"Window duration in seconds.\n\nPrisma: todo_app_rate_limits.window_seconds"},"max_requests":{"type":"integer","description":"Max requests per window.\n\nPrisma: todo_app_rate_limits.max_requests"},"enabled":{"type":"boolean","description":"Policy enabled flag.\n\nPrisma: todo_app_rate_limits.enabled"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp.\n\nPrisma: todo_app_rate_limits.created_at"}},"required":["id","code","name","scope","category","window_seconds","max_requests","enabled","created_at"],"description":"Summary projection of a rate limit policy for list views."},"ITodoAppEventType.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key.\n\nPrisma: todo_app_event_types.id."},"code":{"type":"string","description":"Stable identifier.\n\nPrisma: todo_app_event_types.code."},"name":{"type":"string","description":"Human-readable title.\n\nPrisma: todo_app_event_types.name."},"active":{"type":"boolean","description":"Enablement state.\n\nPrisma: todo_app_event_types.active."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nPrisma: todo_app_event_types.created_at."}},"required":["id","code","name","active","created_at"],"description":"Summary view of an event type for administrative listings."},"ITodoAppAuditLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the audit log entry.\n\nPrisma column: todo_app_audit_logs.id (UUID)."},"actor_user_id":{"type":"string","format":"uuid","description":"Acting user's identifier for attribution and accountability.\n\nPrisma column: todo_app_audit_logs.actor_user_id → todo_app_users.id (FK)."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional target user's identifier when the action involves a specific account.\n\nPrisma column: todo_app_audit_logs.target_user_id → todo_app_users.id (nullable FK)."},"action":{"type":"string","description":"Business action identifier (e.g., \"login\", \"logout\", \"suspend_account\").\n\nPrisma column: todo_app_audit_logs.action (text)."},"success":{"type":"boolean","description":"Outcome of the action: true on success, false on failure.\n\nPrisma column: todo_app_audit_logs.success (boolean)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (event capture time).\n\nPrisma column: todo_app_audit_logs.created_at (timestamptz)."}},"required":["id","actor_user_id","action","success","created_at"],"description":"Audit log summary for list views.\n\nThis projection contains only essential, non-sensitive attributes appropriate for administrative listings, derived from the Prisma table todo_app_audit_logs.\n\nUse this type for paginated summaries; fetch the full ITodoAppAuditLog for detailed inspection."},"ITodoAppAdminAction.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the administrative action.\n\nMaps to Prisma todo_app_admin_actions.id."},"admin_user_id":{"type":"string","format":"uuid","description":"Administrator actor's user ID who performed the action.\n\nMaps to Prisma todo_app_admin_actions.admin_user_id referencing todo_app_users.id."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional target user's ID affected by the action.\n\nMaps to Prisma todo_app_admin_actions.target_user_id (nullable FK)."},"action":{"type":"string","description":"Administrative action key (e.g., \"suspend_account\", \"reactivate_account\").\n\nMaps to Prisma todo_app_admin_actions.action."},"success":{"type":"boolean","description":"Outcome of the administrative action.\n\nMaps to Prisma todo_app_admin_actions.success."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the admin action record.\n\nMaps to Prisma todo_app_admin_actions.created_at (timestamptz)."}},"required":["id","admin_user_id","action","success","created_at"],"description":"Summary view of an administrative action for list displays.\n\nDerived from Prisma model todo_app_admin_actions, selecting essential fields suited for administrative listings and dashboards while avoiding verbose text fields by default."},"ITodoAppAccountStatusChange.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the status change record.\n\nMaps to Prisma todo_app_account_status_changes.id."},"target_user_id":{"type":"string","format":"uuid","description":"Subject user ID whose account status changed.\n\nMaps to Prisma todo_app_account_status_changes.target_user_id referencing todo_app_users.id."},"previous_status":{"type":"string","description":"Previous account status before the change.\n\nMaps to Prisma todo_app_account_status_changes.previous_status."},"new_status":{"type":"string","description":"New account status after the change.\n\nMaps to Prisma todo_app_account_status_changes.new_status."},"has_effect":{"type":"boolean","description":"Indicates whether the transition actually changed stored status.\n\nMaps to Prisma todo_app_account_status_changes.has_effect."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the status change was captured.\n\nMaps to Prisma todo_app_account_status_changes.created_at (timestamptz)."}},"required":["id","target_user_id","previous_status","new_status","has_effect","created_at"],"description":"Summary view of an account status change for administrative listings.\n\nBased on Prisma model todo_app_account_status_changes, this summary captures key fields necessary for governance review and audit dashboards."},"ITodoAppAggregatedMetric.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the aggregated metric snapshot.\n\nMaps to todo_app_aggregated_metrics.id (UUID)."},"metric_key":{"type":"string","description":"Business metric identifier (e.g., 'todos.created', 'todos.completed', 'latency.p95').\n\nMaps to todo_app_aggregated_metrics.metric_key."},"granularity":{"type":"string","description":"Aggregation granularity for the snapshot such as 'hour', 'day', 'week', or 'month'.\n\nMaps to todo_app_aggregated_metrics.granularity."},"period_start":{"type":"string","format":"date-time","description":"Inclusive start timestamp for the aggregation window (UTC).\n\nMaps to todo_app_aggregated_metrics.period_start (timestamptz)."},"period_end":{"type":"string","format":"date-time","description":"Exclusive end timestamp for the aggregation window (UTC).\n\nMaps to todo_app_aggregated_metrics.period_end (timestamptz)."},"value":{"type":"number","description":"Aggregated numeric value for the metric within the window.\n\nMaps to todo_app_aggregated_metrics.value (double precision)."},"unit":{"type":"string","description":"Measurement unit of the value (e.g., 'count', 'ms', 'hours').\n\nMaps to todo_app_aggregated_metrics.unit."},"todo_app_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional owner dimension for the snapshot (user-specific view).\n\nMaps to todo_app_aggregated_metrics.todo_app_user_id; nullable."},"todo_app_event_type_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional event type dimension for the snapshot.\n\nMaps to todo_app_aggregated_metrics.todo_app_event_type_id; nullable."},"created_at":{"type":"string","format":"date-time","description":"Snapshot record creation timestamp.\n\nMaps to todo_app_aggregated_metrics.created_at (timestamptz)."}},"required":["id","metric_key","granularity","period_start","period_end","value","unit","created_at"],"description":"Aggregated metric snapshot summary.\n\nThis schema summarizes historical KPI snapshots from todo_app_aggregated_metrics, including metric key, granularity, window, value, and unit. Optional dimensions scope the metric to a user or event type as defined in the Prisma model.\n\nIntended for list and dashboard overviews; it avoids private todo content and focuses on numerical indicators and timestamps."},"ITodoAppDailyStat.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Identifier of the daily statistics row.\n\nPrisma: mv_todo_app_daily_stats.id"},"stats_date":{"type":"string","format":"date-time","description":"Calendar date represented as start-of-day UTC timestamp.\n\nPrisma: mv_todo_app_daily_stats.stats_date"},"todos_created":{"type":"integer","format":"int32","description":"Number of todos created on stats_date.\n\nPrisma: mv_todo_app_daily_stats.todos_created"},"todos_completed":{"type":"integer","format":"int32","description":"Number of todos completed on stats_date.\n\nPrisma: mv_todo_app_daily_stats.todos_completed"},"active_users":{"type":"integer","format":"int32","description":"Distinct count of active users on stats_date.\n\nPrisma: mv_todo_app_daily_stats.active_users"},"completion_ratio":{"type":"number","description":"Completed / Created ratio for stats_date.\n\nPrisma: mv_todo_app_daily_stats.completion_ratio"}},"required":["id","stats_date","todos_created","todos_completed","active_users","completion_ratio"],"description":"Summary projection of a daily statistics row for list views.\n\nDerived from mv_todo_app_daily_stats. Contains essential metrics only; omits cache lifecycle timestamps to keep list payloads lean."},"ITodoAppIpRateCounter.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the IP rate counter record.\n\nPrisma: todo_app_ip_rate_counters.id"},"todo_app_rate_limit_id":{"type":"string","format":"uuid","description":"Identifier of the associated rate limit policy.\n\nPrisma: todo_app_ip_rate_counters.todo_app_rate_limit_id"},"ip":{"type":"string","description":"Subject IP address (IPv4/IPv6, textual).\n\nPrisma: todo_app_ip_rate_counters.ip"},"window_started_at":{"type":"string","format":"date-time","description":"Start timestamp of the counting window.\n\nPrisma: todo_app_ip_rate_counters.window_started_at"},"window_ends_at":{"type":"string","format":"date-time","description":"End timestamp of the counting window.\n\nPrisma: todo_app_ip_rate_counters.window_ends_at"},"count":{"type":"integer","description":"Total actions recorded within the window.\n\nPrisma: todo_app_ip_rate_counters.count"},"last_action_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Most recent contributing action time, when available.\n\nPrisma: todo_app_ip_rate_counters.last_action_at"},"blocked_until":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If present, indicates a current throttle until this time; null when not blocked.\n\nPrisma: todo_app_ip_rate_counters.blocked_until"}},"required":["id","todo_app_rate_limit_id","ip","window_started_at","window_ends_at","count"],"description":"Summary projection for listing IP rate counter windows.\n\nIncludes identifiers, window bounds, usage count, and optional activity/throttle timestamps suitable for administrative list views."},"ETodoStatusFilter":{"oneOf":[{"const":"all","description":"Status filter for Todo list views.\n\nThis enum is used by request types to scope results over the todo_app_todos model. It maps to the Prisma column todo_app_todos.status, which stores business values such as \"open\" and \"completed\". The special value \"all\" indicates that both states should be included (while still excluding records with deleted_at).\n\n- all: Include both open and completed items (deleted_at still excluded by application policy)\n- open: Include only items whose status column equals \"open\"\n- completed: Include only items whose status column equals \"completed\""},{"const":"open","description":"Status filter for Todo list views.\n\nThis enum is used by request types to scope results over the todo_app_todos model. It maps to the Prisma column todo_app_todos.status, which stores business values such as \"open\" and \"completed\". The special value \"all\" indicates that both states should be included (while still excluding records with deleted_at).\n\n- all: Include both open and completed items (deleted_at still excluded by application policy)\n- open: Include only items whose status column equals \"open\"\n- completed: Include only items whose status column equals \"completed\""},{"const":"completed","description":"Status filter for Todo list views.\n\nThis enum is used by request types to scope results over the todo_app_todos model. It maps to the Prisma column todo_app_todos.status, which stores business values such as \"open\" and \"completed\". The special value \"all\" indicates that both states should be included (while still excluding records with deleted_at).\n\n- all: Include both open and completed items (deleted_at still excluded by application policy)\n- open: Include only items whose status column equals \"open\"\n- completed: Include only items whose status column equals \"completed\""}],"description":"Status filter for Todo list views.\n\nThis enum is used by request types to scope results over the todo_app_todos model. It maps to the Prisma column todo_app_todos.status, which stores business values such as \"open\" and \"completed\". The special value \"all\" indicates that both states should be included (while still excluding records with deleted_at).\n\n- all: Include both open and completed items (deleted_at still excluded by application policy)\n- open: Include only items whose status column equals \"open\"\n- completed: Include only items whose status column equals \"completed\""},"ETodoDueFilter":{"oneOf":[{"const":"overdue","description":"Due-window filter applied to list views of the todo_app_todos table.\n\nThis filter is evaluated against the Prisma column todo_app_todos.due_at using the requesting user’s timezone context. It never includes deleted rows (deleted_at not null).\n\n- overdue: due_at is earlier than now and status is not \"completed\"\n- today: due_at falls on the requester’s current local calendar date and status is not \"completed\"\n- future: due_at is later than today in the requester’s timezone and status is not \"completed\""},{"const":"today","description":"Due-window filter applied to list views of the todo_app_todos table.\n\nThis filter is evaluated against the Prisma column todo_app_todos.due_at using the requesting user’s timezone context. It never includes deleted rows (deleted_at not null).\n\n- overdue: due_at is earlier than now and status is not \"completed\"\n- today: due_at falls on the requester’s current local calendar date and status is not \"completed\"\n- future: due_at is later than today in the requester’s timezone and status is not \"completed\""},{"const":"future","description":"Due-window filter applied to list views of the todo_app_todos table.\n\nThis filter is evaluated against the Prisma column todo_app_todos.due_at using the requesting user’s timezone context. It never includes deleted rows (deleted_at not null).\n\n- overdue: due_at is earlier than now and status is not \"completed\"\n- today: due_at falls on the requester’s current local calendar date and status is not \"completed\"\n- future: due_at is later than today in the requester’s timezone and status is not \"completed\""}],"description":"Due-window filter applied to list views of the todo_app_todos table.\n\nThis filter is evaluated against the Prisma column todo_app_todos.due_at using the requesting user’s timezone context. It never includes deleted rows (deleted_at not null).\n\n- overdue: due_at is earlier than now and status is not \"completed\"\n- today: due_at falls on the requester’s current local calendar date and status is not \"completed\"\n- future: due_at is later than today in the requester’s timezone and status is not \"completed\""},"ETodoSortField":{"oneOf":[{"const":"created_at","description":"Sortable fields for Todo list views, aligned to Prisma columns.\n\n- created_at: Sort by todo_app_todos.created_at, typically descending by default\n- due_at: Sort by todo_app_todos.due_at, ascending by default with items lacking due_at appearing last"},{"const":"due_at","description":"Sortable fields for Todo list views, aligned to Prisma columns.\n\n- created_at: Sort by todo_app_todos.created_at, typically descending by default\n- due_at: Sort by todo_app_todos.due_at, ascending by default with items lacking due_at appearing last"}],"description":"Sortable fields for Todo list views, aligned to Prisma columns.\n\n- created_at: Sort by todo_app_todos.created_at, typically descending by default\n- due_at: Sort by todo_app_todos.due_at, ascending by default with items lacking due_at appearing last"},"ETodoSortDirection":{"oneOf":[{"const":"asc","description":"Sort direction for list views.\n\n- asc: Ascending order\n- desc: Descending order (commonly the default for created_at)"},{"const":"desc","description":"Sort direction for list views.\n\n- asc: Ascending order\n- desc: Descending order (commonly the default for created_at)"}],"description":"Sort direction for list views.\n\n- asc: Ascending order\n- desc: Descending order (commonly the default for created_at)"},"IRecord":{"type":"object","properties":{},"required":[],"description":"Generic object record used as a placeholder for base pagination containers.\n\nThis named schema satisfies the \"Named References Only\" rule by avoiding inline anonymous object types. Concrete APIs should not rely on IRecord for final designs; instead, they must use entity-specific schemas (e.g., ITodoAppTodo.ISummary)."},"ITodoAppAccountDeletionRequest.ISort":{"type":"object","properties":{"orderBy":{"$ref":"#/components/schemas/EAccountDeletionRequestOrderBy","description":"Field used for ordering results.\n\nMaps to a column on todo_app_account_deletion_requests."},"direction":{"$ref":"#/components/schemas/ESortDirection","description":"Optional sort direction. Default typically desc for time-based fields."}},"required":["orderBy"],"description":"Sort directive for account deletion request listings.\n\nNested variant under ITodoAppAccountDeletionRequest to follow naming conventions."},"EOrderByITodoAppKpiCounter":{"oneOf":[{"const":"window_end","description":"Sort key options for KPI window snapshots (mv_todo_app_kpi_counters).\n\nValues map to Prisma columns:\n- window_end: mv_todo_app_kpi_counters.window_end\n- window_start: mv_todo_app_kpi_counters.window_start\n- created_at: mv_todo_app_kpi_counters.created_at\n- updated_at: mv_todo_app_kpi_counters.updated_at"},{"const":"window_start","description":"Sort key options for KPI window snapshots (mv_todo_app_kpi_counters).\n\nValues map to Prisma columns:\n- window_end: mv_todo_app_kpi_counters.window_end\n- window_start: mv_todo_app_kpi_counters.window_start\n- created_at: mv_todo_app_kpi_counters.created_at\n- updated_at: mv_todo_app_kpi_counters.updated_at"},{"const":"created_at","description":"Sort key options for KPI window snapshots (mv_todo_app_kpi_counters).\n\nValues map to Prisma columns:\n- window_end: mv_todo_app_kpi_counters.window_end\n- window_start: mv_todo_app_kpi_counters.window_start\n- created_at: mv_todo_app_kpi_counters.created_at\n- updated_at: mv_todo_app_kpi_counters.updated_at"},{"const":"updated_at","description":"Sort key options for KPI window snapshots (mv_todo_app_kpi_counters).\n\nValues map to Prisma columns:\n- window_end: mv_todo_app_kpi_counters.window_end\n- window_start: mv_todo_app_kpi_counters.window_start\n- created_at: mv_todo_app_kpi_counters.created_at\n- updated_at: mv_todo_app_kpi_counters.updated_at"}],"description":"Sort key options for KPI window snapshots (mv_todo_app_kpi_counters).\n\nValues map to Prisma columns:\n- window_end: mv_todo_app_kpi_counters.window_end\n- window_start: mv_todo_app_kpi_counters.window_start\n- created_at: mv_todo_app_kpi_counters.created_at\n- updated_at: mv_todo_app_kpi_counters.updated_at"},"ITodoAppKpiCounter.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Identifier of the KPI counter row.\n\nPrisma: mv_todo_app_kpi_counters.id"},"window_start":{"type":"string","format":"date-time","description":"Inclusive start of the KPI window.\n\nPrisma: mv_todo_app_kpi_counters.window_start"},"window_end":{"type":"string","format":"date-time","description":"Exclusive end of the KPI window.\n\nPrisma: mv_todo_app_kpi_counters.window_end"},"todos_created":{"type":"integer","format":"int32","description":"Todos created within the window.\n\nPrisma: mv_todo_app_kpi_counters.todos_created"},"todos_completed":{"type":"integer","format":"int32","description":"Todos completed within the window.\n\nPrisma: mv_todo_app_kpi_counters.todos_completed"},"active_users":{"type":"integer","format":"int32","description":"Distinct active users within the window.\n\nPrisma: mv_todo_app_kpi_counters.active_users"},"avg_time_to_complete_hours":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Average hours to complete a todo in the window (nullable).\n\nPrisma: mv_todo_app_kpi_counters.avg_time_to_complete_hours"},"p95_completion_time_hours":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"95th percentile hours to complete a todo in the window (nullable).\n\nPrisma: mv_todo_app_kpi_counters.p95_completion_time_hours"}},"required":["id","window_start","window_end","todos_created","todos_completed","active_users"],"description":"Summary projection of a KPI window snapshot for list views.\n\nBased on mv_todo_app_kpi_counters; includes essential counters and optional latency aggregates."},"IPageITodoAppKpiCounter.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/ITodoAppKpiCounter.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."}}}}